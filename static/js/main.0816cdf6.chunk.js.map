{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["require","App","rows","useState","form","setForm","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useEffect","database","ref","limitToFirst","once","then","snapshot","data","push","val","map","item","Object","values","i","id","bedrift","beskrivelse","cpv","dato","kategori","kategorier","subkategori","className","style","height","width","idProperty","rowHeight","columns","field","headerName","multiline","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,qBCKfA,EAAQ,KACRA,EAAQ,KA2FOC,MAvFf,WAAgB,IA2CXC,EA3CU,EACUC,mBAAS,MADnB,mBACPC,EADO,KACDC,EADC,KAoEd,OArDKC,IAASC,KAAKC,QAClBF,IAASG,cAZa,CACtBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qEACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAMhBC,qBAAU,WACTZ,IACEa,WACAC,IAAI,0BACJC,aAAa,KACbC,KAAK,SACLC,MAAK,SAACC,GACN,IAAIC,EAAO,GACXA,EAAKC,KAAKF,EAASG,OACnBtB,EAAQoB,EAAKG,KAAI,SAACC,GAAD,OAAUC,OAAOC,OAAOF,MAAO,SAE9C,IAgBD3B,EADJE,EACWA,EAAKwB,KAAI,SAACC,EAAMG,GACxB,MAAO,CACNC,GAAID,EACJE,QAASL,EAAKK,QACdC,YAAaN,EAAKM,YAClBC,IAAKP,EAAKO,IACVC,KAAMR,EAAKQ,KACXC,SAAUT,EAAKU,WACfC,YAAaX,EAAKW,gBAGX,CACR,CACCP,GAAI,UACJC,QAAS,aACTC,YAAa,aACbC,IAAK,aACLC,KAAM,aACNC,SAAU,aACVE,YAAa,eAKhB,sBAAKC,UAAU,MAAf,UACC,gDACA,qBAAKC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAAlC,SACC,cAAC,IAAD,CACCC,WAAW,KACXC,UAAW,IACNC,QAzCO,CACf,CAAEC,MAAO,UAAWC,WAAY,UAAWL,MAAO,KAClD,CAAEI,MAAO,cAAeC,WAAY,cAAeL,MAAO,KAC1D,CAAEI,MAAO,MAAOC,WAAY,MAAOL,MAAO,KAC1C,CAAEI,MAAO,OAAQC,WAAY,OAAQL,MAAO,KAC5C,CAAEI,MAAO,WAAYC,WAAY,WAAYL,MAAO,KACpD,CAAEI,MAAO,cAAeC,WAAY,eAAgBL,MAAO,MAoCnD1C,KAAMA,EACNgD,WAAW,EACXR,MA9CY,CAAES,UAAW,aC9BpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0816cdf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nrequire('firebase/auth')\nrequire('firebase/database')\n\n\n\nfunction App() {\n\tconst [form, setForm] = useState(null)\n\n\t// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\tconst firebaseConfig = {\n\t\tapiKey: \"AIzaSyCMDIwwubzh4Xt6nujcK65akULxjgHnT3E\",\n\t\tauthDomain: \"doffin-bach.firebaseapp.com\",\n\t\tdatabaseURL: \"https://doffin-bach-default-rtdb.europe-west1.firebasedatabase.app\",\n\t\tprojectId: \"doffin-bach\",\n\t\tstorageBucket: \"doffin-bach.appspot.com\",\n\t\tmessagingSenderId: \"16468608817\",\n\t\tappId: \"1:16468608817:web:f708022a44a453b4ca1210\",\n\t\tmeasurementId: \"G-QXSYS06S5N\"\n\t}\n\n\tif (!firebase.apps.length) {\n\t\tfirebase.initializeApp(firebaseConfig)\n\t}\n\tuseEffect(() => {\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref('formattedData/F02_2014')\n\t\t\t.limitToFirst(100)\t\n\t\t\t.once('value')\n\t\t\t.then((snapshot) => {\n\t\t\t\tlet data = []\n\t\t\t\tdata.push(snapshot.val())\n\t\t\t\tsetForm(data.map((item) => Object.values(item))[0])\n\t\t\t})\n  \t}, [])\n\n\n    const gridStyle = { minHeight: 550 }\n  \n\tconst columns = [\n\t\t{ field: 'bedrift', headerName: 'Bedrift', width: 200 },\n\t\t{ field: 'beskrivelse', headerName: 'Beskrivelse', width: 700},\n\t\t{ field: 'cpv', headerName: 'CPV', width: 200 },\n\t\t{ field: 'dato', headerName: 'Dato', width: 120 },\n\t\t{ field: 'kategori', headerName: 'Kategori', width: 200 },\n\t\t{ field: 'subkategori', headerName: 'Sub kategori', width: 300 },\n  ]\n  \n\tlet rows\n\tform\n\t\t? (rows = form.map((item, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: i,\n\t\t\t\t\tbedrift: item.bedrift,\n\t\t\t\t\tbeskrivelse: item.beskrivelse,\n\t\t\t\t\tcpv: item.cpv,\n\t\t\t\t\tdato: item.dato,\n\t\t\t\t\tkategori: item.kategorier,\n\t\t\t\t\tsubkategori: item.subkategori,\n\t\t\t\t}\n\t\t  }))\n\t\t: (rows = [\n\t\t\t\t{\n\t\t\t\t\tid: 520982058,\n\t\t\t\t\tbedrift: 'Loading...',\n\t\t\t\t\tbeskrivelse: 'Loading...',\n\t\t\t\t\tcpv: 'Loading...',\n\t\t\t\t\tdato: 'Loading...',\n\t\t\t\t\tkategori: 'Loading...',\n\t\t\t\t\tsubkategori: 'Loading...',\n\t\t\t\t},\n\t\t  ])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Form: F02_2014</h1>\n\t\t\t<div style={{ height: 800, width: '100%' }}>\n\t\t\t\t<DataGrid\n\t\t\t\t\tidProperty=\"id\"\n\t\t\t\t\trowHeight={100}\n          columns={columns}\n          rows={rows}\n          multiline={true}\n          style={gridStyle}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{/* </header> */}\n\t\t</div>\n\t)\n}\n// 100 av 100 sortert pÃ¥ data\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}