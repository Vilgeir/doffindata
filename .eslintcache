[{"/Users/evy/Documents/GitHub/doffindata/src/index.js":"1","/Users/evy/Documents/GitHub/doffindata/src/App.js":"2","/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js":"3","/Users/evy/Documents/GitHub/doffindata/src/context/StateProvider.js":"4","/Users/evy/Documents/GitHub/doffindata/src/components/Footer.jsx":"5","/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx":"6","/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx":"7","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx":"8","/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx":"9","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx":"10","/Users/evy/Documents/GitHub/doffindata/src/helpers/functions.js":"11","/Users/evy/Documents/GitHub/doffindata/src/helpers/handleData.js":"12","/Users/evy/Documents/GitHub/doffindata/src/components/CategoryCards.jsx":"13","/Users/evy/Documents/GitHub/doffindata/src/components/AlgoliaSearch.jsx":"14","/Users/evy/Documents/GitHub/doffindata/src/components/Search.jsx":"15","/Users/evy/Documents/GitHub/doffindata/src/components/SearchData.jsx":"16","/Users/evy/Documents/GitHub/doffindata/src/components/homeIcons.jsx":"17","/Users/evy/Documents/GitHub/doffindata/src/components/SavedSearch.jsx":"18","/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx":"19","/Users/evy/Documents/GitHub/doffindata/src/components/Card.jsx":"20","/Users/evy/Documents/GitHub/doffindata/src/components/SaveSearch.jsx":"21","/Users/evy/Documents/GitHub/doffindata/src/data/withMainCategories.jsx":"22","/Users/evy/Documents/GitHub/doffindata/src/firebaseConfig.js":"23","/Users/evy/Documents/GitHub/doffindata/src/data/fylker.jsx":"24","/Users/evy/Documents/GitHub/doffindata/src/components/SavedModal.jsx":"25","/Users/evy/Documents/GitHub/doffindata/src/components/Checkboxes.jsx":"26","/Users/evy/Documents/GitHub/doffindata/src/data/withNorwegianNames.jsx":"27"},{"size":596,"mtime":1619693291852,"results":"28","hashOfConfig":"29"},{"size":1154,"mtime":1620026780699,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1613323008891,"results":"31","hashOfConfig":"29"},{"size":785,"mtime":1620122546316,"results":"32","hashOfConfig":"29"},{"size":400,"mtime":1619430230383,"results":"33","hashOfConfig":"29"},{"size":480,"mtime":1619430230383,"results":"34","hashOfConfig":"29"},{"size":1986,"mtime":1620375264091,"results":"35","hashOfConfig":"29"},{"size":5346,"mtime":1620391069542,"results":"36","hashOfConfig":"29"},{"size":2149,"mtime":1620391859885,"results":"37","hashOfConfig":"29"},{"size":9522,"mtime":1620300958434,"results":"38","hashOfConfig":"29"},{"size":2345,"mtime":1620375264090,"results":"39","hashOfConfig":"29"},{"size":1520,"mtime":1620300958430,"results":"40","hashOfConfig":"29"},{"size":693,"mtime":1620300958423,"results":"41","hashOfConfig":"29"},{"size":2377,"mtime":1620375264089,"results":"42","hashOfConfig":"29"},{"size":398,"mtime":1619421397778,"results":"43","hashOfConfig":"29"},{"size":337,"mtime":1619693291848,"results":"44","hashOfConfig":"29"},{"size":868,"mtime":1620306047339,"results":"45","hashOfConfig":"29"},{"size":3618,"mtime":1620375264090,"results":"46","hashOfConfig":"29"},{"size":10164,"mtime":1620397692477,"results":"47","hashOfConfig":"29"},{"size":788,"mtime":1620391069541,"results":"48","hashOfConfig":"29"},{"size":1644,"mtime":1620397403718,"results":"49","hashOfConfig":"29"},{"size":213077,"mtime":1615726505677,"results":"50","hashOfConfig":"51"},{"size":616,"mtime":1618484781999,"results":"52","hashOfConfig":"29"},{"size":405,"mtime":1615191349970,"results":"53","hashOfConfig":"29"},{"size":1191,"mtime":1620306047338,"results":"54","hashOfConfig":"29"},{"size":272,"mtime":1620300958424,"results":"55","hashOfConfig":"29"},{"size":215211,"mtime":1620114835984,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"5s57ed",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tv5mr7",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/evy/Documents/GitHub/doffindata/src/index.js",[],["119","120"],"/Users/evy/Documents/GitHub/doffindata/src/App.js",[],"/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/evy/Documents/GitHub/doffindata/src/context/StateProvider.js",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Footer.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx",["121"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withNorwegianNames\";\nimport { useParams } from \"react-router-dom\";\n\nimport { StateContext } from \"../context/StateProvider\";\nimport { homeIcons } from \"../helpers/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CategoryCards from \"../components/CategoryCards\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { capitalizeAndReplace } from \"../helpers/functions\";\n\nfunction Categories() {\n  const { setcheckedCategories, setCheckedFylker } = useContext(StateContext);\n  const { category } = useParams();\n\n  useEffect(() => {\n    setcheckedCategories([]);\n    setCheckedFylker([]);\n  }, []);\n\n  return (\n    <>\n      <div className=\"breadcrums\">\n        <Link to={\"/\"}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={{ category }}>Kategori</Link>\n      </div>\n      <div className=\"home-container\">\n        <div className=\"head\">\n          <div className=\"search-home\">\n            <AlgoliaSearch />\n            <div className=\"categories-head\">\n              <div\n                className=\"homeicon-container\"\n                style={homeIcons(category).style}\n              >\n                <FontAwesomeIcon\n                  id=\"homeicon-icon\"\n                  icon={homeIcons(category).icon}\n                />\n              </div>\n              <h3>{capitalizeAndReplace(category)}</h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"categories\">\n          {structure.map(\n            (i) =>\n              i.main === capitalizeAndReplace(category) &&\n              i.children.map((item, idx) => (\n                <CategoryCards item={item} key={idx} category={category} />\n              ))\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Categories;\n","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx",["122"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProcurement } from '../helpers/handleData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DetailedInfo({ i }) {\n  const [procurementData, setProcurement] = useState([])\n  const { category, details, procurement } = useParams()\n\n  const getData = () => {\n    getProcurement('tendre', procurement, setProcurement)\n  }\n  useEffect(() => {\n    getData()\n  }, [])\n  let newdetails = details.split('+')\n  let categorycpv = newdetails[0]\n\n  console.log(procurementData)\n  return (\n    <>\n      <div className='breadcrums'>\n        <Link to={'/'}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category}>Kategori</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category + '/' + categorycpv}>Resultat</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category + '/' + categorycpv + '/' + procurement}>\n          Anbud\n        </Link>\n      </div>\n      <div className='info-container'>\n        <div className='info-left-bar'>\n          <h3>{procurementData.oppdragsgiver}</h3>\n          <h1>{procurementData.tittel}</h1>\n          <div className='info-card'>\n            {procurementData.kunngjoringsdato && (\n              <p>\n                <b>Publiseringsdato: </b> {procurementData.kunngjoringsdato}\n              </p>\n            )}\n            {procurementData.tilbudsfrist && (\n              <p>\n                <b>Tilbudsfrist: </b> {procurementData.tilbudsfrist}\n              </p>\n            )}\n            <p>\n              <b>Tildelingskriterie: </b> {procurementData.tildelingskriterier}\n            </p>\n            {procurementData.pris && (\n              <p>\n                <b>Pris: </b> {procurementData.pris}\n              </p>\n            )}\n            <p>\n              <b>CPV-kode: </b> {procurementData.cpvnumber}\n            </p>\n\n            <p>{procurementData.beskrivelse}</p>\n          </div>\n          <div className='info-card'>\n            <h6>Dokumenter</h6>\n\n            {procurementData.documents ? (\n              procurementData.documents.map((i, index) => (\n                <a key={index} href={'https://www.mercell.com' + i.url}>\n                  {i.name}\n                </a>\n              ))\n            ) : (\n              <>\n                <p>Last ned dokumentene her:</p>\n                <a href={procurementData.url_dokumentasjon}>\n                  {procurementData.url_dokumentasjon}\n                </a>\n              </>\n            )}\n          </div>\n          <div className='info-card'>\n            <h6>Ytelsestype</h6>\n            {procurementData.tilleggsCPV &&\n              procurementData.tilleggsCPV.map(\n                (i, index) =>\n                  i !== null && (\n                    <div className='ytelsestyper' key={index}>\n                      <p className='cpv'>{Object.keys(i)}</p>\n                      <p>{Object.values(i)}</p>\n                    </div>\n                  )\n              )}\n          </div>\n        </div>\n        <div className='info-right-bar'>\n          <button className='button'>Meld interesse</button>\n          <div className='info-right-bar-article'>\n            <div className='headline-div'>\n              <h4 className='headline border'>Kontakt</h4>\n            </div>\n            {procurementData.sporsmalsfrist && (\n              <p>\n                <b>Spørsmålsfrist: </b>\n                {procurementData.sporsmalsfrist}\n              </p>\n            )}\n\n            {procurementData.kontaktperson && (\n              <p>\n                <b>Kontaktperson: </b>\n                {procurementData.kontaktperson}\n              </p>\n            )}\n\n            {procurementData.telefon && (\n              <p>\n                <b>Telefon: </b>\n                {procurementData.telefon}\n              </p>\n            )}\n            {procurementData.epost && (\n              <p className='email'>\n                <b>E-post: </b> {procurementData.epost}\n              </p>\n            )}\n          </div>\n          <div className='info-right-bar-article'>\n            <div className='headline-div'>\n              <h4 className='headline border'>Innkjøper</h4>\n            </div>\n            <p>\n              <b>Oppdragsgiver: </b> {procurementData.oppdragsgiver}\n            </p>\n            <p>\n              <b>Org nr.: </b>\n              {procurementData.orgnr}\n            </p>\n            <p>\n              <b>Adresse: </b> {procurementData.adresse} <br></br>\n              {procurementData.postkode}\n              {', '} {procurementData.sted}\n              <br></br> {procurementData.land}\n            </p>\n          </div>\n          <div className='info-right-bar-article'>\n            <div className='headline-div'>\n              <h4 className='headline border'>Nettsted</h4>\n            </div>\n            <p>\n              <a href={procurementData.url_oppdragsgiver}>Oppdragsgiver</a>\n            </p>\n            <p>\n              <a href={procurementData.url_kjoperprofil}>Kjøperprofil</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default DetailedInfo\n","/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx",["123","124","125","126","127","128","129","130"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withNorwegianNames\";\nimport \"../index.css\";\nimport SavedSearch from \"../components/SavedSearch\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport HomeIcons from \"../components/homeIcons\";\nimport { getData } from \"../helpers/handleData\";\nimport { StateContext } from \"../context/StateProvider\";\n\nfunction Home(props) {\n  const { setcheckedCategories, setCheckedFylker, setKommuner } = useContext(\n    StateContext\n  );\n\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState();\n  const [searchDataDefault, setSearchDataDefault] = useState(\n    structure.map((i) => i.main)\n  );\n\n  const [serverData, setServerData] = useState([]);\n\n  useEffect(() => {\n    setcheckedCategories([]);\n    setCheckedFylker([]);\n    setKommuner([]);\n  }, []);\n\n  let arrrray = [];\n  let mainCpv = \"\";\n\n  useEffect(() => {\n    getData(\"F02_2014\", \"cpv\", mainCpv, setServerData);\n  }, []);\n\n  Object.entries(serverData).map((i) => arrrray.push(i));\n\n  const updateInput = (input) => {\n    const filtered = searchDataDefault.filter((main) => {\n      if (isNaN()) {\n        return main.toLowerCase().includes(input.toLowerCase());\n      }\n      return main;\n    });\n    if (input === \"\") return setInput(input), setSearchData([]);\n    return setInput(input), setSearchData(filtered);\n  };\n\n  return (\n    <div className=\"home-main-container\">\n      <div>\n        <div className=\"breadcrums\">\n          <Link to={\"/\"}>Hjem</Link>\n        </div>\n        <div className=\"home-container\">\n          <div className=\"home-head\">\n            <div className=\"search-home\">\n              <AlgoliaSearch />\n            </div>\n          </div>\n          <h3 className=\"headline\">Alle kategorier</h3>\n        </div>\n        <div className=\"box-container\">\n          {structure.map((i, index) => (\n            <HomeIcons i={i} key={index} />\n          ))}\n        </div>\n      </div>\n      <div className=\"home-saved-search\">\n        <SavedSearch />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx",["131","132","133","134"],"import React, { useEffect, useState, useContext } from 'react'\nimport Filter from '../components/Filter'\nimport SaveSearch from '../components/SaveSearch'\nimport Card from '../components/Card'\nimport { useParams } from 'react-router-dom'\nimport structure from '../data/withNorwegianNames'\nimport { StateContext } from '../context/StateProvider'\nimport { Link } from 'react-router-dom'\nimport {\n  getProcurements,\n  getProcurementsWithCounty,\n} from '../helpers/handleData'\nimport fylkerKommuner from '../data/fylkerkommuner.json'\nimport { capitalize } from '../helpers/functions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DetailedList() {\n  const {\n    checkedCategories,\n    setcheckedCategories,\n    checkedFylker,\n    kommuner,\n  } = useContext(StateContext)\n  const [removeChecked, setRemoveChecked] = useState([])\n  const [sort, setSort] = useState()\n  const [checked, setChecked] = useState([])\n  const [saveSearch, setSaveSearch] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n\n  const [documents, setDocuments] = useState([])\n  const { category, details } = useParams()\n\n  useEffect(() => {\n    let arr = []\n    Object.values(checkedCategories)\n      .map((i) => arr.push(Object.keys(i)))\n      .flat()\n    Object.values(checkedCategories)\n      .map((i) => Object.values(i).map((item) => arr.push(item)))\n      .flat()\n    checkedCategories && setChecked(arr.flat())\n  }, [checkedCategories])\n\n  useEffect(() => {\n    let obj = {\n      checkedCategories,\n      category: category,\n      cpv: categorycpv,\n      fylker: checkedFylker,\n      kommuner: kommuner,\n    }\n\n    window.localStorage.setItem('lastSearch', JSON.stringify(obj))\n  }, [checkedCategories])\n\n  let newdetails = details.split('+')\n  let categorycpv = newdetails[0]\n  let subcategory = newdetails[1]\n\n  const initialCagetory = () => {\n    subcategory && setcheckedCategories([{ [subcategory]: [] }])\n    subcategory && setChecked([subcategory])\n  }\n  useEffect(() => {\n    initialCagetory()\n  }, [])\n\n  useEffect(() => {\n    setDocuments([])\n    let category = []\n    let subcat = []\n\n    checked.filter((i) =>\n      i.substring(3, 8) === '00000'\n        ? category.push(i)\n        : i.substring(4, 8) === '0000' && subcat.push(i)\n    )\n\n    subcat.map((i) =>\n      category.map(\n        (item, index) =>\n          item.substring(0, 3).includes(i.substring(0, 3)) &&\n          category.splice(index, 1)\n      )\n    )\n\n    let kommunerFlat = kommuner.flat().map((i) => i.Kommune)\n    if ((category.length > 0 || subcat.length > 0) && kommunerFlat.length > 0) {\n      kommunerFlat.map((kommune) => {\n        category.map((cpv) =>\n          getProcurementsWithCounty(\n            'tendre',\n            'cpvnumbersub',\n            cpv,\n            'sted',\n            kommune,\n            setDocuments,\n            documents\n          )\n        )\n        subcat.map((cpv) =>\n          getProcurementsWithCounty(\n            'tendre',\n            'cpvnumbersubsub',\n            cpv,\n            'sted',\n            kommune,\n            setDocuments,\n            documents\n          )\n        )\n      })\n    } else if (\n      (category.length > 0 || subcat.length > 0) &&\n      kommunerFlat.length === 0\n    ) {\n      category.map((i) =>\n        getProcurements('tendre', 'cpvnumbersub', i, setDocuments, documents)\n      )\n\n      subcat.map((i) =>\n        getProcurements('tendre', 'cpvnumbersubsub', i, setDocuments, documents)\n      )\n    } else if (\n      kommunerFlat.length > 0 &&\n      category.length === 0 &&\n      subcat.length === 0\n    ) {\n      kommunerFlat.forEach((kommune) =>\n        getProcurementsWithCounty(\n          'tendre',\n          'cpvnumbermain',\n          categorycpv,\n          'sted',\n          kommune,\n          setDocuments,\n          documents\n        )\n      )\n    } else if (\n      kommunerFlat.length === 0 &&\n      category.length === 0 &&\n      subcat.length === 0\n    ) {\n      getProcurements(\n        'tendre',\n        'cpvnumbermain',\n        categorycpv,\n        setDocuments,\n        documents\n      )\n    }\n    return documents\n  }, [checked])\n  let newArray = []\n\n  const byCity = (arr, secondArr) =>\n    secondArr.length > 0\n      ? arr.filter((item) =>\n          secondArr\n            .flat()\n            .map((kom) => kom.Kommune)\n            .includes(capitalize(item.sted))\n        )\n      : arr\n\n  Object.entries(documents).map((i) => newArray.push(i[1]))\n\n  const sorting = (a, b) => {\n    if (sort === 'asc') {\n      return a.tittel > b.tittel ? 1 : -1\n    } else if (sort === 'desc') {\n      return a.tittel < b.tittel ? 1 : -1\n    } else if (sort === 'date') {\n      return a.kunngjoringsdato < b.kunngjoringsdato ? 1 : -1\n    }\n    return 0\n  }\n\n  const sortedArray = newArray.sort(sorting)\n  const onChange = (event) => {\n    setSort(event.target.value)\n  }\n\n  return (\n    <>\n      <div className='breadcrums'>\n        <Link to={'/'}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category}>Kategori</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category + '/' + categorycpv}>Resultat</Link>\n      </div>\n      <div className='detail-container'>\n        <div className='search'>\n          <Filter\n            fylkerKommuner={fylkerKommuner}\n            openModal={openModal}\n            setOpenModal={setOpenModal}\n            details={categorycpv}\n            subcategory={subcategory}\n            category={category}\n            removeChecked={removeChecked}\n            setRemoveChecked={setRemoveChecked}\n            checked={checked}\n            setChecked={setChecked}\n            saveSearch={saveSearch}\n            setSaveSearch={setSaveSearch}\n          />\n        </div>\n        <div className='list-container'>\n          {subcategory\n            ? structure.map(\n                (item) =>\n                  item.main === category &&\n                  item.children.map((it) =>\n                    it.children.map(\n                      (i, index) =>\n                        i.code === subcategory && (\n                          <h1 key={index}>\n                            {i.name} (CPV {i.code})\n                          </h1>\n                        )\n                    )\n                  )\n              )\n            : structure.map(\n                (item) =>\n                  item.main === category &&\n                  item.children.map(\n                    (i, index) =>\n                      i.code === categorycpv && (\n                        <h1 key={index}>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n              )}\n          <div className='select-box-title'>\n            <p className='sorting'>Sorter etter: </p>\n            <select className='select-box' onChange={onChange}>\n              <option value='asc'>ASC</option>\n              <option value='desc'>DESC</option>\n              <option value='date'>Publisert</option>\n            </select>\n          </div>\n          {checkedCategories.length > 0\n            ? byCity(sortedArray, kommuner).map((i) =>\n                checkedCategories.map((checked) =>\n                  Object.values(checked)[0].length > 0\n                    ? Object.values(checked)[0].map(\n                        (check) =>\n                          i.cpvnumber\n                            .substring(0, 4)\n                            .includes(check.substring(0, 4)) && (\n                            <Link\n                              style={{ textDecoration: 'none', color: 'black' }}\n                              to={\n                                '/' + category + '/' + categorycpv + '/' + i.id\n                              }\n                              i={i}\n                              key={i.id}\n                            >\n                              <Card i={i} />\n                            </Link>\n                          )\n                      )\n                    : i.cpvnumber\n                        .substring(0, 3)\n                        .includes(Object.keys(checked)[0].substring(0, 3)) && (\n                        <Link\n                          key={i.id}\n                          style={{ textDecoration: 'none', color: 'black' }}\n                          to={'/' + category + '/' + categorycpv + '/' + i.id}\n                          i={i}\n                        >\n                          <Card i={i} />\n                        </Link>\n                      )\n                )\n              )\n            : byCity(sortedArray, kommuner).map(\n                (i) =>\n                  i.cpvnumber.substring(0, 2) ===\n                    categorycpv.substring(0, 2) && (\n                    <Link\n                      key={i.id}\n                      style={{ textDecoration: 'none', color: 'black' }}\n                      to={'/' + category + '/' + categorycpv + '/' + i.id}\n                      i={i}\n                    >\n                      <Card i={i} />\n                    </Link>\n                  )\n              )}\n        </div>\n        {saveSearch && (\n          <SaveSearch\n            checkedFylker={checkedFylker}\n            setSaveSearch={setSaveSearch}\n            checkedCategories={checkedCategories}\n            category={category}\n            categorycpv={categorycpv}\n            checked={checked}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default DetailedList\n","/Users/evy/Documents/GitHub/doffindata/src/helpers/functions.js",[],"/Users/evy/Documents/GitHub/doffindata/src/helpers/handleData.js",[],"/Users/evy/Documents/GitHub/doffindata/src/components/CategoryCards.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/AlgoliaSearch.jsx",["135"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport structure from \"../data/withNorwegianNames\";\nimport { toLowerCaseAndReplace } from \"../helpers/functions\";\n\nfunction AlgoliaSearch() {\n  const [query, setQuery] = useState(\"\");\n  const [hits, setHits] = useState([]);\n\n  const { category } = useParams();\n\n  const searchClient = algoliasearch(\n    \"QG9J28HNQ9\",\n    \"bdf4769c7a050792225f3a0613a4bec4\"\n  );\n\n  let index;\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      if (query) {\n        index = searchClient.initIndex(\"tendre\");\n        const result = await index.search(query);\n        setHits(result.hits);\n      } else {\n        setHits([]);\n      }\n    };\n    search();\n  }, [query]);\n\n  // const highlight = () => {\n  //   return hits[0].toString().replace(query, \"e\");\n  // };\n\n  return (\n    <div>\n      <input\n        className=\"searchbar\"\n        type=\"text\"\n        onChange={handleChange}\n        placeholder=\"Søk på anbud\"\n      />\n      <div className=\"a-search\">\n        {hits.map((i) => (\n          <div className=\"search-result\">\n            {structure.map((item) =>\n              item.children.map((it) =>\n                it.code.substring(0, 2) === i.cpvnumber.substring(0, 2) ? (\n                  <div className=\"\">\n                    <Link\n                      to={\n                        \"/\" +\n                        toLowerCaseAndReplace(item.main) +\n                        \"/\" +\n                        i.cpvnumbermain +\n                        \"/\" +\n                        i.objectID\n                      }\n                    >\n                      <p className=\"p-search\">{i.tittel}</p>\n                      <p className=\"place-search\">\n                        Sted: {i.sted.toUpperCase()}\n                      </p>\n                      <h4 className=\"h4-search\">CPV: {i.cpvnumber}</h4>\n                    </Link>\n                  </div>\n                ) : undefined\n              )\n            )}\n            <Link to={\"/\" + category + \"/\" + i.cpvsearch}>\n              <h3>{i.cpvmainsearch}</h3>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoliaSearch;\n","/Users/evy/Documents/GitHub/doffindata/src/components/Search.jsx",[],["136","137"],"/Users/evy/Documents/GitHub/doffindata/src/components/SearchData.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/homeIcons.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SavedSearch.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx",["138","139","140"],"/Users/evy/Documents/GitHub/doffindata/src/components/Card.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SaveSearch.jsx",["141"],"/Users/evy/Documents/GitHub/doffindata/src/data/withMainCategories.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/firebaseConfig.js",[],"/Users/evy/Documents/GitHub/doffindata/src/data/fylker.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SavedModal.jsx",["142"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { StateContext } from '../context/StateProvider'\n\nfunction SavedModal() {\n  const { setcheckedCategories } = useContext(StateContext)\n  const [saved, setSaved] = useState([])\n  let arr = Object.keys(localStorage).filter(\n    (elem) => elem !== 'ally-supports-cache' && elem !== 'lastSearch'\n  )\n  useEffect(() => {\n    arr.map((elem) =>\n      setSaved((prevstate) => [\n        ...prevstate,\n        { [elem]: JSON.parse(localStorage.getItem(elem)) },\n      ])\n    )\n  }, [])\n\n  const handleClick = (i) => {\n    Object.values(i).map(\n      (item) =>\n        item.checkedCategories && setcheckedCategories(item.checkedCategories)\n    )\n  }\n  return (\n    <div className='saved-modal'>\n      <h4>Mine lagrede søk</h4>\n      {saved.map((i, index) => (\n        <Link\n          to={\n            '/' + Object.values(i)[0].category + '/' + Object.values(i)[0].cpv\n          }\n          key={index}\n          className='saved-modal-item'\n          onClick={() => handleClick(i)}\n        >\n          {Object.keys(i)[0]}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default SavedModal\n","/Users/evy/Documents/GitHub/doffindata/src/components/Checkboxes.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/data/withNorwegianNames.jsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":21,"column":6,"nodeType":"149","endLine":21,"endColumn":8,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":17,"column":6,"nodeType":"149","endLine":17,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":15},{"ruleId":"153","severity":1,"message":"157","line":17,"column":10,"nodeType":"155","messageId":"156","endLine":17,"endColumn":20},{"ruleId":"153","severity":1,"message":"158","line":18,"column":29,"nodeType":"155","messageId":"156","endLine":18,"endColumn":49},{"ruleId":"147","severity":1,"message":"159","line":28,"column":6,"nodeType":"149","endLine":28,"endColumn":8,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"161","line":35,"column":6,"nodeType":"149","endLine":35,"endColumn":8,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":39,"column":9,"nodeType":"155","messageId":"156","endLine":39,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":46,"column":45,"nodeType":"166","messageId":"167","endLine":46,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":47,"column":27,"nodeType":"166","messageId":"167","endLine":47,"endColumn":28},{"ruleId":"147","severity":1,"message":"168","line":55,"column":6,"nodeType":"149","endLine":55,"endColumn":25,"suggestions":"169"},{"ruleId":"147","severity":1,"message":"170","line":67,"column":6,"nodeType":"149","endLine":67,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":90,"column":34,"nodeType":"174","messageId":"175","endLine":90,"endColumn":36},{"ruleId":"147","severity":1,"message":"176","line":155,"column":6,"nodeType":"149","endLine":155,"endColumn":15,"suggestions":"177"},{"ruleId":"147","severity":1,"message":"178","line":28,"column":17,"nodeType":"179","endLine":28,"endColumn":49},{"ruleId":"143","replacedBy":"180"},{"ruleId":"145","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":47,"column":48,"nodeType":"184","messageId":"185","endLine":47,"endColumn":50},{"ruleId":"147","severity":1,"message":"186","line":76,"column":6,"nodeType":"149","endLine":76,"endColumn":21,"suggestions":"187"},{"ruleId":"147","severity":1,"message":"188","line":96,"column":6,"nodeType":"149","endLine":96,"endColumn":16,"suggestions":"189"},{"ruleId":"153","severity":1,"message":"190","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":16},{"ruleId":"147","severity":1,"message":"191","line":18,"column":6,"nodeType":"149","endLine":18,"endColumn":8,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCheckedFylker' and 'setcheckedCategories'. Either include them or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["196"],"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'searchData' is assigned a value but never used.","'setSearchDataDefault' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCheckedFylker', 'setKommuner', and 'setcheckedCategories'. Either include them or remove the dependency array.",["197"],"React Hook useEffect has a missing dependency: 'mainCpv'. Either include it or remove the dependency array.",["198"],"'updateInput' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'category', 'categorycpv', 'checkedFylker', and 'kommuner'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'initialCagetory'. Either include it or remove the dependency array.",["200"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'categorycpv', 'documents', and 'kommuner'. Either include them or remove the dependency array.",["201"],"Assignments to the 'index' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["193"],["194"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["202"],"React Hook useEffect has a missing dependency: 'setCheckedFylker'. Either include it or remove the dependency array.",["203"],"'jsonData' is defined but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [setCheckedFylker, setcheckedCategories]",{"range":"225","text":"226"},"Update the dependencies array to be: [getData]",{"range":"227","text":"228"},"Update the dependencies array to be: [setCheckedFylker, setKommuner, setcheckedCategories]",{"range":"229","text":"230"},"Update the dependencies array to be: [mainCpv]",{"range":"231","text":"232"},"Update the dependencies array to be: [category, categorycpv, checkedCategories, checkedFylker, kommuner]",{"range":"233","text":"234"},"Update the dependencies array to be: [initialCagetory]",{"range":"235","text":"236"},"Update the dependencies array to be: [categorycpv, checked, documents, kommuner]",{"range":"237","text":"238"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"239","text":"240"},"Update the dependencies array to be: [kommuner, setCheckedFylker]",{"range":"241","text":"242"},"Update the dependencies array to be: [arr]",{"range":"243","text":"244"},[832,834],"[setCheckedFylker, setcheckedCategories]",[593,595],"[getData]",[918,920],"[setCheckedFylker, setKommuner, setcheckedCategories]",[1046,1048],"[mainCpv]",[1771,1790],"[category, categorycpv, checkedCategories, checkedFylker, kommuner]",[2095,2097],"[initialCagetory]",[4172,4181],"[categorycpv, checked, documents, kommuner]",[2051,2066],"[removeChecked, setChecked]",[2545,2555],"[kommuner, setCheckedFylker]",[581,583],"[arr]"]