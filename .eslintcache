[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx":"4","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx":"5","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx":"6","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx":"7","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx":"8","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx":"9","/Users/vilgeir/Desktop/doffindata/src/components/CheckedValues.jsx":"10","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx":"11","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx":"12"},{"size":501,"mtime":1611837583779,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611836465200,"results":"15","hashOfConfig":"14"},{"size":1640,"mtime":1615726655128,"results":"16","hashOfConfig":"14"},{"size":150,"mtime":1615739486907,"results":"17","hashOfConfig":"14"},{"size":712,"mtime":1616067816262,"results":"18","hashOfConfig":"14"},{"size":1348,"mtime":1616067819163,"results":"19","hashOfConfig":"14"},{"size":5194,"mtime":1616153050530,"results":"20","hashOfConfig":"14"},{"size":2828,"mtime":1616142415547,"results":"21","hashOfConfig":"14"},{"size":405,"mtime":1615195299708,"results":"22","hashOfConfig":"14"},{"size":1449,"mtime":1616150660243,"results":"23","hashOfConfig":"14"},{"size":213077,"mtime":1615726655130,"results":"24","hashOfConfig":"14"},{"size":827,"mtime":1616077713313,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1um9ekq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["56","57"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",["58","59","60","61","62","63"],"import React, { useEffect, useState } from 'react'\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\nimport Home from './pages/Home'\nimport DetailedList from './pages/DetailedList'\nimport Categories from './pages/Categories'\n// import Filter from \"./Filter\";\nimport Filter from './components/Filter'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nimport jsonData from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nimport Header from './components/Header'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\nfunction App() {\n  const [cpvCount, setCpvCount] = useState({})\n\n  useEffect(() => {\n    let cpvNumbers = Object.values(jsonData).map((js) => js.cpvnumber)\n\n    let firstTwo = cpvNumbers.map((js) => js.split('').slice(0, 2).join(''))\n    let count = {}\n    firstTwo.forEach((i) => (count[i] = (count[i] || 0) + 1))\n    // console.log(Object.keys(count))\n    setCpvCount(count)\n  }, [])\n\n  return (\n    <>\n      {/* <Header /> */}\n      <header />\n      <main>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={'/'} component={Home} />\n            <Route exact path={'/:category'} component={Categories} />\n            <Route\n              exact\n              path={'/:category/:details'}\n              component={DetailedList}\n            />\n            <Route\n              exact\n              path={'/:category/:details/:subcategory'}\n              component={DetailedList}\n            />\n          </Switch>\n        </BrowserRouter>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx",["64"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Categories() {\n  const { category } = useParams();\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"head\">\n        <h3 className=\"headline\">Søk i anbud</h3>\n        <input\n          className=\"searchbar\"\n          placeholder=\"Søk etter anbud eller CPV koder\"\n        ></input>\n        <h3>{category}</h3>\n      </div>\n      <div class=\"categories\">\n        {structure.map(\n          (i) =>\n            i.main === category &&\n            i.children.map((item, i) => (\n              <div className=\"category-card\">\n                <Link to={\"/\" + category + \"/\" + item.code}>\n                  <h3>\n                    {item.name} {item.countWithChildren}\n                  </h3>\n                </Link>\n                {item.children.map((items) => (\n                  <Link\n                    to={\"/\" + category + \"/\" + item.code + \"/\" + items.code}\n                  >\n                    <p>\n                      {items.name} {items.countWithChildren}\n                    </p>\n                  </Link>\n                ))}\n              </div>\n            ))\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Categories;\n","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx",["65","66","67","68"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import structure from '../data/count.structure'\nimport structure from \"../data/withMainCategories\";\nimport fylker from \"../data/fylker\";\nimport Categories from \"../pages/Categories\";\nimport CheckedValues from \"./CheckedValues\";\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  checkedValues,\n  setCheckedValues,\n}) {\n  const handleClick = (e) => {\n    checkedValues.map(\n      (i) =>\n        i === e.target.value &&\n        setCheckedValues((prevstate) => [\n          ...prevstate.filter((item) => item !== e.target.value),\n        ])\n    );\n\n    e.target.checked === true &&\n      setCheckedValues((prevstate) => [...prevstate, e.target.value]);\n  };\n\n  return (\n    <div>\n      <h3 className=\"\">Søk</h3>\n      {/* <label className=\"check-container\">\n        <input type=\"checkbox\"></input>\n        <span className=\"checkmark\"></span>\n      </label> */}\n      <div>\n        <input\n          type=\"text\"\n          className=\"searchbar\"\n          id=\"detail-search\"\n          placeholder=\"Søk\"\n        />\n      </div>\n      <h3 className=\"\">Filter</h3>\n      <h4>Kategorier</h4>\n      <Link to=\"/categories\">Alle Kategorier</Link>\n      {structure.map(\n        (it) =>\n          it.main === category &&\n          it.children.map(\n            (i) =>\n              i.code === details &&\n              i.children.map((item, i) => (\n                <div className=\"checkboxes\">\n                  {subcategory && subcategory === item.code ? (\n                    <div className=\"check-container\">\n                      <div>\n                        <input\n                          key={i}\n                          type=\"checkbox\"\n                          value={item.code}\n                          defaultChecked={true}\n                          onClick={handleClick}\n                        ></input>\n                        <label className=\"check-label\">\n                          {item.name} ({item.countWithChildren})\n                        </label>\n                      </div>\n\n                      {checkedValues.map(\n                        (check) =>\n                          check.includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div className=\"subcheckboxes\">\n                              <input\n                                key={index}\n                                type=\"checkbox\"\n                                value={it.code}\n                                onClick={handleClick}\n                              ></input>\n                              <label className=\"check-label\">\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </div>\n                  ) : (\n                    <>\n                      <input\n                        key={i}\n                        type=\"checkbox\"\n                        value={item.code}\n                        onClick={handleClick}\n                      ></input>\n                      <label className=\"check-label\">\n                        {item.name} ({item.countWithChildren})\n                      </label>\n                      {checkedValues.map(\n                        (check) =>\n                          check.includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div className=\"subcheckboxes\">\n                              <input\n                                key={index}\n                                type=\"checkbox\"\n                                value={it.code}\n                                onClick={handleClick}\n                              ></input>\n                              <label className=\"check-label\">\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </>\n                  )}\n                </div>\n              ))\n          )\n      )}\n\n      <h4>Fylker</h4>\n      {fylker.map((item, i) => (\n        <div className=\"checkboxes\">\n          <input key={i} type=\"checkbox\" value={item.navn}></input>\n          <label>{item.navn}</label>\n        </div>\n      ))}\n\n      <h4>Kunngjøringsdato</h4>\n      <p>Kalender</p>\n\n      <h4>Tilbudsfrist</h4>\n      <p>Kalender</p>\n\n      <h4>Publikasjonstype</h4>\n      <div className=\"checkboxes\">\n        <input type=\"checkbox\" value=\"nasjonal\"></input>\n        <label>Nasjonal</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className=\"checkboxes\">\n        <input type=\"checkbox\" value=\"europeisk\"></input>\n        <label>Europeisk</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className=\"checkboxes\">\n        {/* <span className='checkmark'></span> */}\n        <input type=\"checkbox\" value=\"marketcunsulting\"></input>\n        <label>Market Cunsulting</label>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx",["69"],"import React, { useEffect, useState } from \"react\";\nimport Filter from \"../components/Filter\";\nimport Card from \"../components/Card\";\nimport { useParams } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport data from \"../data/doffin-bach-default-rtdb-F02_2014-export.json\";\n\nfunction DetailedList() {\n  const [checkedValues, setCheckedValues] = useState([]);\n\n  const { category, details, subcategory } = useParams();\n\n  useEffect(() => {\n    subcategory && setCheckedValues([subcategory]);\n  }, []);\n\n  let arr = [\"2020-09-\", \"2020-10-\", \"2020-11-\"];\n  return (\n    <div className=\"detail-container\">\n      <div className=\"search\">\n        <Filter\n          details={details}\n          subcategory={subcategory}\n          category={category}\n          setCheckedValues={setCheckedValues}\n          checkedValues={checkedValues}\n        />\n      </div>\n      <div className=\"info-container\">\n        {subcategory\n          ? structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map((it) =>\n                  it.children.map(\n                    (i) =>\n                      i.code === subcategory && (\n                        <h1>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n                )\n            )\n          : structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map(\n                  (i) =>\n                    i.code === details && (\n                      <h1>\n                        {i.name} (CPV {i.code})\n                      </h1>\n                    )\n                )\n            )}\n        <select>\n          <option value=\"cpv-sort\">Sorter etter</option>\n        </select>\n        {checkedValues.map((i) => (\n          <button className=\"cpv-button\">{i}</button>\n        ))}\n\n        {subcategory\n          ? Object.values(data).map(\n              (i) =>\n                i.cpvnumber.substring(0, 3) === subcategory.substring(0, 3) &&\n                arr.map(\n                  (item) =>\n                    item.includes(i.kunngjoringsdato.substring(0, 8)) && (\n                      <Card i={i} />\n                    )\n                )\n            )\n          : Object.values(data).map(\n              (i) =>\n                i.cpvnumber.substring(0, 2) === details.substring(0, 2) &&\n                arr.map(\n                  (item) =>\n                    item.includes(i.kunngjoringsdato.substring(0, 8)) && (\n                      <Card i={i} />\n                    )\n                )\n            )}\n      </div>\n    </div>\n  );\n}\n\n// RENDRE BASERT På hva som finnes i checked values!!! Og hvis den er tom. ReNDRE ALT SOM ER I DETAILS!! :D\n\nexport default DetailedList;\n","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/CheckedValues.jsx",["70","71","72"],"import React, { useEffect, useState } from \"react\";\nimport structure from \"../data/withMainCategories\";\n\nfunction CheckedValues(props) {\n  let structs = props.structure\n    .map(\n      (i) =>\n        i.main === props.category &&\n        i.children.map(\n          (it) =>\n            it.code === props.details && it.children.map((item) => item.name)\n        )\n    )\n    .filter((i) => i);\n  let one = structs.filter((i) => i !== false);\n\n  console.log(one);\n  const handleChecked = (e) => {\n    const struct = structs[e.target.dataset.id];\n    let newCheckedValues = props.checkedValues.filter(\n      (item) => item !== struct\n    );\n    if (e.target.checked) newCheckedValues.push(struct);\n    props.setCheckedValues(newCheckedValues);\n  };\n  return (\n    <div>\n      {props.structure.map(\n        (it) =>\n          it.main === props.category &&\n          it.children.map(\n            (i) =>\n              i.code === props.details &&\n              i.children.map((item, id) => (\n                <>\n                  <label key={id}>\n                    <input\n                      type=\"checkbox\"\n                      data-id={id}\n                      onClick={handleChecked}\n                    />\n                    <label className=\"check-label\">{item.name}</label>\n                  </label>\n                </>\n              ))\n          )\n      )}\n\n      {/* <h1>{props..children}</h1> */}\n    </div>\n  );\n}\n\nexport default CheckedValues;\n","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":40,"nodeType":"79","messageId":"80","endLine":2,"endColumn":44},{"ruleId":"77","severity":1,"message":"81","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":18},{"ruleId":"77","severity":1,"message":"83","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":18},{"ruleId":"77","severity":1,"message":"84","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":14},{"ruleId":"77","severity":1,"message":"85","line":18,"column":10,"nodeType":"79","messageId":"80","endLine":18,"endColumn":18},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"87","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"86","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"88","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"89","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":15,"column":6,"nodeType":"92","endLine":15,"endColumn":8,"suggestions":"93"},{"ruleId":"77","severity":1,"message":"87","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"86","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"94","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":17},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Filter' is defined but never used.","'firebase' is defined but never used.","'DataGrid' is defined but never used.","'Header' is defined but never used.","'cpvCount' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Categories' is defined but never used.","'CheckedValues' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'subcategory'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'structure' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [subcategory]",{"range":"100","text":"101"},[528,530],"[subcategory]"]