[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/context/StateProvider.js":"4","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx":"5","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx":"6","/Users/vilgeir/Desktop/doffindata/src/components/Footer.jsx":"7","/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx":"8","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx":"9","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx":"10","/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js":"11","/Users/vilgeir/Desktop/doffindata/src/helpers/functions.js":"12","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx":"13","/Users/vilgeir/Desktop/doffindata/src/components/homeIcons.jsx":"14","/Users/vilgeir/Desktop/doffindata/src/components/AlgoliaSearch.jsx":"15","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx":"16","/Users/vilgeir/Desktop/doffindata/src/components/SaveSearch.jsx":"17","/Users/vilgeir/Desktop/doffindata/src/data/withNorwegianNames.jsx":"18","/Users/vilgeir/Desktop/doffindata/src/components/SavedSearch.jsx":"19","/Users/vilgeir/Desktop/doffindata/src/components/CategoryCards.jsx":"20","/Users/vilgeir/Desktop/doffindata/src/firebaseConfig.js":"21","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx":"22","/Users/vilgeir/Desktop/doffindata/src/components/SavedModal.jsx":"23","/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx":"24"},{"size":596,"mtime":1619776656569,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611836465200,"results":"27","hashOfConfig":"26"},{"size":1154,"mtime":1619776656555,"results":"28","hashOfConfig":"26"},{"size":785,"mtime":1620298720153,"results":"29","hashOfConfig":"26"},{"size":2071,"mtime":1620318376902,"results":"30","hashOfConfig":"26"},{"size":9522,"mtime":1620309993543,"results":"31","hashOfConfig":"26"},{"size":400,"mtime":1619776656559,"results":"32","hashOfConfig":"26"},{"size":480,"mtime":1619776656560,"results":"33","hashOfConfig":"26"},{"size":4587,"mtime":1620326896887,"results":"34","hashOfConfig":"26"},{"size":1986,"mtime":1620320462568,"results":"35","hashOfConfig":"26"},{"size":1520,"mtime":1620309993540,"results":"36","hashOfConfig":"26"},{"size":2126,"mtime":1620309993539,"results":"37","hashOfConfig":"26"},{"size":669,"mtime":1620309993532,"results":"38","hashOfConfig":"26"},{"size":868,"mtime":1620309993539,"results":"39","hashOfConfig":"26"},{"size":2377,"mtime":1620317908573,"results":"40","hashOfConfig":"26"},{"size":10260,"mtime":1620326326534,"results":"41","hashOfConfig":"26"},{"size":1845,"mtime":1620309993537,"results":"42","hashOfConfig":"26"},{"size":215211,"mtime":1620114005766,"results":"43","hashOfConfig":"26"},{"size":3211,"mtime":1620316295800,"results":"44","hashOfConfig":"26"},{"size":693,"mtime":1620309993533,"results":"45","hashOfConfig":"26"},{"size":619,"mtime":1618491819815,"results":"46","hashOfConfig":"26"},{"size":405,"mtime":1615195299708,"results":"47","hashOfConfig":"26"},{"size":1191,"mtime":1620309993537,"results":"48","hashOfConfig":"26"},{"size":272,"mtime":1620309993535,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1um9ekq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["106","107"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",[],"/Users/vilgeir/Desktop/doffindata/src/context/StateProvider.js",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx",["108","109","110","111","112","113","114","115"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withNorwegianNames\";\nimport \"../index.css\";\nimport SavedSearch from \"../components/SavedSearch\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport HomeIcons from \"../components/homeIcons\";\nimport { getData } from \"../helpers/handleData\";\nimport { StateContext } from \"../context/StateProvider\";\n\nfunction Home(props) {\n  const { setcheckedCategories, setCheckedFylker, setKommuner } = useContext(\n    StateContext\n  );\n\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState();\n  const [searchDataDefault, setSearchDataDefault] = useState(\n    structure.map((i) => i.main)\n  );\n\n  const [serverData, setServerData] = useState([]);\n\n  useEffect(() => {\n    setcheckedCategories([]);\n    setCheckedFylker([]);\n    setKommuner([]);\n  }, []);\n\n  let arrrray = [];\n  let mainCpv = \"\";\n\n  useEffect(() => {\n    getData(\"F02_2014\", \"cpv\", mainCpv, setServerData);\n  }, []);\n\n  Object.entries(serverData).map((i) => arrrray.push(i));\n\n  const updateInput = (input) => {\n    const filtered = searchDataDefault.filter((main) => {\n      if (isNaN()) {\n        return main.toLowerCase().includes(input.toLowerCase());\n      }\n      return main;\n    });\n    if (input === \"\") return setInput(input), setSearchData([]);\n    return setInput(input), setSearchData(filtered);\n  };\n\n  return (\n    <div className=\"errthing\">\n      <div className=\"breadcrums\">\n        <Link to={\"/\"}>Hjem</Link>\n      </div>\n      <div className=\"home-container\">\n        <div>\n          <div className=\"home-head\">\n            <div className=\"search-home\">\n              <AlgoliaSearch />\n            </div>\n            <SavedSearch />\n          </div>\n          <h3 className=\"headline\">Alle kategorier</h3>\n        </div>\n      </div>\n      <div className=\"box-container\">\n        {structure.map((i, index) => (\n          <HomeIcons i={i} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx",["116","117","118","119"],"import React, { useEffect, useState, useContext } from 'react'\nimport Filter from '../components/Filter'\nimport SaveSearch from '../components/SaveSearch'\nimport Card from '../components/Card'\nimport { useParams } from 'react-router-dom'\nimport structure from '../data/withNorwegianNames'\nimport { StateContext } from '../context/StateProvider'\nimport { Link } from 'react-router-dom'\nimport {\n  getProcurements,\n  getProcurementsWithCounty,\n} from '../helpers/handleData'\nimport fylkerKommuner from '../data/fylkerkommuner.json'\nimport { capitalize } from '../helpers/functions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DetailedList() {\n  const {\n    checkedCategories,\n    setcheckedCategories,\n    checkedFylker,\n    kommuner,\n  } = useContext(StateContext)\n  const [removeChecked, setRemoveChecked] = useState([])\n  const [sort, setSort] = useState()\n  const [checked, setChecked] = useState([])\n  const [saveSearch, setSaveSearch] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n\n  const [documents, setDocuments] = useState([])\n  const { category, details } = useParams()\n\n  useEffect(() => {\n    let arr = []\n    Object.values(checkedCategories)\n      .map((i) => arr.push(Object.keys(i)))\n      .flat()\n    Object.values(checkedCategories)\n      .map((i) => Object.values(i).map((item) => arr.push(item)))\n      .flat()\n    checkedCategories && setChecked(arr.flat())\n  }, [checkedCategories])\n\n  useEffect(() => {\n    let obj = {\n      checkedCategories,\n      category: category,\n      cpv: categorycpv,\n      fylker: checkedFylker,\n      kommuner: kommuner,\n    }\n\n    window.localStorage.setItem('lastSearch', JSON.stringify(obj))\n  }, [checkedCategories])\n\n  let newdetails = details.split('+')\n  let categorycpv = newdetails[0]\n  let subcategory = newdetails[1]\n\n  const initialCagetory = () => {\n    subcategory && setcheckedCategories([{ [subcategory]: [] }])\n    subcategory && setChecked([subcategory])\n  }\n  useEffect(() => {\n    initialCagetory()\n  }, [])\n\n  useEffect(() => {\n    setDocuments([])\n    let category = []\n    let subcat = []\n\n    checked.filter((i) =>\n      i.substring(3, 8) === '00000'\n        ? category.push(i)\n        : i.substring(4, 8) === '0000' && subcat.push(i)\n    )\n\n    subcat.map((i) =>\n      category.map(\n        (item, index) =>\n          item.substring(0, 3).includes(i.substring(0, 3)) &&\n          category.splice(index, 1)\n      )\n    )\n\n    let kommunerFlat = kommuner.flat().map((i) => i.Kommune)\n    if ((category.length > 0 || subcat.length > 0) && kommunerFlat.length > 0) {\n      kommunerFlat.map((kommune) => {\n        category.map((cpv) =>\n          getProcurementsWithCounty(\n            'tendre',\n            'cpvnumbersub',\n            cpv,\n            'sted',\n            kommune,\n            setDocuments,\n            documents\n          )\n        )\n        subcat.map((cpv) =>\n          getProcurementsWithCounty(\n            'tendre',\n            'cpvnumbersubsub',\n            cpv,\n            'sted',\n            kommune,\n            setDocuments,\n            documents\n          )\n        )\n      })\n    } else if (\n      (category.length > 0 || subcat.length > 0) &&\n      kommunerFlat.length === 0\n    ) {\n      category.map((i) =>\n        getProcurements('tendre', 'cpvnumbersub', i, setDocuments, documents)\n      )\n\n      subcat.map((i) =>\n        getProcurements('tendre', 'cpvnumbersubsub', i, setDocuments, documents)\n      )\n    } else if (\n      kommunerFlat.length > 0 &&\n      category.length === 0 &&\n      subcat.length === 0\n    ) {\n      kommunerFlat.forEach((kommune) =>\n        getProcurementsWithCounty(\n          'tendre',\n          'cpvnumbermain',\n          categorycpv,\n          'sted',\n          kommune,\n          setDocuments,\n          documents\n        )\n      )\n    } else if (\n      kommunerFlat.length === 0 &&\n      category.length === 0 &&\n      subcat.length === 0\n    ) {\n      getProcurements(\n        'tendre',\n        'cpvnumbermain',\n        categorycpv,\n        setDocuments,\n        documents\n      )\n    }\n    return documents\n  }, [checked])\n  let newArray = []\n\n  const byCity = (arr, secondArr) =>\n    secondArr.length > 0\n      ? arr.filter((item) =>\n          secondArr\n            .flat()\n            .map((kom) => kom.Kommune)\n            .includes(capitalize(item.sted))\n        )\n      : arr\n\n  Object.entries(documents).map((i) => newArray.push(i[1]))\n\n  const sorting = (a, b) => {\n    if (sort === 'asc') {\n      return a.tittel > b.tittel ? 1 : -1\n    } else if (sort === 'desc') {\n      return a.tittel < b.tittel ? 1 : -1\n    } else if (sort === 'date') {\n      return a.kunngjoringsdato < b.kunngjoringsdato ? 1 : -1\n    }\n    return 0\n  }\n\n  const sortedArray = newArray.sort(sorting)\n  const onChange = (event) => {\n    setSort(event.target.value)\n  }\n\n  return (\n    <>\n      <div className='breadcrums'>\n        <Link to={'/'}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category}>Kategori</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={'/' + category + '/' + categorycpv}>Resultat</Link>\n      </div>\n      <div className='detail-container'>\n        <div className='search'>\n          <Filter\n            fylkerKommuner={fylkerKommuner}\n            openModal={openModal}\n            setOpenModal={setOpenModal}\n            details={categorycpv}\n            subcategory={subcategory}\n            category={category}\n            removeChecked={removeChecked}\n            setRemoveChecked={setRemoveChecked}\n            checked={checked}\n            setChecked={setChecked}\n            saveSearch={saveSearch}\n            setSaveSearch={setSaveSearch}\n          />\n        </div>\n        <div className='list-container'>\n          {subcategory\n            ? structure.map(\n                (item) =>\n                  item.main === category &&\n                  item.children.map((it) =>\n                    it.children.map(\n                      (i, index) =>\n                        i.code === subcategory && (\n                          <h1 key={index}>\n                            {i.name} (CPV {i.code})\n                          </h1>\n                        )\n                    )\n                  )\n              )\n            : structure.map(\n                (item) =>\n                  item.main === category &&\n                  item.children.map(\n                    (i, index) =>\n                      i.code === categorycpv && (\n                        <h1 key={index}>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n              )}\n          <div className='select-box-title'>\n            <p className='sorting'>Sorter etter: </p>\n            <select className='select-box' onChange={onChange}>\n              <option value='asc'>ASC</option>\n              <option value='desc'>DESC</option>\n              <option value='date'>Publisert</option>\n            </select>\n          </div>\n          {checkedCategories.length > 0\n            ? byCity(sortedArray, kommuner).map((i) =>\n                checkedCategories.map((checked) =>\n                  Object.values(checked)[0].length > 0\n                    ? Object.values(checked)[0].map(\n                        (check) =>\n                          i.cpvnumber\n                            .substring(0, 4)\n                            .includes(check.substring(0, 4)) && (\n                            <Link\n                              style={{ textDecoration: 'none', color: 'black' }}\n                              to={\n                                '/' + category + '/' + categorycpv + '/' + i.id\n                              }\n                              i={i}\n                              key={i.id}\n                            >\n                              <Card i={i} />\n                            </Link>\n                          )\n                      )\n                    : i.cpvnumber\n                        .substring(0, 3)\n                        .includes(Object.keys(checked)[0].substring(0, 3)) && (\n                        <Link\n                          key={i.id}\n                          style={{ textDecoration: 'none', color: 'black' }}\n                          to={'/' + category + '/' + categorycpv + '/' + i.id}\n                          i={i}\n                        >\n                          <Card i={i} />\n                        </Link>\n                      )\n                )\n              )\n            : byCity(sortedArray, kommuner).map(\n                (i) =>\n                  i.cpvnumber.substring(0, 2) ===\n                    categorycpv.substring(0, 2) && (\n                    <Link\n                      key={i.id}\n                      style={{ textDecoration: 'none', color: 'black' }}\n                      to={'/' + category + '/' + categorycpv + '/' + i.id}\n                      i={i}\n                    >\n                      <Card i={i} />\n                    </Link>\n                  )\n              )}\n        </div>\n        {saveSearch && (\n          <SaveSearch\n            checkedFylker={checkedFylker}\n            setSaveSearch={setSaveSearch}\n            checkedCategories={checkedCategories}\n            category={category}\n            categorycpv={categorycpv}\n            checked={checked}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default DetailedList\n","/Users/vilgeir/Desktop/doffindata/src/components/Footer.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx",["120"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { getProcurement } from \"../helpers/handleData\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction DetailedInfo({ i }) {\n  const [procurementData, setProcurement] = useState([]);\n  const { category, details, procurement } = useParams();\n\n  const getData = () => {\n    getProcurement(\"tendre\", procurement, setProcurement);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  let newdetails = details.split(\"+\");\n  let categorycpv = newdetails[0];\n\n  return (\n    <>\n      <div className=\"breadcrums\">\n        <Link to={\"/\"}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={\"/\" + category}>Kategori</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={\"/\" + category + \"/\" + categorycpv}>Resultat</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={\"/\" + category + \"/\" + categorycpv + \"/\" + procurement}>\n          Anbud\n        </Link>\n      </div>\n      <div className=\"info-container\">\n        <div className=\"info-left-bar\">\n          <p>{procurementData.oppdragsgiver}</p>\n          <h1>{procurementData.tittel}</h1>\n          <div className=\"info-card\">\n            <p>\n              <b>Publiseringsdato: </b> {procurementData.kunngjoringsdato}\n            </p>\n            <p>\n              <b>Tilbudsfrist: </b> {procurementData.tilbudsfrist}\n            </p>\n            <p>\n              <b>Tildelingskriterie: </b> {procurementData.tildelingskriterier}\n            </p>\n\n            <p>{procurementData.beskrivelse}</p>\n          </div>\n          <div className=\"info-card\">\n            <h6>Dokumenter</h6>\n\n            {procurementData.documents ? (\n              procurementData.documents.map((i, index) => (\n                <a key={index} href={\"https://www.mercell.com\" + i.url}>\n                  {i.name}\n                </a>\n              ))\n            ) : (\n              <>\n                <p>Last ned dokumentene her:</p>\n                <a href={procurementData.url_dokumentasjon}>\n                  {procurementData.url_dokumentasjon}\n                </a>\n              </>\n            )}\n          </div>\n          <div className=\"info-card\">\n            <h6>Ytelsestype</h6>\n            {procurementData.tilleggsCPV &&\n              procurementData.tilleggsCPV.map(\n                (i, index) =>\n                  i !== null && (\n                    <p key={index}>\n                      {Object.keys(i)} {Object.values(i)}{\" \"}\n                    </p>\n                  )\n              )}\n          </div>\n        </div>\n        <div className=\"info-right-bar\">\n          <button className=\"button\">Meld interesse</button>\n          <div className=\"info-right-bar-article\">\n            <div className=\"headline-div\">\n              <h4 className=\"headline border\">Kontakt</h4>\n            </div>\n            <p>\n              <b>Spørsmålsfrist: </b>\n              {procurementData.sporsmalsfrist}\n            </p>\n            <p>\n              <b>Kontaktperson: </b>\n              {procurementData.kontaktperson}\n            </p>\n            <p>\n              <b>Telefon: </b>\n              {procurementData.telefon}\n            </p>\n            <p>\n              <b>E-post: </b> {procurementData.epost}\n            </p>\n          </div>\n          <div className=\"info-right-bar-article\">\n            <div className=\"headline-div\">\n              <h4 className=\"headline border\">Innkjøper</h4>\n            </div>\n            <p>\n              <b>Oppdragsgiver: </b> {procurementData.oppdragsgiver}\n            </p>\n            <p>\n              <b>Org nr.: </b>\n              {procurementData.orgnr}\n            </p>\n            <p>\n              <b>Adresse: </b> {procurementData.adresse} <br></br>\n              {procurementData.postkode}\n              {\", \"} {procurementData.sted}\n              <br></br> {procurementData.land}\n            </p>\n          </div>\n          <div className=\"info-right-bar-article\">\n            <div className=\"headline-div\">\n              <h4 className=\"headline border\">Nettsted</h4>\n            </div>\n            <p>\n              <a href={procurementData.url_oppdragsgiver}>Oppdragsgiver</a>\n            </p>\n            <p>\n              <a href={procurementData.url_kjoperprofil}>Kjøperprofil</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DetailedInfo;\n","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx",["121"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withNorwegianNames\";\nimport { useParams } from \"react-router-dom\";\n\nimport { StateContext } from \"../context/StateProvider\";\nimport { homeIcons } from \"../helpers/functions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CategoryCards from \"../components/CategoryCards\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { capitalizeAndReplace } from \"../helpers/functions\";\n\nfunction Categories() {\n  const { setcheckedCategories, setCheckedFylker } = useContext(StateContext);\n  const { category } = useParams();\n\n  useEffect(() => {\n    setcheckedCategories([]);\n    setCheckedFylker([]);\n  }, []);\n\n  return (\n    <>\n      <div className=\"breadcrums\">\n        <Link to={\"/\"}>Hjem</Link>\n        <FontAwesomeIcon icon={faChevronRight} />\n        <Link to={{ category }}>Kategori</Link>\n      </div>\n      <div className=\"home-container\">\n        <div className=\"head\">\n          <div className=\"search-home\">\n            <AlgoliaSearch />\n            <div className=\"categories-head\">\n              <div\n                className=\"homeicon-container\"\n                style={homeIcons(category).style}\n              >\n                <FontAwesomeIcon\n                  id=\"homeicon-icon\"\n                  icon={homeIcons(category).icon}\n                />\n              </div>\n              <h3>{capitalizeAndReplace(category)}</h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"categories\">\n          {structure.map(\n            (i) =>\n              i.main === capitalizeAndReplace(category) &&\n              i.children.map((item, idx) => (\n                <CategoryCards item={item} key={idx} category={category} />\n              ))\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Categories;\n","/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js",[],"/Users/vilgeir/Desktop/doffindata/src/helpers/functions.js",[],"/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/homeIcons.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/AlgoliaSearch.jsx",["122"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport structure from \"../data/withNorwegianNames\";\nimport { toLowerCaseAndReplace } from \"../helpers/functions\";\n\nfunction AlgoliaSearch() {\n  const [query, setQuery] = useState(\"\");\n  const [hits, setHits] = useState([]);\n\n  const { category } = useParams();\n\n  const searchClient = algoliasearch(\n    \"QG9J28HNQ9\",\n    \"bdf4769c7a050792225f3a0613a4bec4\"\n  );\n\n  let index;\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      if (query) {\n        index = searchClient.initIndex(\"tendre\");\n        const result = await index.search(query);\n        setHits(result.hits);\n      } else {\n        setHits([]);\n      }\n    };\n    search();\n  }, [query]);\n\n  // const highlight = () => {\n  //   return hits[0].toString().replace(query, \"e\");\n  // };\n\n  return (\n    <div>\n      <input\n        className=\"searchbar\"\n        type=\"text\"\n        onChange={handleChange}\n        placeholder=\"Søk på anbud\"\n      />\n      <div className=\"a-search\">\n        {hits.map((i) => (\n          <div className=\"search-result\">\n            {structure.map((item) =>\n              item.children.map((it) =>\n                it.code.substring(0, 2) === i.cpvnumber.substring(0, 2) ? (\n                  <div className=\"\">\n                    <Link\n                      to={\n                        \"/\" +\n                        toLowerCaseAndReplace(item.main) +\n                        \"/\" +\n                        i.cpvnumbermain +\n                        \"/\" +\n                        i.objectID\n                      }\n                    >\n                      <p className=\"p-search\">{i.tittel}</p>\n                      <p className=\"place-search\">\n                        Sted: {i.sted.toUpperCase()}\n                      </p>\n                      <h4 className=\"h4-search\">CPV: {i.cpvnumber}</h4>\n                    </Link>\n                  </div>\n                ) : undefined\n              )\n            )}\n            <Link to={\"/\" + category + \"/\" + i.cpvsearch}>\n              <h3>{i.cpvmainsearch}</h3>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default AlgoliaSearch;\n","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx",["123","124","125","126"],"import React, { useContext, useEffect, useState } from \"react\";\nimport structure from \"../data/withNorwegianNames\";\nimport fylker from \"../data/fylker\";\n\nimport {\n  faArrowLeft,\n  faChevronDown,\n  faChevronUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Checkboxes from \"./Checkboxes\";\nimport { Link } from \"react-router-dom\";\nimport SavedModal from \"../components/SavedModal\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport { StateContext } from \"../context/StateProvider\";\nimport { capitalizeAndReplace } from \"../helpers/functions\";\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  removeChecked,\n  checked,\n  setChecked,\n  setSaveSearch,\n  setOpenModal,\n  openModal,\n  fylkerKommuner,\n}) {\n  const {\n    checkedCategories,\n    setcheckedCategories,\n    checkedFylker,\n    setCheckedFylker,\n    kommuner,\n    setKommuner,\n  } = useContext(StateContext);\n  const [openCategory, setOpenCategory] = useState(true);\n  const [openCounty, setOpenCounty] = useState(true);\n\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() != [e.target.value]\n          ),\n        ])\n    );\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ]);\n    handleCheck(e);\n  };\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes(\"00000\")) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ];\n          }\n          return [...prevState.filter((i) => i !== removeChecked)];\n        } else {\n          return [...prevState, removeChecked];\n        }\n      });\n  }, [removeChecked]);\n\n  const removeFilters = () => {\n    setcheckedCategories([]);\n    setChecked([]);\n    setKommuner([]);\n    setCheckedFylker([]);\n  };\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    );\n  };\n\n  useEffect(() => {\n    let flereFylker = kommuner.flat().map((x) => x.Fylke);\n    setCheckedFylker([...new Set(flereFylker)]);\n  }, [kommuner]);\n  // console.log(kommuner.flat().map((x) => [...new Set(x.Fylke)]))\n  // let flereFylker = kommuner.flat().map((x) => x.Fylke)\n  // console.log([...new Set(flereFylker)])\n\n  const handleClickFylker = (e) => {\n    if (\n      kommuner\n        .flat()\n        .map((kom) => kom.Fylke)\n        .includes(e.target.value)\n    ) {\n      setKommuner((prev) => [\n        ...prev.flat().filter((p) => p.Fylke !== e.target.value),\n      ]);\n    } else {\n      setKommuner((prev) => [\n        ...prev,\n        fylkerKommuner.filter((i) => i.Fylke === e.target.value),\n      ]);\n    }\n  };\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      );\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      );\n    handleCheck(e);\n  };\n\n  const goBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <div className=\"filter-container\">\n      <div className=\"save-search\">\n        <button className=\"button\" onClick={() => setSaveSearch(true)}>\n          Lagre søk\n        </button>\n        <div onClick={() => setOpenModal((prev) => !prev)}>\n          <p>\n            Du har{\" \"}\n            <b>\n              {localStorage.length === 0\n                ? localStorage.length\n                : localStorage.length - 1}{\" \"}\n              {localStorage.length === 2 ? \"lagret\" : \"lagrede\"} søk\n            </b>{\" \"}\n            <FontAwesomeIcon icon={faChevronDown} />\n          </p>{\" \"}\n        </div>\n      </div>\n      {openModal && <SavedModal />}\n      <div className=\"search-filter\">\n        <AlgoliaSearch />\n      </div>\n      <div className=\"filter-navigation\">\n        <div className=\"go-back\" onClick={goBack}>\n          <FontAwesomeIcon icon={faArrowLeft} />{\" \"}\n          {capitalizeAndReplace(category)}\n        </div>\n        {(checkedCategories.length > 0 || checkedFylker.length > 0) && (\n          <button className=\"cpv-button\" onClick={removeFilters}>\n            Nullstill filter\n          </button>\n        )}\n      </div>\n\n      <div\n        onClick={() => setOpenCategory((prev) => !prev)}\n        className=\"filter-header\"\n      >\n        <h4>Kategorier </h4>\n        {openCategory ? (\n          <FontAwesomeIcon icon={faChevronUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronDown} />\n        )}\n      </div>\n      {openCategory && (\n        <div className=\"check-container\">\n          {structure.map(\n            (it) =>\n              it.main === capitalizeAndReplace(category) &&\n              it.children.map(\n                (i) =>\n                  i.code === details &&\n                  i.children.map((item, i) => (\n                    <div className=\"checkboxes\" key={i}>\n                      {subcategory && subcategory === item.code ? (\n                        <div>\n                          <div>\n                            <Checkboxes\n                              value={item.code}\n                              onChange={handleClick}\n                              className={\"checkbox\"}\n                              checked={\n                                checked.includes(item.code) ? true : false\n                              }\n                            />\n\n                            <label className=\"check-label\">\n                              {item.name} ({item.countWithChildren})\n                            </label>\n                          </div>\n\n                          {checkedCategories.map(\n                            (check) =>\n                              Object.keys(check).includes(item.code) &&\n                              item.children.map((it, index) => (\n                                <div className=\"subcheckboxes\" key={index}>\n                                  <Checkboxes\n                                    value={it.code}\n                                    onChange={handleChange}\n                                    className={\"checkbox\"}\n                                    checked={\n                                      checked.includes(it.code) ? true : false\n                                    }\n                                  />\n                                  <label className=\"check-label\">\n                                    {it.name} ({it.countWithChildren})\n                                  </label>\n                                </div>\n                              ))\n                          )}\n                        </div>\n                      ) : (\n                        <>\n                          <Checkboxes\n                            value={item.code}\n                            onChange={handleClick}\n                            className={\"checkbox\"}\n                            // handleCheck={handleCheck}\n                            key={i}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n                          <label className=\"check-label\">\n                            {item.name} ({item.countWithChildren})\n                          </label>\n                          {checkedCategories.map(\n                            (check) =>\n                              Object.keys(check).includes(item.code) &&\n                              item.children.map((it, index) => (\n                                <div className=\"subcheckboxes\" key={index}>\n                                  <Checkboxes\n                                    value={it.code}\n                                    onChange={handleChange}\n                                    className={\"checkbox\"}\n                                    // handleCheck={handleCheck}\n                                    checked={\n                                      checked.includes(it.code) ? true : false\n                                    }\n                                  />\n                                  <label className=\"check-label\">\n                                    {it.name} ({it.countWithChildren})\n                                  </label>\n                                </div>\n                              ))\n                          )}\n                        </>\n                      )}\n                    </div>\n                  ))\n              )\n          )}\n        </div>\n      )}\n\n      <div\n        onChange={() => setOpenCounty((prev) => !prev)}\n        className=\"filter-header\"\n      >\n        <h4>Fylker </h4>\n        {openCounty ? (\n          <FontAwesomeIcon icon={faChevronUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronDown} />\n        )}\n      </div>\n      {openCounty &&\n        fylker.map((item, i) => (\n          <div className=\"checkboxes\" key={i}>\n            <input\n              type=\"checkbox\"\n              onChange={handleClickFylker}\n              value={item.navn}\n              checked={checkedFylker.includes(item.navn) ? true : false}\n            ></input>\n            <label>{item.navn}</label>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Filter;\n","/Users/vilgeir/Desktop/doffindata/src/components/SaveSearch.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/data/withNorwegianNames.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/SavedSearch.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/CategoryCards.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/firebaseConfig.js",[],"/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/SavedModal.jsx",["127"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { StateContext } from '../context/StateProvider'\n\nfunction SavedModal() {\n  const { setcheckedCategories } = useContext(StateContext)\n  const [saved, setSaved] = useState([])\n  let arr = Object.keys(localStorage).filter(\n    (elem) => elem !== 'ally-supports-cache' && elem !== 'lastSearch'\n  )\n  useEffect(() => {\n    arr.map((elem) =>\n      setSaved((prevstate) => [\n        ...prevstate,\n        { [elem]: JSON.parse(localStorage.getItem(elem)) },\n      ])\n    )\n  }, [])\n\n  const handleClick = (i) => {\n    Object.values(i).map(\n      (item) =>\n        item.checkedCategories && setcheckedCategories(item.checkedCategories)\n    )\n  }\n  return (\n    <div className='saved-modal'>\n      <h4>Mine lagrede søk</h4>\n      {saved.map((i, index) => (\n        <Link\n          to={\n            '/' + Object.values(i)[0].category + '/' + Object.values(i)[0].cpv\n          }\n          key={index}\n          className='saved-modal-item'\n          onClick={() => handleClick(i)}\n        >\n          {Object.keys(i)[0]}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default SavedModal\n","/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":16,"column":10,"nodeType":"134","messageId":"135","endLine":16,"endColumn":15},{"ruleId":"132","severity":1,"message":"136","line":17,"column":10,"nodeType":"134","messageId":"135","endLine":17,"endColumn":20},{"ruleId":"132","severity":1,"message":"137","line":18,"column":29,"nodeType":"134","messageId":"135","endLine":18,"endColumn":49},{"ruleId":"138","severity":1,"message":"139","line":28,"column":6,"nodeType":"140","endLine":28,"endColumn":8,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":35,"column":6,"nodeType":"140","endLine":35,"endColumn":8,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":39,"column":9,"nodeType":"134","messageId":"135","endLine":39,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":46,"column":45,"nodeType":"147","messageId":"148","endLine":46,"endColumn":46},{"ruleId":"145","severity":1,"message":"146","line":47,"column":27,"nodeType":"147","messageId":"148","endLine":47,"endColumn":28},{"ruleId":"138","severity":1,"message":"149","line":55,"column":6,"nodeType":"140","endLine":55,"endColumn":25,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"151","line":67,"column":6,"nodeType":"140","endLine":67,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":90,"column":34,"nodeType":"155","messageId":"156","endLine":90,"endColumn":36},{"ruleId":"138","severity":1,"message":"157","line":155,"column":6,"nodeType":"140","endLine":155,"endColumn":15,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":17,"column":6,"nodeType":"140","endLine":17,"endColumn":8,"suggestions":"160"},{"ruleId":"138","severity":1,"message":"161","line":21,"column":6,"nodeType":"140","endLine":21,"endColumn":8,"suggestions":"162"},{"ruleId":"138","severity":1,"message":"163","line":28,"column":17,"nodeType":"164","endLine":28,"endColumn":49},{"ruleId":"132","severity":1,"message":"165","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":47,"column":48,"nodeType":"168","messageId":"169","endLine":47,"endColumn":50},{"ruleId":"138","severity":1,"message":"170","line":76,"column":6,"nodeType":"140","endLine":76,"endColumn":21,"suggestions":"171"},{"ruleId":"138","severity":1,"message":"172","line":96,"column":6,"nodeType":"140","endLine":96,"endColumn":16,"suggestions":"173"},{"ruleId":"138","severity":1,"message":"174","line":18,"column":6,"nodeType":"140","endLine":18,"endColumn":8,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'searchData' is assigned a value but never used.","'setSearchDataDefault' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCheckedFylker', 'setKommuner', and 'setcheckedCategories'. Either include them or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'mainCpv'. Either include it or remove the dependency array.",["179"],"'updateInput' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'category', 'categorycpv', 'checkedFylker', and 'kommuner'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'initialCagetory'. Either include it or remove the dependency array.",["181"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'categorycpv', 'documents', and 'kommuner'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'setCheckedFylker' and 'setcheckedCategories'. Either include them or remove the dependency array.",["184"],"Assignments to the 'index' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"React Hook useEffect has a missing dependency: 'setCheckedFylker'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [setCheckedFylker, setKommuner, setcheckedCategories]",{"range":"208","text":"209"},"Update the dependencies array to be: [mainCpv]",{"range":"210","text":"211"},"Update the dependencies array to be: [category, categorycpv, checkedCategories, checkedFylker, kommuner]",{"range":"212","text":"213"},"Update the dependencies array to be: [initialCagetory]",{"range":"214","text":"215"},"Update the dependencies array to be: [categorycpv, checked, documents, kommuner]",{"range":"216","text":"217"},"Update the dependencies array to be: [getData]",{"range":"218","text":"219"},"Update the dependencies array to be: [setCheckedFylker, setcheckedCategories]",{"range":"220","text":"221"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"222","text":"223"},"Update the dependencies array to be: [kommuner, setCheckedFylker]",{"range":"224","text":"225"},"Update the dependencies array to be: [arr]",{"range":"226","text":"227"},[918,920],"[setCheckedFylker, setKommuner, setcheckedCategories]",[1046,1048],"[mainCpv]",[1771,1790],"[category, categorycpv, checkedCategories, checkedFylker, kommuner]",[2095,2097],"[initialCagetory]",[4172,4181],"[categorycpv, checked, documents, kommuner]",[604,606],"[getData]",[832,834],"[setCheckedFylker, setcheckedCategories]",[2073,2088],"[removeChecked, setChecked]",[2577,2587],"[kommuner, setCheckedFylker]",[581,583],"[arr]"]