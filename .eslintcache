[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/Filter.js":"4","/Users/vilgeir/Desktop/doffindata/src/Home.js":"5"},{"size":501,"mtime":1611837583779,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611836465200,"results":"8","hashOfConfig":"7"},{"size":972,"mtime":1614255868403,"results":"9","hashOfConfig":"7"},{"size":2681,"mtime":1614262582363,"results":"10","hashOfConfig":"7"},{"size":5577,"mtime":1614255737890,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1um9ekq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["25","26"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",["27","28","29","30","31"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Home from \"./Home\";\nimport Filter from \"./Filter\";\nimport \"./App.css\";\nimport { firebase } from \"@firebase/app\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport jsonData from \"./data/doffin-bach-default-rtdb-F02_2014-export.json\";\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\nrequire(\"firebase/firestore\");\n\nfunction App() {\n  const [cpvCount, setCpvCount] = useState({});\n\n  useEffect(() => {\n    let cpvNumbers = Object.values(jsonData).map((js) => js.cpvnumber);\n\n    let firstTwo = cpvNumbers.map((js) => js.split(\"\").slice(0, 2).join(\"\"));\n    let count = {};\n    firstTwo.forEach((i) => (count[i] = (count[i] || 0) + 1));\n    // console.log(Object.keys(count))\n    setCpvCount(count);\n  }, []);\n\n  return (\n    <div className=\"main-container\">\n      {/* <Home cpvCount={cpvCount}></Home> */}\n      <Filter></Filter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/vilgeir/Desktop/doffindata/src/Filter.js",["32","33","34","35","36","37","38","39","40","41","42"],"/Users/vilgeir/Desktop/doffindata/src/Home.js",["43","44","45","46","47","48","49","50","51","52"],"\nimport React, { useEffect, useState } from 'react'\nimport cpvMain from './cpvmain.json'\nimport CPVcodes from './data/cpv.json'\nimport logo from './logo.svg'\nimport count from './data/count.json'\nimport data from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\n\nfunction Home() {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCMDIwwubzh4Xt6nujcK65akULxjgHnT3E\",\n    authDomain: \"doffin-bach.firebaseapp.com\",\n    databaseURL:\n      'https://doffin-bach-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'doffin-bach',\n    storageBucket: 'doffin-bach.appspot.com',\n    messagingSenderId: '16468608817',\n    appId: '1:16468608817:web:f708022a44a453b4ca1210',\n    measurementId: 'G-QXSYS06S5N',\n  }\n  const [form, setForm] = useState([])\n  const [cpvstate, setCpv] = useState(null)\n  const [subkat, setSubKat] = useState()\n  const [cpvName, setCpvName] = useState([])\n  const [cpvNameSUBSUB, setCpvNameSUBSUB] = useState([])\n  const [chooseSubkat, setChooseSubkat] = useState()\n  const [subSubKat, setSubSubkat] = useState()\n\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  useEffect(() => {\n    let arr = []\n    if (subSubKat) {\n      let hello = Object.keys(subSubKat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 4))\n\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvNameSUBSUB(newArr)\n    }\n  }, [subSubKat])\n\n  useEffect(() => {\n    setSubSubkat(newCount[chooseSubkat])\n  }, [chooseSubkat])\n\n  console.log(chooseSubkat)\n  console.log(subSubKat)\n  useEffect(() => {\n    let arr = []\n    if (subkat) {\n      let hello = Object.keys(subkat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 3))\n      // console.log(test2)\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvName(newArr)\n    }\n  }, [subkat])\n\n  useEffect(() => {\n    setSubKat(newCount[cpvstate])\n  }, [cpvstate])\n\n  const handleClick = (e) => setChooseSubkat(e.target.value)\n\n  const handleChange = (e) => setCpv(e.target.value)\n\n  // let db = firebase.firestore()\n\n\n  // useEffect(() => {\n  //   setForm([])\n  //   db.collection('F02_2014')\n  //     .limit(10)\n  //     .where('object.cpvmain', '==', cpv)\n  //     .get()\n  //     .then((querySnapshot) => {\n  //       querySnapshot.forEach((doc) => {\n  //         let newArr = Object.values(doc.data())[0]\n  //         // setForm([newArr])\n  //         setForm((prevState) => [...prevState, newArr])\n  //       })\n  //     })\n  // }, [cpv])\n\n  const gridStyle = { minHeight: 550 }\n\n  const columns = [\n    { field: \"bedrift\", headerName: \"Bedrift\", width: 200 },\n    { field: \"beskrivelse\", headerName: \"Beskrivelse\", width: 700 },\n    { field: \"cpv\", headerName: \"CPV\", width: 200 },\n    { field: \"cpvmain\", headerName: \"CPV Kategori\", width: 200 },\n    { field: \"dato\", headerName: \"Dato\", width: 120 },\n    { field: \"kategori\", headerName: \"Kategori\", width: 200 },\n    { field: \"subkategori\", headerName: \"Sub kategori\", width: 300 },\n  ];\n\n  let newCount = Object.values(count)[0]\n  let testData = Object.values(data)[0]\n\n\n  //  Cloudfunction i firebase\n  // 52, 102, 02, 12, 21,\n  let rows;\n  form\n    ? (rows = form.map((item, i) => {\n        return {\n          id: i,\n          bedrift: item.bedrift,\n          beskrivelse: item.beskrivelse,\n          cpvmain: item.cpvmain,\n          cpv: item.cpv,\n          dato: item.dato,\n          kategori: item.kategorier,\n          subkategori: item.subkategori,\n        };\n      }))\n    : (rows = [\n        {\n          id: 520982058,\n          bedrift: \"Loading...\",\n          beskrivelse: \"Loading...\",\n          cpvmain: \"Loading...\",\n          cpv: \"Loading...\",\n          dato: \"Loading...\",\n          kategori: \"Loading...\",\n          subkategori: \"Loading...\",\n        },\n      ]);\n\n  return (\n    <div className=\"App\">\n      <h1>Form: F02_2014</h1>\n      <label for=\"cpvmain\">Velg en kategori:</label>\n      <select name=\"cpvmain\" id=\"cpvmain\" onChange={handleChange}>\n        <option value=\"\" disabled selected>\n          Velg hovedkategori\n        </option>\n\n        {cpvMain.map((item) => (\n          <option value={item.cpv.substring(0, 2) + '000000'}>\n            {item.cpvmain} (\n            {newCount[item.cpv.substring(0, 2) + '000000'].count})\n            {item.cpv.substring(0, 2) + '000000'}\n          </option>\n        ))}\n      </select>\n      <div className='buttons'>\n        {cpvName\n          ? cpvName.map((e) => (\n              <button className='button' value={e[1]} onClick={handleClick}>\n                {e[0]} ({newCount[e[1].substring(0, 2) + '000000'][e[1]].count})\n              </button>\n            ))\n          : ''}\n      </div>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          idProperty=\"id\"\n          rowHeight={100}\n          columns={columns}\n          rows={rows}\n          multiline={true}\n          style={gridStyle}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":12},{"ruleId":"57","severity":1,"message":"62","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},{"ruleId":"57","severity":1,"message":"64","line":14,"column":10,"nodeType":"59","messageId":"60","endLine":14,"endColumn":18},{"ruleId":"57","severity":1,"message":"65","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"66","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},{"ruleId":"57","severity":1,"message":"67","line":9,"column":17,"nodeType":"59","messageId":"60","endLine":9,"endColumn":25},{"ruleId":"57","severity":1,"message":"68","line":13,"column":10,"nodeType":"59","messageId":"60","endLine":13,"endColumn":14},{"ruleId":"57","severity":1,"message":"69","line":13,"column":16,"nodeType":"59","messageId":"60","endLine":13,"endColumn":23},{"ruleId":"57","severity":1,"message":"70","line":17,"column":10,"nodeType":"59","messageId":"60","endLine":17,"endColumn":22},{"ruleId":"57","severity":1,"message":"71","line":24,"column":11,"nodeType":"59","messageId":"60","endLine":24,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":32,"column":51,"nodeType":"74","messageId":"75","endLine":32,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":40,"column":6,"nodeType":"78","endLine":40,"endColumn":16,"suggestions":"79"},{"ruleId":"57","severity":1,"message":"80","line":57,"column":9,"nodeType":"59","messageId":"60","endLine":57,"endColumn":22},{"ruleId":"57","severity":1,"message":"81","line":61,"column":9,"nodeType":"59","messageId":"60","endLine":61,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},{"ruleId":"57","severity":1,"message":"82","line":28,"column":16,"nodeType":"59","messageId":"60","endLine":28,"endColumn":23},{"ruleId":"57","severity":1,"message":"83","line":32,"column":10,"nodeType":"59","messageId":"60","endLine":32,"endColumn":23},{"ruleId":"57","severity":1,"message":"71","line":46,"column":11,"nodeType":"59","messageId":"60","endLine":46,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":54,"column":51,"nodeType":"74","messageId":"75","endLine":54,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":62,"column":6,"nodeType":"78","endLine":62,"endColumn":20,"suggestions":"84"},{"ruleId":"57","severity":1,"message":"71","line":71,"column":11,"nodeType":"59","messageId":"60","endLine":71,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":79,"column":51,"nodeType":"74","messageId":"75","endLine":79,"endColumn":53},{"ruleId":"76","severity":1,"message":"77","line":87,"column":6,"nodeType":"78","endLine":87,"endColumn":16,"suggestions":"85"},{"ruleId":"57","severity":1,"message":"86","line":124,"column":7,"nodeType":"59","messageId":"60","endLine":124,"endColumn":15},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'firebase' is defined but never used.","'DataGrid' is defined but never used.","'cpvCount' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","'data' is defined but never used.","'setInput' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'chooseSubkat' is assigned a value but never used.","'test2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newCount'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'handleChecked' is assigned a value but never used.","'hello' is assigned a value but never used.","'setForm' is assigned a value but never used.","'cpvNameSUBSUB' is assigned a value but never used.",["90"],["91"],"'testData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"92","fix":"96"},"Update the dependencies array to be: [cpvstate, newCount]",{"range":"97","text":"98"},"Update the dependencies array to be: [chooseSubkat, newCount]",{"range":"99","text":"100"},{"range":"101","text":"98"},[1277,1287],"[cpvstate, newCount]",[1882,1896],"[chooseSubkat, newCount]",[2519,2529]]