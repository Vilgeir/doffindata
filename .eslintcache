
[{"/Users/d/Documents/GitHub/doffindata/src/index.js":"1","/Users/d/Documents/GitHub/doffindata/src/reportWebVitals.js":"2","/Users/d/Documents/GitHub/doffindata/src/context/StateProvider.js":"3","/Users/d/Documents/GitHub/doffindata/src/App.js":"4","/Users/d/Documents/GitHub/doffindata/src/components/Footer.jsx":"5","/Users/d/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx":"6","/Users/d/Documents/GitHub/doffindata/src/pages/DetailedList.jsx":"7","/Users/d/Documents/GitHub/doffindata/src/pages/Categories.jsx":"8","/Users/d/Documents/GitHub/doffindata/src/pages/Home.jsx":"9","/Users/d/Documents/GitHub/doffindata/src/components/Header.jsx":"10","/Users/d/Documents/GitHub/doffindata/src/helpers/handleData.js":"11","/Users/d/Documents/GitHub/doffindata/src/components/SaveSearch.jsx":"12","/Users/d/Documents/GitHub/doffindata/src/components/Card.jsx":"13","/Users/d/Documents/GitHub/doffindata/src/components/SearchData.jsx":"14","/Users/d/Documents/GitHub/doffindata/src/components/Search.jsx":"15","/Users/d/Documents/GitHub/doffindata/src/data/withMainCategories.jsx":"16","/Users/d/Documents/GitHub/doffindata/src/components/Filter.jsx":"17","/Users/d/Documents/GitHub/doffindata/src/components/SavedSearch.jsx":"18","/Users/d/Documents/GitHub/doffindata/src/firebaseConfig.js":"19","/Users/d/Documents/GitHub/doffindata/src/data/fylker.jsx":"20","/Users/d/Documents/GitHub/doffindata/src/components/Checkboxes.jsx":"21"},{"size":588,"mtime":1619162316228,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1618903213979,"results":"24","hashOfConfig":"23"},{"size":454,"mtime":1619162316227,"results":"25","hashOfConfig":"23"},{"size":1270,"mtime":1619163673444,"results":"26","hashOfConfig":"23"},{"size":290,"mtime":1619091144814,"results":"27","hashOfConfig":"23"},{"size":2254,"mtime":1619178098195,"results":"28","hashOfConfig":"23"},{"size":6623,"mtime":1619179172312,"results":"29","hashOfConfig":"23"},{"size":1725,"mtime":1619178918647,"results":"30","hashOfConfig":"23"},{"size":4950,"mtime":1619178688052,"results":"31","hashOfConfig":"23"},{"size":433,"mtime":1619163673445,"results":"32","hashOfConfig":"23"},{"size":746,"mtime":1618903213974,"results":"33","hashOfConfig":"23"},{"size":1574,"mtime":1619162316222,"results":"34","hashOfConfig":"23"},{"size":933,"mtime":1619177140523,"results":"35","hashOfConfig":"23"},{"size":364,"mtime":1619162316226,"results":"36","hashOfConfig":"23"},{"size":398,"mtime":1619178950815,"results":"37","hashOfConfig":"23"},{"size":213077,"mtime":1618903213973,"results":"38","hashOfConfig":"23"},{"size":8066,"mtime":1619180998811,"results":"39","hashOfConfig":"23"},{"size":2595,"mtime":1619168103847,"results":"40","hashOfConfig":"23"},{"size":616,"mtime":1618905176276,"results":"41","hashOfConfig":"23"},{"size":405,"mtime":1618903213967,"results":"42","hashOfConfig":"23"},{"size":864,"mtime":1619077540916,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"szk73k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/d/Documents/GitHub/doffindata/src/index.js",[],["95","96"],"/Users/d/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/d/Documents/GitHub/doffindata/src/context/StateProvider.js",[],"/Users/d/Documents/GitHub/doffindata/src/App.js",[],"/Users/d/Documents/GitHub/doffindata/src/components/Footer.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx",["97"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { getProcurement } from '../helpers/handleData'\n\nfunction DetailedInfo({ i }) {\n  const [procurementData, setProcurement] = useState([])\n  const { procurement } = useParams()\n\n  useEffect(() => {\n    getProcurement('F02_2014', procurement, setProcurement)\n    // setProcurement(data.filter((i) => i.tittel === procurement))\n  }, [])\n\n  return (\n    <div className=\"info-container\">\n      <div className=\"info-left-bar\">\n        <p>{procurementData.oppdragsgiver}</p>\n        <h1>{procurementData.tittel}</h1>\n        <div className=\"info-card\">\n          <p><b>Publiseringsdato:</b> {procurementData.kunngjoringsdato}</p>\n          <p><b>Tilbudsfrist:</b></p>\n          <p><b>Tildelingskriterie:</b></p>\n\n          <p>{procurementData.beskrivelse}</p>\n        </div>\n        <div className=\"info-card\">\n          <h5>Dokumenter</h5>\n          {procurementData.documents\n            ? procurementData.documents.map((i, index) => (\n                <a key={index} href={\"https://www.mercell.com\" + i.url}>\n                  {i.name}\n                </a>\n              ))\n            : procurementData.url_dokumentasjon}\n        </div>\n        <div className=\"info-card\">\n          <h5>Behov for sortiment</h5>\n          <p>text</p>\n        </div>\n      </div>\n      <div className=\"info-right-bar\">\n        <button className=\"button\">Meld interesse</button>\n        <div className=\"headline-div\">\n          <h4 className=\"headline\">Kontakt</h4>\n          </div>\n        <p><b>Spørsmålsfrist:</b></p>\n        <p><b>Kontaktperson:</b></p>\n        <p><b>Telefon:</b></p>\n        <p><b>E-post:</b> {procurementData.epost}</p>\n        <div className=\"headline-div\">\n          <h4 className=\"headline\">Innkjøper</h4>\n          </div>\n        <p><b>Oppdragsgiver:</b> {procurementData.oppdragsgiver}</p>\n        <p><b>Org nr.:</b></p>\n        <p>\n            <b>Adresse:</b> {procurementData.adresse}\n            {\", \"} {procurementData.sted}\n          </p>\n        <div className=\"headline-div\">\n          <h4 className=\"headline\">Nettsted</h4>\n        </div>\n        <p>{procurementData.nettside}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default DetailedInfo\n","/Users/d/Documents/GitHub/doffindata/src/pages/DetailedList.jsx",["98","99","100","101","102","103","104"],"import React, { useEffect, useState, useContext } from 'react'\nimport Filter from '../components/Filter'\nimport SaveSearch from '../components/SaveSearch'\nimport Card from '../components/Card'\nimport { useParams } from 'react-router-dom'\nimport structure from '../data/withMainCategories'\nimport data from '../data/doffin-form2.json'\nimport { Link } from 'react-router-dom'\nimport { getData } from '../helpers/handleData'\nimport { StateContext } from '../context/StateProvider'\n\nfunction DetailedList() {\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext)\n  const [removeChecked, setRemoveChecked] = useState([])\n  const [sort, setSort] = useState()\n  const [checked, setChecked] = useState([])\n  const [saveSearch, setSaveSearch] = useState(false)\n\n  const [documents, setDocuments] = useState([])\n\n  const { category, details } = useParams()\n\n  useEffect(() => {\n    let arr = []\n    Object.values(checkedCategories)\n      .map((i) => arr.push(Object.keys(i)))\n      .flat()\n    Object.values(checkedCategories)\n      .map((i) => Object.values(i).map((item) => arr.push(item)))\n      .flat()\n    checkedCategories && setChecked(arr.flat())\n  }, [])\n\n  useEffect(() => {\n    let obj = {\n      checkedCategories,\n      category: category,\n      cpv: categorycpv,\n    }\n\n    window.localStorage.setItem('lastSearch', JSON.stringify(obj))\n  }, [checkedCategories])\n\n  console.log(checkedCategories)\n  let newdetails = details.split('+')\n  let categorycpv = newdetails[0]\n  let subcategory = newdetails[1]\n\n  useEffect(() => {\n    subcategory && setcheckedCategories([{ [subcategory]: [] }])\n    subcategory && setChecked([subcategory])\n  }, [])\n\n  useEffect(() => {\n    getData('F02_2014', 'cpvnumbermain', categorycpv, setDocuments)\n  }, [])\n\n  let newArray = []\n\n  Object.entries(documents).map((i) => newArray.push(i[1]))\n\n  const sorting = (a, b) => {\n    if (sort === 'asc') {\n      return a.tittel > b.tittel ? 1 : -1\n    } else if (sort === 'desc') {\n      return a.tittel < b.tittel ? 1 : -1\n    } else if (sort === 'date') {\n      return a.kunngjoringsdato < b.kunngjoringsdato ? 1 : -1\n    }\n    return 0\n  }\n\n  const sortedArray = newArray.sort(sorting)\n  const onChange = (event) => {\n    setSort(event.target.value)\n  }\n\n  const handleChange = (e) => {\n    console.log(e.target.value)\n    let value = e.target.value\n      .split('')\n      .filter((item) => item === '0')\n      .join('')\n\n    if (value.length === 5) {\n      checkedCategories.map(\n        (i) =>\n          Object.keys(i).join() === e.target.value &&\n          setcheckedCategories((prevstate) => [\n            ...prevstate.filter(\n              (item) => Object.keys(item).join() != [e.target.value]\n            ),\n          ])\n      )\n    } else {\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n    }\n\n    setRemoveChecked(e.target.value)\n  }\n\n  return (\n    <div className='detail-container'>\n      <div className='search'>\n        <Filter\n          details={categorycpv}\n          subcategory={subcategory}\n          category={category}\n          setcheckedCategories={setcheckedCategories}\n          checkedCategories={checkedCategories}\n          removeChecked={removeChecked}\n          setRemoveChecked={setRemoveChecked}\n          checked={checked}\n          setChecked={setChecked}\n          saveSearch={saveSearch}\n          setSaveSearch={setSaveSearch}\n        />\n      </div>\n      <div className='list-container'>\n        {subcategory\n          ? structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map((it) =>\n                  it.children.map(\n                    (i) =>\n                      i.code === subcategory && (\n                        <h1 key={i}>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n                )\n            )\n          : structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map(\n                  (i) =>\n                    i.code === categorycpv && (\n                      <h1 key={i}>\n                        {i.name} (CPV {i.code})\n                      </h1>\n                    )\n                )\n            )}\n        <div className='select-box-title'>\n          <p className=\"sorting\">Sorter etter: </p>\n          <select className='select-box' onChange={onChange}>\n            <option value='asc'>ASC</option>\n            <option value='desc'>DESC</option>\n            <option value='date'>Publisert</option>\n          </select>\n        </div>\n\n        {checkedCategories.length > 0\n          ? sortedArray.map((i) =>\n              checkedCategories.map((checked) =>\n                Object.values(checked)[0].length > 0\n                  ? Object.values(checked)[0].map(\n                      (check) =>\n                        i.cpvnumber\n                          .substring(0, 4)\n                          .includes(check.substring(0, 4)) && <Card i={i} />\n                    )\n                  : i.cpvnumber\n                      .substring(0, 3)\n\n                      .includes(Object.keys(checked)[0].substring(0, 3)) && (\n                      <Link\n                        style={{ textDecoration: 'none', color: 'black' }}\n                        to={'/' + category + '/' + categorycpv + '/' + i.id}\n                        i={i}\n                      >\n                        <Card i={i} />\n                      </Link>\n                    )\n              )\n            )\n          : sortedArray.map(\n              (i) =>\n                i.cpvnumber.substring(0, 2) === categorycpv.substring(0, 2) && (\n                  <Link\n                    style={{ textDecoration: 'none', color: 'black' }}\n                    to={'/' + category + '/' + categorycpv + '/' + i.id}\n                    i={i}\n                  >\n                    <Card i={i} />\n                  </Link>\n                )\n            )}\n      </div>\n      {saveSearch && (\n        <SaveSearch\n          setSaveSearch={setSaveSearch}\n          checkedCategories={checkedCategories}\n          category={category}\n          categorycpv={categorycpv}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DetailedList\n","/Users/d/Documents/GitHub/doffindata/src/pages/Categories.jsx",["105","106","107"],"import React, { useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport structure from '../data/withMainCategories'\nimport { useParams } from 'react-router-dom'\nimport Footer from '../components/Footer'\nimport { StateContext } from '../context/StateProvider'\n\nfunction Categories() {\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext)\n  const { category } = useParams()\n\n  useEffect(() => {\n    setcheckedCategories([])\n  }, [])\n\n  return (\n    <div className='home-container'>\n      <div className='head'>\n        <div>\n          <input\n            className=\"searchbar\"\n            placeholder=\"Søk etter anbud eller CPV-koder\"\n            src=\"../../public/iconer/search.png\"\n          />\n        </div>\n        <h3>{category}</h3>\n      </div>\n      <div className='categories'>\n        {structure.map(\n          (i) =>\n            i.main === category &&\n            i.children.map((item, idx) => (\n              <div className='category-card'>\n                <Link to={'/' + category + '/' + item.code} key={idx}>\n                  <p className=\"sub-category\">\n                    {item.name} ({item.countWithChildren})\n                  </p>\n                </Link>\n                {item.children.map((items, index) => (\n                  <Link\n                    to={'/' + category + '/' + item.code + '+' + items.code}\n                    key={index}\n                  >\n                    <p>\n                      {items.name} ({items.countWithChildren})\n                    </p>\n                  </Link>\n                ))}\n              </div>\n            ))\n        )}\n      </div>\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default Categories\n","/Users/d/Documents/GitHub/doffindata/src/pages/Home.jsx",["108","109","110","111","112"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport \"../index.css\";\nimport SavedSearch from \"../components/SavedSearch\";\nimport Footer from \"../components/Footer\";\nimport Search from \"../components/Search\";\nimport SearchData from \"../components/SearchData\";\nimport { faArrowRight, faPlug } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTools } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserMd } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLaptopCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCity } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAtom } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboardList } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShippingFast } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Home(props) {\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState();\n  const [searchDataDefault, setSearchDataDefault] = useState(\n    structure.map((i) => i.main)\n  );\n\n  //children.map((it, index) => it.code)  .flat()\n\n  console.log(searchDataDefault);\n\n  // structure.map((it) => it.children[0])\n  // const dataExample = [\n  //     {\n  //       type: \"human\",\n  //       details: [\n  //         { id: 1, name: \"Peter\", description: \"friendly, black-hair\" },\n  //         { id: 5, name: \"Susan\", description: \"blond\" },\n  //       ],\n  //     },\n  //     {\n  //       type: \"animal\",\n  //       details: [\n  //         { id: 2, name: \"Will\", description: \"lazy, cute\" },\n  //         { id: 3, name: \"Bonny\", description: \"beautiful\" },\n  //       ],\n  //     },\n  //   ],\n  //   term = \"Peter\",\n  //   result = dataExample.reduce((r, { type, details }) => {\n  //     let o = details.filter(\n  //       ({ name, description }) =>\n  //         name.includes(term) || description.includes(term)\n  //     );\n  //     if (o && o.length) r.push({ type, details: [...o] });\n  //     return r;\n  //   }, []);\n  // console.log(result);\n\n  // const term = \"48100000\";\n\n  // const searResult = searchDataDefault.reduce((r, { main, children }) => {\n  //   let o = children.filter(\n  //     ({ code, name }) => code.includes(term) || name.includes(term)\n  //   );\n  //   if (o && o.length) r.push({ main, children: [...o] });\n  //   return r;\n  // }, []);\n  // console.log(searResult);\n\n  const updateInput = (input) => {\n    const filtered = searchDataDefault.filter((main) => {\n      if (isNaN()) {\n        return main.toLowerCase().includes(input.toLowerCase());\n      }\n      return main;\n    });\n    if (input === \"\") return setInput(input), setSearchData([]);\n    return setInput(input), setSearchData(filtered);\n  };\n\n  //console.log(searchData);\n\n  const homeIcons = (icon) => {\n    switch (icon) {\n      case \"IT\":\n        return faLaptopCode;\n      case \"Bygg og anlegg\":\n        return faTools;\n      case \"Helse\":\n        return faUserMd;\n      case \"Varer og utstyr\":\n        return faShoppingCart;\n      case \"Tjenester\":\n        return faBriefcase;\n      case \"Elektronisk utstyr\":\n        return faPlug;\n      case \"Transport\":\n        return faShippingFast;\n      case \"Kontor\":\n        return faClipboardList;\n      case \"Olje og kjemikalier\":\n        return faAtom;\n      case \"Offentlige ytelser\":\n        return faCity;\n      default:\n        return faAtom;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"home-container\">\n        <div className=\"head\">\n          <Search input={input} onChange={updateInput} />\n          <SearchData searchData={searchData} />\n          <h2>Alle kategorier</h2>\n        </div>\n      </div>\n      <div>\n        {/* {searchData.map((result) => {\n          if (result) {\n            return <h3>{result}</h3>;\n          } \n          return null;\n        })} */}\n      </div>\n      <div class=\"content-container\">\n        <div className=\"box-container\">\n          {structure.map((i, index) => (\n            <Link\n              className=\"main-boxes\"\n              to={i.main}\n              key={index}\n              id={\"main-boxes-\" + index}\n            >\n              <div className=\"homeicon-container\">\n                <FontAwesomeIcon id=\"homeicon-icon\" icon={homeIcons(i.main)} />\n              </div>\n              <div className=\"main-box-text\">\n                <p className=\"main-boxes-title\">{i.main}</p>\n                <p className=\"main-boxes-cpv\">CPV {i.children[0].code}</p>\n              </div>\n              <div className=\"main-boxes-arrow\">\n                <FontAwesomeIcon icon={faArrowRight} color=\"#4DBFAC\" />\n              </div>\n            </Link>\n          ))}\n        </div>\n        <SavedSearch />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/d/Documents/GitHub/doffindata/src/components/Header.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/helpers/handleData.js",[],"/Users/d/Documents/GitHub/doffindata/src/components/SaveSearch.jsx",["113","114"],"import React, { useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\n\nfunction SaveSearch({\n  setSaveSearch,\n  checkedCategories,\n  category,\n  categorycpv,\n}) {\n  const [nameSearch, setNameSearch] = useState()\n  const handleChange = (e) => {\n    setNameSearch(e.target.value)\n  }\n\n  let obj = {\n    checkedCategories,\n    category: category,\n    cpv: categorycpv,\n  }\n  // console.log(obj)\n  // console.log(category + categorycpv)\n  const handleClick = () => {\n    window.localStorage.setItem(nameSearch, JSON.stringify(obj))\n    setSaveSearch(false)\n  }\n\n  return (\n    <div className='modal'>\n      <div className='modal-elements'>\n        <h1 className=''>Lagre søk</h1>\n        <h2>Filter</h2>\n        {structure.map((item) => {\n          item.main === category &&\n            item.children.map(\n              (it) => (it.code === categorycpv ? <h3>{it.name}</h3> : '')\n              // (it) => it.code === categorycpv && <h3>{it.name}</h3>\n            )\n        })}\n\n        <p>{category}</p>\n\n        <h2>Navngi søk *</h2>\n        <input\n          type='text'\n          placeholder='Navngi søk'\n          onChange={handleChange}\n        ></input>\n        <div>\n          <input type='checkbox' defaultChecked></input>\n          <label>Ja, jeg ønsker å motta e-post med varsel om nye anbud</label>\n        </div>\n        <div>\n          <button onClick={handleClick}>Lagre søk</button>\n          <button onClick={() => setSaveSearch(false)}>Avbryt</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SaveSearch\n","/Users/d/Documents/GitHub/doffindata/src/components/Card.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/components/SearchData.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/components/Search.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/data/withMainCategories.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/components/Filter.jsx",["115","116","117"],"import React, { useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\nimport fylker from '../data/fylker'\nimport { faArrowLeft, faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkboxes from './Checkboxes'\nimport { Link } from 'react-router-dom'\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  checkedCategories,\n  setcheckedCategories,\n  removeChecked,\n  checked,\n  setChecked,\n  setSaveSearch,\n}) {\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() != [e.target.value]\n          ),\n        ])\n    )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ])\n    handleCheck(e)\n  }\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes('00000')) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ]\n          }\n          return [...prevState.filter((i) => i !== removeChecked)]\n        } else {\n          return [...prevState, removeChecked]\n        }\n      })\n  }, [removeChecked])\n\n  const removeFilters = () => {\n    setcheckedCategories([])\n    setChecked([])\n  }\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    )\n  }\n\n  console.log(checked)\n  // console.log(JSON.parse(window.localStorage.map((i) => i)))\n  // console.log(window.localStorage.key(i))\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      )\n    handleCheck(e)\n  }\n\n  console.log(checkedCategories)\n\n  const goBack = () => {\n    window.history.back()\n  }\n\n  return (\n    <div>\n      <div className=\"save-search\">\n        <button className='button' onClick={() => setSaveSearch(true)}>\n          Lagre søk\n        </button>\n        <p>Du har <b>1 lagret søk</b> <FontAwesomeIcon icon={faChevronDown} /></p> {/* Placeholder mens jeg styler <3Daniel */}\n      </div>\n      <div>\n        <input\n          type='text'\n          className='searchbar'\n          id='detail-search'\n          placeholder='Søk i anbud'\n        />\n      </div>\n      {checkedCategories.length > 0 && (\n        <button className='cpv-button' onClick={removeFilters}>\n          Nullstill filter\n        </button>\n      )}\n\n      <div className='filter-header'>\n        <h4>Kategorier</h4>\n      </div>\n      <Link onClick={goBack}>\n        <FontAwesomeIcon icon={faArrowLeft} /> {category}\n      </Link>\n      <div className='check-container'>\n        {structure.map(\n          (it) =>\n            it.main === category &&\n            it.children.map(\n              (i) =>\n                i.code === details &&\n                i.children.map((item, i) => (\n                  <div className='checkboxes'>\n                    {subcategory && subcategory === item.code ? (\n                      <div>\n                        <div>\n                          <Checkboxes\n                            key={i}\n                            value={item.code}\n                            onChange={handleClick}\n                            className={'checkbox'}\n                            // handleCheck={handleCheck}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n\n                          <label className='check-label'>\n                            {item.name} ({item.countWithChildren})\n                          </label>\n                        </div>\n\n                        {checkedCategories.map(\n                          (check) =>\n                            Object.keys(check).includes(item.code) &&\n                            item.children.map((it, index) => (\n                              <div key={it} className='subcheckboxes'>\n                                <Checkboxes\n                                  key={index}\n                                  value={it.code}\n                                  onChange={handleChange}\n                                  className={'checkbox'}\n                                  // handleCheck={handleCheck}\n                                  checked={\n                                    checked.includes(it.code) ? true : false\n                                  }\n                                />\n                                <label className='check-label'>\n                                  {it.name} ({it.countWithChildren})\n                                </label>\n                              </div>\n                            ))\n                        )}\n                      </div>\n                    ) : (\n                      <>\n                        <Checkboxes\n                          value={item.code}\n                          onChange={handleClick}\n                          className={'checkbox'}\n                          // handleCheck={handleCheck}\n                          key={i}\n                          checked={checked.includes(item.code) ? true : false}\n                        />\n                        <label className='check-label'>\n                          {item.name} ({item.countWithChildren})\n                        </label>\n                        {checkedCategories.map(\n                          (check) =>\n                            Object.keys(check).includes(item.code) &&\n                            item.children.map((it, index) => (\n                              <div className='subcheckboxes'>\n                                <Checkboxes\n                                  key={index}\n                                  value={it.code}\n                                  onChange={handleChange}\n                                  className={'checkbox'}\n                                  // handleCheck={handleCheck}\n                                  checked={\n                                    checked.includes(it.code) ? true : false\n                                  }\n                                />\n                                <label className='check-label'>\n                                  {it.name} ({it.countWithChildren})\n                                </label>\n                              </div>\n                            ))\n                        )}\n                      </>\n                    )}\n                  </div>\n                ))\n            )\n        )}\n      </div>\n\n\n      {/*<div className='black-line' />*/}\n\n      <div className='filter-header'>\n        <h4>Fylker</h4>\n      </div>\n      {fylker.map((item, i) => (\n        <div className='checkboxes'>\n          <input key={i} type='checkbox' value={item.navn}></input>\n          <label>{item.navn}</label>\n        </div>\n      ))}\n      {/*<div className='black-line' />*/}\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/d/Documents/GitHub/doffindata/src/components/SavedSearch.jsx",["118","119","120","121"],"import React, { useContext, useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\nimport { ScrollArea } from '@material-ui/data-grid'\nimport { StateContext } from '../context/StateProvider'\n\nfunction SavedSearch() {\n  const [last, setLast] = useState([])\n  const [openLast, setOpenLast] = useState(false)\n  const [saved, setSaved] = useState([])\n  const [openSaved, setOpenSaved] = useState(false)\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext)\n\n  let category = structure.map((i) => i.main)\n  let arr = Object.keys(localStorage).filter(\n    (elem) => elem !== 'ally-supports-cache' && elem !== 'lastSearch'\n  )\n\n  useEffect(() => {\n    arr.map((elem) =>\n      setSaved((prevstate) => [\n        ...prevstate,\n        { [elem]: JSON.parse(localStorage.getItem(elem)) },\n      ])\n    )\n  }, [])\n\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem('lastSearch'))\n    let arr = []\n    data &&\n      (arr = [\n        data.category,\n        data.cpv,\n        Object.values(data.checkedCategories).map((i) =>\n          Object.entries(i).flat().join(' - ')\n        ),\n      ])\n\n    setLast(arr)\n  }, [])\n\n  const handleClick = (i) => {\n    Object.values(i).map(\n      (item) =>\n        item.checkedCategories && setcheckedCategories(item.checkedCategories)\n    )\n  }\n\n  return (\n    <div className='home-buttons'>\n      <button\n        className='home-button'\n        onClick={() => setOpenLast((prev) => !prev)}\n      >\n        Siste søk <FontAwesomeIcon icon={faChevronDown} />\n      </button>\n\n      {openLast && (\n        <Link\n          to={'/' + Object.values(last)[0] + '/' + Object.values(last)[1]}\n          onClick={() => handleClick(last)}\n        >\n          {Object.values(last).flat().join(' - ')}\n          {console.log(last)}\n        </Link>\n      )}\n      <button\n        className='home-button'\n        onClick={() => setOpenSaved((prev) => !prev)}\n      >\n        Lagrede søk <FontAwesomeIcon icon={faChevronDown} />\n      </button>\n\n      {openSaved &&\n        saved.map((i, index) => (\n          <Link\n            to={\n              '/' + Object.values(i)[0].category + '/' + Object.values(i)[0].cpv\n            }\n            key={index}\n            onClick={() => handleClick(i)}\n          >\n            {Object.keys(i)[0]}\n            {console.log(i)}\n          </Link>\n        ))}\n    </div>\n  )\n}\n\nexport default SavedSearch\n","/Users/d/Documents/GitHub/doffindata/src/firebaseConfig.js",[],"/Users/d/Documents/GitHub/doffindata/src/data/fylker.jsx",[],"/Users/d/Documents/GitHub/doffindata/src/components/Checkboxes.jsx",[],["122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":6,"nodeType":"130","endLine":12,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":12},{"ruleId":"128","severity":1,"message":"136","line":32,"column":6,"nodeType":"130","endLine":32,"endColumn":8,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":42,"column":6,"nodeType":"130","endLine":42,"endColumn":25,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":52,"column":6,"nodeType":"130","endLine":52,"endColumn":8,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"142","line":56,"column":6,"nodeType":"130","endLine":56,"endColumn":8,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":78,"column":9,"nodeType":"134","messageId":"135","endLine":78,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":91,"column":50,"nodeType":"147","messageId":"148","endLine":91,"endColumn":52},{"ruleId":"132","severity":1,"message":"149","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"150","line":9,"column":11,"nodeType":"134","messageId":"135","endLine":9,"endColumn":28},{"ruleId":"128","severity":1,"message":"151","line":14,"column":6,"nodeType":"130","endLine":14,"endColumn":8,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"149","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":14},{"ruleId":"132","severity":1,"message":"154","line":24,"column":29,"nodeType":"134","messageId":"135","endLine":24,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":78,"column":45,"nodeType":"157","messageId":"158","endLine":78,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":79,"column":27,"nodeType":"157","messageId":"158","endLine":79,"endColumn":28},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":32,"column":31,"nodeType":"161","messageId":"162","endLine":32,"endColumn":33},{"ruleId":"132","severity":1,"message":"163","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":26,"column":48,"nodeType":"147","messageId":"148","endLine":26,"endColumn":50},{"ruleId":"128","severity":1,"message":"164","line":55,"column":6,"nodeType":"130","endLine":55,"endColumn":21,"suggestions":"165"},{"ruleId":"132","severity":1,"message":"166","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":20},{"ruleId":"132","severity":1,"message":"150","line":14,"column":11,"nodeType":"134","messageId":"135","endLine":14,"endColumn":28},{"ruleId":"132","severity":1,"message":"167","line":16,"column":7,"nodeType":"134","messageId":"135","endLine":16,"endColumn":15},{"ruleId":"128","severity":1,"message":"168","line":28,"column":6,"nodeType":"130","endLine":28,"endColumn":8,"suggestions":"169"},{"ruleId":"124","replacedBy":"170"},{"ruleId":"126","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'procurement'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'checkedCategories'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'category' and 'categorycpv'. Either include them or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'setcheckedCategories' and 'subcategory'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'categorycpv'. Either include it or remove the dependency array.",["178"],"'handleChange' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Footer' is defined but never used.","'checkedCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setcheckedCategories'. Either include it or remove the dependency array.",["179"],"'useEffect' is defined but never used.","'setSearchDataDefault' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"'ScrollArea' is defined but never used.","'category' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["181"],["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [procurement]",{"range":"198","text":"199"},"Update the dependencies array to be: [checkedCategories]",{"range":"200","text":"201"},"Update the dependencies array to be: [category, categorycpv, checkedCategories]",{"range":"202","text":"203"},"Update the dependencies array to be: [setcheckedCategories, subcategory]",{"range":"204","text":"205"},"Update the dependencies array to be: [categorycpv]",{"range":"206","text":"207"},"Update the dependencies array to be: [setcheckedCategories]",{"range":"208","text":"209"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"210","text":"211"},"Update the dependencies array to be: [arr]",{"range":"212","text":"213"},[428,430],"[procurement]",[1175,1177],"[checkedCategories]",[1370,1389],"[category, categorycpv, checkedCategories]",[1667,1669],"[setcheckedCategories, subcategory]",[1765,1767],"[categorycpv]",[481,483],"[setcheckedCategories]",[1521,1536],"[removeChecked, setChecked]",[1024,1026],"[arr]"]
