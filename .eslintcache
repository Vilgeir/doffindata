[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx":"4","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx":"5","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx":"6","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx":"7","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx":"8","/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js":"9","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx":"10","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx":"11","/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx":"12","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx":"13"},{"size":493,"mtime":1618473548663,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611836465200,"results":"16","hashOfConfig":"15"},{"size":1167,"mtime":1618326188925,"results":"17","hashOfConfig":"15"},{"size":725,"mtime":1618326188945,"results":"18","hashOfConfig":"15"},{"size":1406,"mtime":1618326188942,"results":"19","hashOfConfig":"15"},{"size":6794,"mtime":1618490280822,"results":"20","hashOfConfig":"15"},{"size":1730,"mtime":1618490263967,"results":"21","hashOfConfig":"15"},{"size":213077,"mtime":1615726655130,"results":"22","hashOfConfig":"15"},{"size":782,"mtime":1618490347500,"results":"23","hashOfConfig":"15"},{"size":8212,"mtime":1618326188930,"results":"24","hashOfConfig":"15"},{"size":849,"mtime":1618490296068,"results":"25","hashOfConfig":"15"},{"size":882,"mtime":1618326188928,"results":"26","hashOfConfig":"15"},{"size":405,"mtime":1615195299708,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1um9ekq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["58","59"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx",["60","61","62","63"],"import React, { useEffect, useState } from \"react\";\nimport Filter from \"../components/Filter\";\nimport Card from \"../components/Card\";\nimport { useParams } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport data from \"../data/doffin-form2.json\";\nimport { Link } from \"react-router-dom\";\nimport { getData } from \"../helpers/handleData\";\n\nfunction DetailedList() {\n  const [checkedCategories, setcheckedCategories] = useState([]);\n  const [removeChecked, setRemoveChecked] = useState([]);\n  const [sort, setSort] = useState();\n  const [checked, setChecked] = useState([]);\n\n  const [documents, setDocuments] = useState([]);\n\n  const { category, details } = useParams();\n\n  // const { category, details } = useParams()\n  let newdetails = details.split(\"+\");\n  let categorycpv = newdetails[0];\n  let subcategory = newdetails[1];\n\n  console.log(categorycpv);\n  useEffect(() => {\n    subcategory && setcheckedCategories([{ [subcategory]: [] }]);\n    subcategory && setChecked([subcategory]);\n  }, []);\n\n  useEffect(() => {\n    getData(\"F02_2014\", \"cpvnumbermain\", categorycpv, setDocuments);\n  }, []);\n\n  console.log(documents);\n\n  let arr = [\"2020-09-\", \"2020-10-\", \"2020-11-\"];\n\n  let newArray = [];\n\n  Object.entries(documents).map((i) => newArray.push(i[1]));\n\n  const sorting = (a, b) => {\n    if (sort === \"asc\") {\n      return a.tittel > b.tittel ? 1 : -1;\n    } else if (sort === \"desc\") {\n      return a.tittel < b.tittel ? 1 : -1;\n    } else if (sort === \"date\") {\n      return a.kunngjoringsdato < b.kunngjoringsdato ? 1 : -1;\n    }\n    return 0;\n  };\n\n  const sortedArray = newArray.sort(sorting);\n  console.log(sortedArray);\n  const onChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    let value = e.target.value\n      .split(\"\")\n      .filter((item) => item === \"0\")\n      .join(\"\");\n\n    if (value.length === 5) {\n      checkedCategories.map(\n        (i) =>\n          Object.keys(i).join() === e.target.value &&\n          setcheckedCategories((prevstate) => [\n            ...prevstate.filter(\n              (item) => Object.keys(item).join() != [e.target.value]\n            ),\n          ])\n      );\n    } else {\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      );\n    }\n\n    setRemoveChecked(e.target.value);\n  };\n\n  return (\n    <div className=\"detail-container\">\n      <div className=\"search\">\n        <Filter\n          details={categorycpv}\n          subcategory={subcategory}\n          category={category}\n          setcheckedCategories={setcheckedCategories}\n          checkedCategories={checkedCategories}\n          removeChecked={removeChecked}\n          setRemoveChecked={setRemoveChecked}\n          checked={checked}\n          setChecked={setChecked}\n        />\n      </div>\n      <div className=\"list-container\">\n        {subcategory\n          ? structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map((it) =>\n                  it.children.map(\n                    (i) =>\n                      i.code === subcategory && (\n                        <h1 key={i}>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n                )\n            )\n          : structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map(\n                  (i) =>\n                    i.code === categorycpv && (\n                      <h1 key={i}>\n                        {i.name} (CPV {i.code})\n                      </h1>\n                    )\n                )\n            )}\n        <select onChange={onChange}>\n          <option disabled value=\"cpv-sort\">\n            Sorter etter\n          </option>\n          <option value=\"asc\">ASC</option>\n          <option value=\"desc\">DESC</option>\n          <option value=\"date\">Publisert</option>\n        </select>\n        <div>\n          <h3>CPV:</h3>\n          {checkedCategories.map((i) => (\n            <>\n              <button\n                value={Object.keys(i)[0]}\n                onClick={handleChange}\n                className=\"cpv-button\"\n              >\n                {Object.keys(i)[0]}\n              </button>\n              {Object.values(i)[0].map((item) => (\n                <button\n                  value={item}\n                  onClick={handleChange}\n                  className=\"cpv-button\"\n                >\n                  {item}\n                </button>\n              ))}\n            </>\n          ))}\n        </div>\n\n        {checkedCategories.length > 0\n          ? //           ? data.map((i) =>\n\n            sortedArray.map((i) =>\n              checkedCategories.map((checked) =>\n                Object.values(checked)[0].length > 0\n                  ? Object.values(checked)[0].map(\n                      (check) =>\n                        i.cpvnumber\n                          .substring(0, 4)\n                          .includes(check.substring(0, 4)) &&\n                        arr.map(\n                          (item) =>\n                            item.includes(\n                              i.kunngjoringsdato.substring(0, 8)\n                            ) && <Card i={i} />\n                        )\n                    )\n                  : i.cpvnumber\n                      .substring(0, 3)\n                      .includes(Object.keys(checked)[0].substring(0, 3)) &&\n                    arr.map(\n                      (item) =>\n                        item.includes(i.kunngjoringsdato.substring(0, 8)) && (\n                          <Card i={i} />\n                        )\n                    )\n              )\n            )\n          : //           : data.map(\n\n            sortedArray.map(\n              (i) =>\n                i.cpvnumber.substring(0, 2) === categorycpv.substring(0, 2) &&\n                arr.map(\n                  (item) =>\n                    item.includes(i.kunngjoringsdato.substring(0, 8)) && (\n                      <Link\n                        style={{ textDecoration: \"none\", color: \"black\" }}\n                        to={\"/\" + category + \"/\" + categorycpv + \"/\" + i.tittel}\n                        i={i}\n                      >\n                        <Card i={i} />\n                      </Link>\n                    )\n                )\n            )}\n      </div>\n    </div>\n  );\n}\n\nexport default DetailedList;\n","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx",["64","65","66"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport data from \"../data/doffin-form2.json\";\n\nfunction DetailedInfo({ i }) {\n  const [procurementData, setProcurement] = useState();\n  const { procurement } = useParams();\n\n  useEffect(() => {\n    getProcurement(\"F02_2014\", procurement, setProcurement);\n    // setProcurement(data.filter((i) => i.tittel === procurement))\n  }, []);\n\n  console.log(procurementData);\n  return (\n    <div>\n      <h1>{procurementData.tittel}</h1>\n      <button>Meld interesse</button>\n      <div>\n        <h3>Kunngjøringsdetaljer</h3>\n        <p>\n          Kunngjøringsdato:{\" \"}\n          {procurementData && procurementData[0].kunngjoringsdato}\n        </p>\n        <p>\n          Adresse: {procurementData && procurementData[0].adresse}\n          {\", \"} {procurementData && procurementData[0].sted}\n        </p>\n        <p>E-post: {procurementData && procurementData[0].epost}</p>\n        <p>Nettside: {procurementData && procurementData[0].nettside}</p>\n      </div>\n      <div className=\"info-card\">\n        <h3>Beskrivelse av anbud</h3>\n        <p>{procurementData.beskrivelse}</p>\n      </div>\n      <div className=\"info-card\">\n        <h3>Dokumenter</h3>\n        {procurementData.documents\n          ? procurementData.documents.map((i, index) => (\n              <a key={index} href={\"https://www.mercell.com\" + i.url}>\n                {i.name}\n              </a>\n            ))\n          : procurementData.url_dokumentasjon}\n      </div>\n      <div className=\"info-card\">\n        <h3>Behov for sortiment</h3>\n        <p>text</p>\n      </div>\n      <button className=\"button\">Meld interesse</button>\n    </div>\n  );\n}\n\nexport default DetailedInfo;\n","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js",[],"/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx",["67"],"import React, { useEffect } from 'react'\nimport structure from '../data/withMainCategories'\nimport fylker from '../data/fylker'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkboxes from './Checkboxes'\nimport { Link } from 'react-router-dom'\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  checkedCategories,\n  setcheckedCategories,\n  removeChecked,\n  setRemoveChecked,\n  checked,\n  setChecked,\n}) {\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() !== [e.target.value]\n          ),\n        ])\n    )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ])\n  }\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes('00000')) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ]\n          }\n          return [...prevState.filter((i) => i !== removeChecked)]\n        } else {\n          return [...prevState, removeChecked]\n        }\n      })\n  }, [removeChecked])\n\n  const removeFilters = () => {\n    setcheckedCategories([])\n    setChecked([])\n  }\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    )\n  }\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      )\n  }\n\n  const goBack = () => {\n    window.history.back()\n  }\n\n  return (\n    <div>\n      <h3 className=''>Søk</h3>\n      <div>\n        <input\n          type='text'\n          className='searchbar'\n          id='detail-search'\n          placeholder='Søk'\n        />\n      </div>\n      <h3 className=''>Filter</h3>\n      {checkedCategories.length > 0 && (\n        <button className='cpv-button' onClick={removeFilters}>\n          Fjern alle filter\n        </button>\n      )}\n      <h4>Kategorier</h4>\n      <Link onClick={goBack}>\n        <FontAwesomeIcon icon={faArrowLeft} /> {category}\n      </Link>\n      {structure.map(\n        (it) =>\n          it.main === category &&\n          it.children.map(\n            (i) =>\n              i.code === details &&\n              i.children.map((item, i) => (\n                <div className='checkboxes'>\n                  {subcategory && subcategory === item.code ? (\n                    <div className='check-container'>\n                      <div>\n                        {Object.entries(checked).map((elem) => (\n                          <Checkboxes\n                            key={i}\n                            value={item.code}\n                            onChange={handleClick}\n                            className={'checkbox'}\n                            id={item.code}\n                            handleCheck={handleCheck}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n                        ))}\n                        <label className='check-label'>\n                          {item.name} ({item.countWithChildren})\n                        </label>\n                      </div>\n\n                      {checkedCategories.map(\n                        (check) =>\n                          Object.keys(check).includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div key={it} className='subcheckboxes'>\n                              <Checkboxes\n                                key={index}\n                                value={it.code}\n                                onChange={handleClick}\n                                className={'checkbox'}\n                                id={it.code}\n                                handleCheck={handleCheck}\n                                checked={\n                                  checked.includes(it.code) ? true : false\n                                }\n                              />\n                              <label className='check-label'>\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </div>\n                  ) : (\n                    <>\n                      <Checkboxes\n                        value={item.code}\n                        onChange={handleClick}\n                        className={'checkbox'}\n                        id={item.code}\n                        handleCheck={handleCheck}\n                        key={i}\n                        checked={checked.includes(item.code) ? true : false}\n                      />\n\n                      <label className='check-label'>\n                        {item.name} ({item.countWithChildren})\n                      </label>\n                      {checkedCategories.map(\n                        (check) =>\n                          Object.keys(check).includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div className='subcheckboxes'>\n                              <Checkboxes\n                                key={index}\n                                value={it.code}\n                                onChange={handleChange}\n                                className={'checkbox'}\n                                id={it.code}\n                                handleCheck={handleCheck}\n                                checked={\n                                  checked.includes(it.code) ? true : false\n                                }\n                              />\n                              <label className='check-label'>\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </>\n                  )}\n                </div>\n              ))\n          )\n      )}\n      <h4>Fylker</h4>\n      {fylker.map((item, i) => (\n        <div className='checkboxes'>\n          <input key={i} type='checkbox' value={item.navn}></input>\n          <label>{item.navn}</label>\n        </div>\n      ))}\n      <h4>Kunngjøringsdato</h4>\n      <p>Kalender</p>\n      <h4>Tilbudsfrist</h4>\n      <p>Kalender</p>\n      <h4>Publikasjonstype</h4>\n      <div className='checkboxes'>\n        <input type='checkbox' value='nasjonal'></input>\n        <label>Nasjonal</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className='checkboxes'>\n        <input type='checkbox' value='europeisk'></input>\n        <label>Europeisk</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className='checkboxes'>\n        {/* <span className='checkmark'></span> */}\n        <input type='checkbox' value='marketcunsulting'></input>\n        <label>Market Cunsulting</label>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":12},{"ruleId":"76","severity":1,"message":"77","line":29,"column":6,"nodeType":"78","endLine":29,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":33,"column":6,"nodeType":"78","endLine":33,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":73,"column":50,"nodeType":"84","messageId":"85","endLine":73,"endColumn":52},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":12},{"ruleId":"86","severity":2,"message":"87","line":10,"column":5,"nodeType":"74","messageId":"88","endLine":10,"endColumn":19},{"ruleId":"76","severity":1,"message":"89","line":12,"column":6,"nodeType":"78","endLine":12,"endColumn":8,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":54,"column":6,"nodeType":"78","endLine":54,"endColumn":21,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'subcategory'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'categorycpv'. Either include it or remove the dependency array.",["96"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-undef","'getProcurement' is not defined.","undef","React Hook useEffect has a missing dependency: 'procurement'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [subcategory]",{"range":"107","text":"108"},"Update the dependencies array to be: [categorycpv]",{"range":"109","text":"110"},"Update the dependencies array to be: [procurement]",{"range":"111","text":"112"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"113","text":"114"},[1023,1025],"[subcategory]",[1123,1125],"[categorycpv]",[422,424],"[procurement]",[1481,1496],"[removeChecked, setChecked]"]