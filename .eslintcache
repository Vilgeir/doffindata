[{"/Users/evy/Documents/GitHub/doffindata/src/index.js":"1","/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js":"2","/Users/evy/Documents/GitHub/doffindata/src/App.js":"3","/Users/evy/Documents/GitHub/doffindata/src/Home.js":"4","/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx":"5","/Users/evy/Documents/GitHub/doffindata/src/data/count.structure.jsx":"6","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx":"7","/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx":"8","/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx":"9","/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx":"10"},{"size":501,"mtime":1613323008891,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1613323008891,"results":"13","hashOfConfig":"12"},{"size":1361,"mtime":1614948892318,"results":"14","hashOfConfig":"12"},{"size":5318,"mtime":1614935633253,"results":"15","hashOfConfig":"12"},{"size":999,"mtime":1614948633275,"results":"16","hashOfConfig":"12"},{"size":1395175,"mtime":1614935398040,"results":"17","hashOfConfig":"12"},{"size":160,"mtime":1614948558313,"results":"18","hashOfConfig":"12"},{"size":163,"mtime":1614948560642,"results":"19","hashOfConfig":"12"},{"size":153,"mtime":1614948022201,"results":"20","hashOfConfig":"12"},{"size":111,"mtime":1614948846597,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5s57ed",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evy/Documents/GitHub/doffindata/src/index.js",[],["46","47"],"/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/evy/Documents/GitHub/doffindata/src/App.js",["48","49","50","51","52"],"/Users/evy/Documents/GitHub/doffindata/src/Home.js",["53","54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { useEffect, useState } from 'react'\nimport cpvMain from './cpvmain.json'\nimport CPVcodes from './data/cpv.json'\nimport logo from './logo.svg'\nimport data from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nimport firebaseConf from './firebaseConfig.json'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\nfunction Home() {\n  const [form, setForm] = useState([])\n  const [cpvstate, setCpv] = useState(null)\n  const [subkat, setSubKat] = useState()\n  const [cpvName, setCpvName] = useState([])\n  const [cpvNameSUBSUB, setCpvNameSUBSUB] = useState([])\n  const [chooseSubkat, setChooseSubkat] = useState()\n  const [subSubKat, setSubSubkat] = useState()\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConf)\n  }\n\n  useEffect(() => {\n    let arr = []\n    if (subSubKat) {\n      let hello = Object.keys(subSubKat).filter((e) => e.length === 8)\n\n      let test2 = hello.map((item) => item.slice(0, 4))\n\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvNameSUBSUB(newArr)\n    }\n  }, [subSubKat])\n\n  // useEffect(() => {\n  //   setSubSubkat(newCount[chooseSubkat])\n  // }, [chooseSubkat])\n\n  useEffect(() => {\n    let arr = []\n    if (subkat) {\n      let hello = Object.keys(subkat).filter((e) => e.length === 8)\n\n      let test2 = hello.map((item) => item.slice(0, 3))\n      // console.log(test2)\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvName(newArr)\n    }\n  }, [subkat])\n\n  // useEffect(() => {\n  //   setSubKat(newCount[cpvstate && cpvstate.number])\n  // }, [cpvstate])\n\n  const handleClick = (e) => setChooseSubkat(e.target.value)\n\n  const handleChange = (e) => {\n    let numbersAndName = e.target.value.split(' , ')\n    setCpv({ number: numbersAndName[0], name: numbersAndName[1] })\n  }\n\n  // let db = firebase.firestore()\n\n  // useEffect(() => {\n  //   setForm([])\n  //   db.collection('F02_2014')\n  //     .limit(10)\n  //     .where('object.cpvmain', '==', cpvstate && cpvstate.name)\n  //     .get()\n  //     .then((querySnapshot) => {\n  //       querySnapshot.forEach((doc) => {\n  //         console.log(Object.values(doc.data())[0])\n  //         let newArr = Object.values(doc.data())[0]\n  //         setForm((prevState) => [...prevState, newArr])\n  //       })\n  //     })\n  //     console.log(form)\n  // }, [cpvstate])\n\n  const gridStyle = { minHeight: 550 }\n  const columns = [\n    { field: 'bedrift', headerName: 'Bedrift', width: 200 },\n    { field: 'beskrivelse', headerName: 'Beskrivelse', width: 700 },\n    { field: 'cpv', headerName: 'CPV', width: 200 },\n    { field: 'cpvmain', headerName: 'CPV Kategori', width: 200 },\n    { field: 'dato', headerName: 'Dato', width: 120 },\n    { field: 'kategori', headerName: 'Kategori', width: 200 },\n    { field: 'subkategori', headerName: 'Sub kategori', width: 300 },\n  ]\n\n  // let newCount = Object.values(count)[0]\n  let testData = Object.values(data)[0]\n\n  //  Cloudfunction i firebase\n  // 52, 102, 02, 12, 21,\n  let rows\n  form\n    ? (rows = form.map((item, i) => {\n        return {\n          id: i,\n          bedrift: item.bedrift,\n          beskrivelse: item.beskrivelse,\n          cpvmain: item.cpvmain,\n          cpv: item.cpv,\n          dato: item.dato,\n          kategori: item.kategorier,\n          subkategori: item.subkategori,\n        }\n      }))\n    : (rows = [\n        {\n          id: 520982058,\n          bedrift: 'Loading...',\n          beskrivelse: 'Loading...',\n          cpvmain: 'Loading...',\n          cpv: 'Loading...',\n          dato: 'Loading...',\n          kategori: 'Loading...',\n          subkategori: 'Loading...',\n        },\n      ])\n\n  return (\n    <div className='App'>\n      <h1>Form: F02_2014</h1>\n      <label for='cpvmain'>Velg en kategori:</label>\n      <select name='cpvmain' id='cpvmain' onChange={handleChange}>\n        <option value='' disabled selected>\n          Velg hovedkategori\n        </option>\n\n        {cpvMain.map((item) => (\n          <option\n            value={item.cpv.substring(0, 2) + '000000' + ' , ' + item.cpvmain}\n          >\n            {/* <option value={item}> */}\n            {item.cpvmain} (\n            {/* {newCount[item.cpv.substring(0, 2) + '000000'].count}) */}\n            {item.cpv.substring(0, 2) + '000000'}\n          </option>\n        ))}\n      </select>\n      <div className='buttons'>\n        {cpvName\n          ? cpvName.map((e) => (\n              <button className='button' value={e[1]} onClick={handleClick}>\n                {/* {e[0]} ({newCount[e[1].substring(0, 2) + '000000'][e[1]].count}) */}\n              </button>\n            ))\n          : ''}\n      </div>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          idProperty='id'\n          rowHeight={100}\n          columns={columns}\n          rows={rows}\n          multiline={true}\n          style={gridStyle}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n",["66","67"],"/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx",["68"],"import React, { useEffect, useState } from 'react'\nimport structure from '../data/count.structure'\n\nfunction Filter() {\n  //   const [checked, setChecked] = useState({ cpv: '', checked: '' })\n  const [checked, setChecked] = useState(\n    structure.map((item) => ({ cpv: item.code, checked: false }))\n  )\n\n  const handleChange = (e) => {\n    setChecked({ cpv: e.target.value, checked: e.target.checked })\n  }\n\n  return (\n    <div>\n      {structure.map((item, i) => (\n        <div>\n          <input\n            key={i}\n            type='checkbox'\n            value={item.code}\n            onClick={handleChange}\n          ></input>\n          <label>\n            {item.name} ({item.count})\n          </label>\n          {checked.cpv === item.code &&\n            checked.checked === true &&\n            item.children.map((i) => (\n              <p className='button'>\n                {i.name} ({i.count})\n              </p>\n            ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/evy/Documents/GitHub/doffindata/src/data/count.structure.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":40,"nodeType":"75","messageId":"76","endLine":2,"endColumn":44},{"ruleId":"73","severity":1,"message":"77","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":18},{"ruleId":"73","severity":1,"message":"80","line":18,"column":10,"nodeType":"75","messageId":"76","endLine":18,"endColumn":18},{"ruleId":"73","severity":1,"message":"81","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"82","line":15,"column":16,"nodeType":"75","messageId":"76","endLine":15,"endColumn":23},{"ruleId":"73","severity":1,"message":"83","line":16,"column":10,"nodeType":"75","messageId":"76","endLine":16,"endColumn":18},{"ruleId":"73","severity":1,"message":"84","line":17,"column":18,"nodeType":"75","messageId":"76","endLine":17,"endColumn":27},{"ruleId":"73","severity":1,"message":"85","line":19,"column":10,"nodeType":"75","messageId":"76","endLine":19,"endColumn":23},{"ruleId":"73","severity":1,"message":"86","line":20,"column":10,"nodeType":"75","messageId":"76","endLine":20,"endColumn":22},{"ruleId":"73","severity":1,"message":"87","line":21,"column":21,"nodeType":"75","messageId":"76","endLine":21,"endColumn":33},{"ruleId":"73","severity":1,"message":"88","line":32,"column":11,"nodeType":"75","messageId":"76","endLine":32,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":39,"column":51,"nodeType":"91","messageId":"92","endLine":39,"endColumn":53},{"ruleId":"73","severity":1,"message":"88","line":54,"column":11,"nodeType":"75","messageId":"76","endLine":54,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":61,"column":51,"nodeType":"91","messageId":"92","endLine":61,"endColumn":53},{"ruleId":"73","severity":1,"message":"93","line":108,"column":7,"nodeType":"75","messageId":"76","endLine":108,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":150,"column":56,"nodeType":"91","messageId":"96","endLine":150,"endColumn":57},{"ruleId":"69","replacedBy":"97"},{"ruleId":"71","replacedBy":"98"},{"ruleId":"73","severity":1,"message":"99","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Filter' is defined but never used.","'firebase' is defined but never used.","'DataGrid' is defined but never used.","'cpvCount' is assigned a value but never used.","'logo' is defined but never used.","'setForm' is assigned a value but never used.","'cpvstate' is assigned a value but never used.","'setSubKat' is assigned a value but never used.","'cpvNameSUBSUB' is assigned a value but never used.","'chooseSubkat' is assigned a value but never used.","'setSubSubkat' is assigned a value but never used.","'test2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'testData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["100"],["101"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]