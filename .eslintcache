[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx":"4","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx":"5","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx":"6","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx":"7","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx":"8","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx":"9","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx":"10","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx":"11","/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx":"12"},{"size":493,"mtime":1618473548663,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611836465200,"results":"15","hashOfConfig":"14"},{"size":1167,"mtime":1618326188925,"results":"16","hashOfConfig":"14"},{"size":725,"mtime":1618326188945,"results":"17","hashOfConfig":"14"},{"size":1547,"mtime":1618487868045,"results":"18","hashOfConfig":"14"},{"size":1406,"mtime":1618326188942,"results":"19","hashOfConfig":"14"},{"size":6562,"mtime":1618488457830,"results":"20","hashOfConfig":"14"},{"size":213077,"mtime":1615726655130,"results":"21","hashOfConfig":"14"},{"size":8212,"mtime":1618326188930,"results":"22","hashOfConfig":"14"},{"size":841,"mtime":1618326188927,"results":"23","hashOfConfig":"14"},{"size":405,"mtime":1615195299708,"results":"24","hashOfConfig":"14"},{"size":882,"mtime":1618326188928,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1um9ekq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["52","53"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx",["54"],"/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx",["55","56"],"/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx",["57"],"import React, { useEffect } from 'react'\nimport structure from '../data/withMainCategories'\nimport fylker from '../data/fylker'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkboxes from './Checkboxes'\nimport { Link } from 'react-router-dom'\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  checkedCategories,\n  setcheckedCategories,\n  removeChecked,\n  setRemoveChecked,\n  checked,\n  setChecked,\n}) {\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() !== [e.target.value]\n          ),\n        ])\n    )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ])\n  }\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes('00000')) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ]\n          }\n          return [...prevState.filter((i) => i !== removeChecked)]\n        } else {\n          return [...prevState, removeChecked]\n        }\n      })\n  }, [removeChecked])\n\n  const removeFilters = () => {\n    setcheckedCategories([])\n    setChecked([])\n  }\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    )\n  }\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      )\n  }\n\n  const goBack = () => {\n    window.history.back()\n  }\n\n  return (\n    <div>\n      <h3 className=''>Søk</h3>\n      <div>\n        <input\n          type='text'\n          className='searchbar'\n          id='detail-search'\n          placeholder='Søk'\n        />\n      </div>\n      <h3 className=''>Filter</h3>\n      {checkedCategories.length > 0 && (\n        <button className='cpv-button' onClick={removeFilters}>\n          Fjern alle filter\n        </button>\n      )}\n      <h4>Kategorier</h4>\n      <Link onClick={goBack}>\n        <FontAwesomeIcon icon={faArrowLeft} /> {category}\n      </Link>\n      {structure.map(\n        (it) =>\n          it.main === category &&\n          it.children.map(\n            (i) =>\n              i.code === details &&\n              i.children.map((item, i) => (\n                <div className='checkboxes'>\n                  {subcategory && subcategory === item.code ? (\n                    <div className='check-container'>\n                      <div>\n                        {Object.entries(checked).map((elem) => (\n                          <Checkboxes\n                            key={i}\n                            value={item.code}\n                            onChange={handleClick}\n                            className={'checkbox'}\n                            id={item.code}\n                            handleCheck={handleCheck}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n                        ))}\n                        <label className='check-label'>\n                          {item.name} ({item.countWithChildren})\n                        </label>\n                      </div>\n\n                      {checkedCategories.map(\n                        (check) =>\n                          Object.keys(check).includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div key={it} className='subcheckboxes'>\n                              <Checkboxes\n                                key={index}\n                                value={it.code}\n                                onChange={handleClick}\n                                className={'checkbox'}\n                                id={it.code}\n                                handleCheck={handleCheck}\n                                checked={\n                                  checked.includes(it.code) ? true : false\n                                }\n                              />\n                              <label className='check-label'>\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </div>\n                  ) : (\n                    <>\n                      <Checkboxes\n                        value={item.code}\n                        onChange={handleClick}\n                        className={'checkbox'}\n                        id={item.code}\n                        handleCheck={handleCheck}\n                        key={i}\n                        checked={checked.includes(item.code) ? true : false}\n                      />\n\n                      <label className='check-label'>\n                        {item.name} ({item.countWithChildren})\n                      </label>\n                      {checkedCategories.map(\n                        (check) =>\n                          Object.keys(check).includes(item.code) &&\n                          item.children.map((it, index) => (\n                            <div className='subcheckboxes'>\n                              <Checkboxes\n                                key={index}\n                                value={it.code}\n                                onChange={handleChange}\n                                className={'checkbox'}\n                                id={it.code}\n                                handleCheck={handleCheck}\n                                checked={\n                                  checked.includes(it.code) ? true : false\n                                }\n                              />\n                              <label className='check-label'>\n                                {it.name} ({it.countWithChildren})\n                              </label>\n                            </div>\n                          ))\n                      )}\n                    </>\n                  )}\n                </div>\n              ))\n          )\n      )}\n      <h4>Fylker</h4>\n      {fylker.map((item, i) => (\n        <div className='checkboxes'>\n          <input key={i} type='checkbox' value={item.navn}></input>\n          <label>{item.navn}</label>\n        </div>\n      ))}\n      <h4>Kunngjøringsdato</h4>\n      <p>Kalender</p>\n      <h4>Tilbudsfrist</h4>\n      <p>Kalender</p>\n      <h4>Publikasjonstype</h4>\n      <div className='checkboxes'>\n        <input type='checkbox' value='nasjonal'></input>\n        <label>Nasjonal</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className='checkboxes'>\n        <input type='checkbox' value='europeisk'></input>\n        <label>Europeisk</label>\n        {/* <span className='checkmark'></span> */}\n      </div>\n      <div className='checkboxes'>\n        {/* <span className='checkmark'></span> */}\n        <input type='checkbox' value='marketcunsulting'></input>\n        <label>Market Cunsulting</label>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":11,"column":6,"nodeType":"64","endLine":11,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":26,"column":6,"nodeType":"64","endLine":26,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":64,"column":50,"nodeType":"70","messageId":"71","endLine":64,"endColumn":52},{"ruleId":"62","severity":1,"message":"72","line":54,"column":6,"nodeType":"64","endLine":54,"endColumn":21,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'procurement'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'subcategory'. Either include it or remove the dependency array.",["77"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [procurement]",{"range":"85","text":"86"},"Update the dependencies array to be: [subcategory]",{"range":"87","text":"88"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"89","text":"90"},[359,361],"[procurement]",[923,925],"[subcategory]",[1481,1496],"[removeChecked, setChecked]"]