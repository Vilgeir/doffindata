[{"/Users/evy/Documents/GitHub/doffindata/src/index.js":"1","/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js":"2","/Users/evy/Documents/GitHub/doffindata/src/App.js":"3","/Users/evy/Documents/GitHub/doffindata/src/Filter.js":"4","/Users/evy/Documents/GitHub/doffindata/src/Home.js":"5"},{"size":501,"mtime":1613323008891,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1613323008891,"results":"8","hashOfConfig":"7"},{"size":964,"mtime":1614592584390,"results":"9","hashOfConfig":"7"},{"size":2681,"mtime":1614265988292,"results":"10","hashOfConfig":"7"},{"size":5414,"mtime":1614605270636,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5s57ed",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"/Users/evy/Documents/GitHub/doffindata/src/index.js",[],["27","28"],"/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/evy/Documents/GitHub/doffindata/src/App.js",["29","30","31"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Home from \"./Home\";\nimport Filter from \"./Filter\";\nimport \"./App.css\";\nimport { firebase } from \"@firebase/app\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport jsonData from \"./data/doffin-bach-default-rtdb-F02_2014-export.json\";\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\nrequire(\"firebase/firestore\");\n\nfunction App() {\n  const [cpvCount, setCpvCount] = useState({});\n\n  useEffect(() => {\n    let cpvNumbers = Object.values(jsonData).map((js) => js.cpvnumber);\n\n    let firstTwo = cpvNumbers.map((js) => js.split(\"\").slice(0, 2).join(\"\"));\n    let count = {};\n    firstTwo.forEach((i) => (count[i] = (count[i] || 0) + 1));\n    // console.log(Object.keys(count))\n    setCpvCount(count);\n  }, []);\n\n  return (\n    <div className=\"main-container\">\n      <Home cpvCount={cpvCount}></Home>\n      <Filter></Filter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/evy/Documents/GitHub/doffindata/src/Filter.js",["32","33","34","35","36","37","38","39","40","41","42"],"import { ListItemAvatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport cpvMain from \"./cpvmain.json\";\nimport count from \"./data/count.json\";\nimport data from \"./data/doffin-bach-default-rtdb-F02_2014-export.json\";\nimport CPVcodes from \"./data/cpv.json\";\n\nfunction Filter() {\n  const [input, setInput] = useState(\"not checked\");\n  const [check, setCheck] = useState(\n    cpvMain.map((item) => ({ cpv: item.cpv, checked: false }))\n  );\n  const [data, setData] = useState();\n  const [cpvstate, setCpv] = useState(null);\n  const [subkat, setSubKat] = useState();\n  const [cpvName, setCpvName] = useState([]);\n  const [chooseSubkat, setChooseSubkat] = useState();\n\n  useEffect(() => {\n    let arr = [];\n    if (subkat) {\n      let hello = Object.keys(subkat).filter((e) => e.length === 8);\n      console.log(hello);\n      let test2 = hello.map((item) => item.slice(0, 3));\n      // console.log(test2)\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k]);\n      }\n      console.log(arr);\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      );\n      setCpvName(newArr);\n    }\n  }, [subkat]);\n\n  useEffect(() => {\n    setSubKat(newCount[cpvstate]);\n  }, [cpvstate]);\n\n  let newCount = Object.values(count)[0];\n\n  const handleChange = (e) => {\n    let isChecked = check;\n    isChecked.forEach((item) => {\n      item.cpv === e.target.value && (item.checked = e.target.checked);\n    });\n    setCheck(isChecked);\n    setCpv(e.target.value);\n  };\n\n  const handleClick = (e) => setChooseSubkat(e.target.value);\n  console.log(check);\n  //   const myInput = <h1>{input}</h1>;\n\n  const handleChecked = () => {\n    return <h1>{input}</h1>;\n  };\n\n  const hello = <input type=\"checkbox\"></input>;\n\n  return (\n    <div>\n      <h3>Dette blir et fantastisk filter</h3>\n      <button>button</button>\n      <form>\n        {cpvMain.map((item) => (\n          <div>\n            <input\n              type=\"checkbox\"\n              value={item.cpv}\n              onClick={handleChange}\n            ></input>\n            <label>\n              {item.cpvmain} (\n              {newCount[item.cpv.substring(0, 2) + \"000000\"].count})\n            </label>\n            {console.log(cpvName)}\n            {cpvName\n              ? cpvName.map((e) => (\n                  <button className=\"button\" value={e[1]} onClick={handleClick}>\n                    {e[0]} (\n                    {newCount[e[1].substring(0, 2) + \"000000\"][e[1]].count})\n                  </button>\n                ))\n              : \"\"}\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n",["43","44"],"/Users/evy/Documents/GitHub/doffindata/src/Home.js",["45","46","47","48","49","50","51","52","53","54","55"],"import React, { useEffect, useState } from 'react'\nimport cpvMain from './cpvmain.json'\nimport CPVcodes from './data/cpv.json'\nimport logo from './logo.svg'\nimport count from './data/count.json'\nimport data from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nimport firebaseConf from './firebaseConfig.json'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\nfunction Home() {\n\n  const [form, setForm] = useState([])\n  const [cpvstate, setCpv] = useState(null)\n  const [subkat, setSubKat] = useState()\n  const [cpvName, setCpvName] = useState([])\n  const [cpvNameSUBSUB, setCpvNameSUBSUB] = useState([])\n  const [chooseSubkat, setChooseSubkat] = useState()\n  const [subSubKat, setSubSubkat] = useState()\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConf)\n  }\n\n  useEffect(() => {\n    let arr = []\n    if (subSubKat) {\n      let hello = Object.keys(subSubKat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 4))\n\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvNameSUBSUB(newArr)\n    }\n  }, [subSubKat])\n\n  useEffect(() => {\n    setSubSubkat(newCount[chooseSubkat])\n  }, [chooseSubkat])\n\n  useEffect(() => {\n    let arr = []\n    if (subkat) {\n      let hello = Object.keys(subkat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 3))\n      // console.log(test2)\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvName(newArr)\n    }\n  }, [subkat])\n\n\n\n  useEffect(() => {\n    setSubKat(newCount[cpvstate && cpvstate.number])\n  }, [cpvstate])\n\n  const handleClick = (e) => setChooseSubkat(e.target.value)\n\n  const handleChange = (e) => {\n\n    let numbersAndName = e.target.value.split(' , ')\n    setCpv({'number': numbersAndName[0], 'name': numbersAndName[1]})\n  }\n  console.log(cpvstate && cpvstate.number)\n\n  let db = firebase.firestore()\n\n  useEffect(() => {\n    setForm([])\n    db.collection('F02_2014')\n      .limit(10)\n      .where('object.cpvmain', '==', cpvstate && cpvstate.name)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          console.log(Object.values(doc.data())[0])\n          let newArr = Object.values(doc.data())[0]\n          setForm((prevState) => [...prevState, newArr])\n        })\n      })\n      console.log(form)\n  }, [cpvstate])\n\n  const gridStyle = { minHeight: 550 }\n  const columns = [\n    { field: 'bedrift', headerName: 'Bedrift', width: 200 },\n    { field: 'beskrivelse', headerName: 'Beskrivelse', width: 700 },\n    { field: 'cpv', headerName: 'CPV', width: 200 },\n    { field: 'cpvmain', headerName: 'CPV Kategori', width: 200 },\n    { field: 'dato', headerName: 'Dato', width: 120 },\n    { field: 'kategori', headerName: 'Kategori', width: 200 },\n    { field: 'subkategori', headerName: 'Sub kategori', width: 300 },\n  ]\n\n  let newCount = Object.values(count)[0]\n  let testData = Object.values(data)[0]\n\n  //  Cloudfunction i firebase\n  // 52, 102, 02, 12, 21,\n  let rows\n  form\n    ? (rows = form.map((item, i) => {\n        return {\n          id: i,\n          bedrift: item.bedrift,\n          beskrivelse: item.beskrivelse,\n          cpvmain: item.cpvmain,\n          cpv: item.cpv,\n          dato: item.dato,\n          kategori: item.kategorier,\n          subkategori: item.subkategori,\n        }\n      }))\n    : (rows = [\n        {\n          id: 520982058,\n          bedrift: 'Loading...',\n          beskrivelse: 'Loading...',\n          cpvmain: 'Loading...',\n          cpv: 'Loading...',\n          dato: 'Loading...',\n          kategori: 'Loading...',\n          subkategori: 'Loading...',\n        },\n      ])\n      console.log(cpvName)\n\n  return (\n    <div className='App'>\n      <h1>Form: F02_2014</h1>\n      <label for='cpvmain'>Velg en kategori:</label>\n      <select name='cpvmain' id='cpvmain' onChange={handleChange}>\n        <option value='' disabled selected>\n          Velg hovedkategori\n        </option>\n\n        {cpvMain.map((item) => (\n          <option value={item.cpv.substring(0, 2) + '000000' +' , '+ item.cpvmain}>\n          {/* <option value={item}> */}\n            {item.cpvmain} (\n            {newCount[item.cpv.substring(0, 2) + '000000'].count})\n            {item.cpv.substring(0, 2) + '000000'}\n          </option>\n        ))}\n      </select>\n      <div className='buttons'>\n        {cpvName\n          ? cpvName.map((e) => (\n              <button className='button' value={e[1]} onClick={handleClick}>\n                {e[0]} ({newCount[e[1].substring(0, 2) + '000000'][e[1]].count})\n              </button>\n            ))\n          : ''}\n      </div>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          idProperty='id'\n          rowHeight={100}\n          columns={columns}\n          rows={rows}\n          multiline={true}\n          style={gridStyle}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":18},{"ruleId":"60","severity":1,"message":"65","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":18},{"ruleId":"60","severity":1,"message":"66","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":24},{"ruleId":"60","severity":1,"message":"67","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":12},{"ruleId":"60","severity":1,"message":"68","line":9,"column":17,"nodeType":"62","messageId":"63","endLine":9,"endColumn":25},{"ruleId":"60","severity":1,"message":"69","line":13,"column":10,"nodeType":"62","messageId":"63","endLine":13,"endColumn":14},{"ruleId":"60","severity":1,"message":"70","line":13,"column":16,"nodeType":"62","messageId":"63","endLine":13,"endColumn":23},{"ruleId":"60","severity":1,"message":"71","line":17,"column":10,"nodeType":"62","messageId":"63","endLine":17,"endColumn":22},{"ruleId":"60","severity":1,"message":"72","line":24,"column":11,"nodeType":"62","messageId":"63","endLine":24,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":32,"column":51,"nodeType":"75","messageId":"76","endLine":32,"endColumn":53},{"ruleId":"77","severity":1,"message":"78","line":40,"column":6,"nodeType":"79","endLine":40,"endColumn":16,"suggestions":"80"},{"ruleId":"60","severity":1,"message":"81","line":57,"column":9,"nodeType":"62","messageId":"63","endLine":57,"endColumn":22},{"ruleId":"60","severity":1,"message":"82","line":61,"column":9,"nodeType":"62","messageId":"63","endLine":61,"endColumn":14},{"ruleId":"56","replacedBy":"83"},{"ruleId":"58","replacedBy":"84"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":12},{"ruleId":"60","severity":1,"message":"85","line":21,"column":10,"nodeType":"62","messageId":"63","endLine":21,"endColumn":23},{"ruleId":"60","severity":1,"message":"72","line":34,"column":11,"nodeType":"62","messageId":"63","endLine":34,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":42,"column":51,"nodeType":"75","messageId":"76","endLine":42,"endColumn":53},{"ruleId":"77","severity":1,"message":"78","line":50,"column":6,"nodeType":"79","endLine":50,"endColumn":20,"suggestions":"86"},{"ruleId":"60","severity":1,"message":"72","line":57,"column":11,"nodeType":"62","messageId":"63","endLine":57,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":65,"column":51,"nodeType":"75","messageId":"76","endLine":65,"endColumn":53},{"ruleId":"77","severity":1,"message":"78","line":75,"column":6,"nodeType":"79","endLine":75,"endColumn":16,"suggestions":"87"},{"ruleId":"77","severity":1,"message":"88","line":102,"column":6,"nodeType":"79","endLine":102,"endColumn":16,"suggestions":"89"},{"ruleId":"60","severity":1,"message":"90","line":116,"column":7,"nodeType":"62","messageId":"63","endLine":116,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":158,"column":62,"nodeType":"75","messageId":"93","endLine":158,"endColumn":63},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'DataGrid' is defined but never used.","'ListItemAvatar' is defined but never used.","'data' is defined but never used.","'setInput' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'chooseSubkat' is assigned a value but never used.","'test2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newCount'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'handleChecked' is assigned a value but never used.","'hello' is assigned a value but never used.",["94"],["95"],"'cpvNameSUBSUB' is assigned a value but never used.",["97"],["98"],"React Hook useEffect has missing dependencies: 'db' and 'form'. Either include them or remove the dependency array.",["99"],"'testData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"100","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [cpvstate, newCount]",{"range":"107","text":"108"},"Update the dependencies array to be: [chooseSubkat, newCount]",{"range":"109","text":"110"},{"range":"111","text":"108"},"Update the dependencies array to be: [cpvstate, db, form]",{"range":"112","text":"113"},[1277,1287],"[cpvstate, newCount]",[1496,1510],"[chooseSubkat, newCount]",[2101,2111],[2856,2866],"[cpvstate, db, form]"]