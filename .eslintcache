[{"/Users/vilgeir/Desktop/doffindata/src/index.js":"1","/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js":"2","/Users/vilgeir/Desktop/doffindata/src/App.js":"3","/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx":"4","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx":"5","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx":"6","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx":"7","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx":"8","/Users/vilgeir/Desktop/doffindata/src/components/Footer.jsx":"9","/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js":"10","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx":"11","/Users/vilgeir/Desktop/doffindata/src/components/SavedSearch.jsx":"12","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx":"13","/Users/vilgeir/Desktop/doffindata/src/firebaseConfig.js":"14","/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx":"15","/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx":"16","/Users/vilgeir/Desktop/doffindata/src/components/SaveSearch.jsx":"17","/Users/vilgeir/Desktop/doffindata/src/components/Search.jsx":"18","/Users/vilgeir/Desktop/doffindata/src/components/SearchData.jsx":"19","/Users/vilgeir/Desktop/doffindata/src/components/AlgoliaSearch.jsx":"20","/Users/vilgeir/Desktop/doffindata/src/context/StateProvider.js":"21","/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx":"22","/Users/vilgeir/Desktop/doffindata/src/components/SavedModal.jsx":"23"},{"size":596,"mtime":1619511394964,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611836465200,"results":"26","hashOfConfig":"25"},{"size":1270,"mtime":1619511099458,"results":"27","hashOfConfig":"25"},{"size":1725,"mtime":1619511099472,"results":"28","hashOfConfig":"25"},{"size":4241,"mtime":1619511200260,"results":"29","hashOfConfig":"25"},{"size":3044,"mtime":1619511099473,"results":"30","hashOfConfig":"25"},{"size":8051,"mtime":1619511313719,"results":"31","hashOfConfig":"25"},{"size":213077,"mtime":1615726655130,"results":"32","hashOfConfig":"25"},{"size":400,"mtime":1619511099465,"results":"33","hashOfConfig":"25"},{"size":1125,"mtime":1619511099491,"results":"34","hashOfConfig":"25"},{"size":967,"mtime":1619511099461,"results":"35","hashOfConfig":"25"},{"size":2585,"mtime":1619511368886,"results":"36","hashOfConfig":"25"},{"size":8461,"mtime":1619511099464,"results":"37","hashOfConfig":"25"},{"size":619,"mtime":1618491819815,"results":"38","hashOfConfig":"25"},{"size":405,"mtime":1615195299708,"results":"39","hashOfConfig":"25"},{"size":864,"mtime":1619078523282,"results":"40","hashOfConfig":"25"},{"size":1574,"mtime":1619079730171,"results":"41","hashOfConfig":"25"},{"size":398,"mtime":1619511099467,"results":"42","hashOfConfig":"25"},{"size":337,"mtime":1619511370676,"results":"43","hashOfConfig":"25"},{"size":1726,"mtime":1619511828173,"results":"44","hashOfConfig":"25"},{"size":454,"mtime":1619511099468,"results":"45","hashOfConfig":"25"},{"size":480,"mtime":1619511099465,"results":"46","hashOfConfig":"25"},{"size":1261,"mtime":1619511099466,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1um9ekq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"/Users/vilgeir/Desktop/doffindata/src/index.js",[],["105","106"],"/Users/vilgeir/Desktop/doffindata/src/reportWebVitals.js",[],"/Users/vilgeir/Desktop/doffindata/src/App.js",[],"/Users/vilgeir/Desktop/doffindata/src/pages/Categories.jsx",["107","108","109"],"import React, { useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport structure from '../data/withMainCategories'\nimport { useParams } from 'react-router-dom'\nimport Footer from '../components/Footer'\nimport { StateContext } from '../context/StateProvider'\n\nfunction Categories() {\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext)\n  const { category } = useParams()\n\n  useEffect(() => {\n    setcheckedCategories([])\n  }, [])\n\n  return (\n    <div className='home-container'>\n      <div className='head'>\n        <div>\n          <input\n            className=\"searchbar\"\n            placeholder=\"SÃ¸k etter anbud eller CPV-koder\"\n            src=\"../../public/iconer/search.png\"\n          />\n        </div>\n        <h3>{category}</h3>\n      </div>\n      <div className='categories'>\n        {structure.map(\n          (i) =>\n            i.main === category &&\n            i.children.map((item, idx) => (\n              <div className='category-card'>\n                <Link to={'/' + category + '/' + item.code} key={idx}>\n                  <p className=\"sub-category\">\n                    {item.name} ({item.countWithChildren})\n                  </p>\n                </Link>\n                {item.children.map((items, index) => (\n                  <Link\n                    to={'/' + category + '/' + item.code + '+' + items.code}\n                    key={index}\n                  >\n                    <p>\n                      {items.name} ({items.countWithChildren})\n                    </p>\n                  </Link>\n                ))}\n              </div>\n            ))\n        )}\n      </div>\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default Categories\n","/Users/vilgeir/Desktop/doffindata/src/pages/Home.jsx",["110","111","112","113","114","115","116","117","118","119"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport \"../index.css\";\nimport SavedSearch from \"../components/SavedSearch\";\nimport Footer from \"../components/Footer\";\nimport Search from \"../components/Search\";\nimport SearchData from \"../components/SearchData\";\nimport AlgoliaSearch from \"../components/AlgoliaSearch\";\nimport { faArrowRight, faPlug } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTools } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserMd } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLaptopCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCity } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAtom } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboardList } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShippingFast } from \"@fortawesome/free-solid-svg-icons\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getData } from \"../helpers/handleData\";\n\nfunction Home(props) {\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState();\n  const [searchDataDefault, setSearchDataDefault] = useState(\n    structure.map((i) => i.main)\n  );\n\n  const [serverData, setServerData] = useState([]);\n\n  //children.map((it, index) => it.code)  .flat()\n\n  // console.log(searchDataDefault);\n\n  let arrrray = [];\n  let mainCpv = \"\";\n\n  useEffect(() => {\n    getData(\"F02_2014\", \"cpv\", mainCpv, setServerData);\n  }, []);\n\n  Object.entries(serverData).map((i) => arrrray.push(i));\n\n  console.log(serverData);\n\n  const updateInput = (input) => {\n    const filtered = searchDataDefault.filter((main) => {\n      if (isNaN()) {\n        return main.toLowerCase().includes(input.toLowerCase());\n      }\n      return main;\n    });\n    if (input === \"\") return setInput(input), setSearchData([]);\n    return setInput(input), setSearchData(filtered);\n  };\n\n  //console.log(searchData);\n\n  const homeIcons = (icon) => {\n    switch (icon) {\n      case \"IT\":\n        return faLaptopCode;\n      case \"Bygg og anlegg\":\n        return faTools;\n      case \"Helse\":\n        return faUserMd;\n      case \"Varer og utstyr\":\n        return faShoppingCart;\n      case \"Tjenester\":\n        return faBriefcase;\n      case \"Elektronisk utstyr\":\n        return faPlug;\n      case \"Transport\":\n        return faShippingFast;\n      case \"Kontor\":\n        return faClipboardList;\n      case \"Olje og kjemikalier\":\n        return faAtom;\n      case \"Offentlige ytelser\":\n        return faCity;\n      default:\n        return faAtom;\n    }\n  };\n\n  return (\n    <div className=\"errthing\">\n      <div className=\"home-container\">\n        <div className=\"head\">\n          <div className=\"aSearch\">\n            <AlgoliaSearch />\n          </div>\n\n          {/* <Search input={input} onChange={updateInput} />\n          <SearchData searchData={searchData} /> */}\n          <h3 className=\"headline\">Alle kategorier</h3>\n        </div>\n      </div>\n      <div>\n        {/* {searchData.map((result) => {\n          if (result) {\n            return <h3>{result}</h3>;\n          } \n          return null;\n        })} */}\n      </div>\n      <div class=\"content-container\">\n        <div className=\"box-container\">\n          {structure.map((i, index) => (\n            <Link\n              className=\"main-boxes\"\n              to={i.main}\n              key={index}\n              id={\"main-boxes-\" + index}\n            >\n              <div className=\"homeicon-container\">\n                <FontAwesomeIcon id=\"homeicon-icon\" icon={homeIcons(i.main)} />\n              </div>\n              <div className=\"main-box-text\">\n                <p className=\"main-boxes-title\">{i.main}</p>\n                <p className=\"main-boxes-cpv\">CPV {i.children[0].code}</p>\n              </div>\n              <div className=\"main-boxes-arrow\">\n                <FontAwesomeIcon icon={faArrowRight} color=\"#4DBFAC\" />\n              </div>\n            </Link>\n          ))}\n        </div>\n        <SavedSearch />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedInfo.jsx",["120"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProcurement } from '../helpers/handleData'\n\nfunction DetailedInfo({ i }) {\n  const [procurementData, setProcurement] = useState([])\n  const { procurement } = useParams()\n\n  useEffect(() => {\n    getProcurement('anbud', procurement, setProcurement)\n    // setProcurement(data.filter((i) => i.tittel === procurement))\n  }, [])\n\n  return (\n    <div className='info-container'>\n      <div className='info-left-bar'>\n        <p>{procurementData.oppdragsgiver}</p>\n        <h1>{procurementData.tittel}</h1>\n        <div className=\"info-card\">\n          <p><b>Publiseringsdato:</b> {procurementData.kunngjoringsdato}</p>\n          <p><b>Tilbudsfrist:</b> {procurementData.tilbudsfrist}</p>\n          <p><b>Tildelingskriterie:</b> {procurementData.tildelingskriterier}</p>\n\n          <p>{procurementData.beskrivelse}</p>\n        </div>\n        <div className=\"info-card\">\n          <h6>Dokumenter</h6>\n\n          {procurementData.documents\n            ? procurementData.documents.map((i, index) => (\n                <a key={index} href={'https://www.mercell.com' + i.url}>\n                  {i.name}\n                </a>\n              ))\n            : procurementData.url_dokumentasjon}\n        </div>\n        <div className=\"info-card\">\n          <h6>Behov for sortiment</h6>\n          {procurementData.tilleggsCPV &&\n            procurementData.tilleggsCPV.map((i) => (\n              <p>\n                {Object.keys(i)} {Object.values(i)}{' '}\n              </p>\n            ))}\n        </div>\n      </div>\n      <div className=\"info-right-bar\">\n        <button className=\"button\">Meld interesse</button>\n        <div className=\"info-right-bar-article\">\n          <div className=\"headline-div\">\n            <h4 className=\"headline\">Kontakt</h4>\n            </div>\n          <p><b>SpÃ¸rsmÃ¥lsfrist:</b>{procurementData.sporsmalsfrist}</p>\n          <p><b>Kontaktperson:</b>{procurementData.kontaktperson}</p>\n          <p><b>Telefon:</b>{procurementData.telefon}</p>\n          <p><b>E-post:</b> {procurementData.epost}</p>\n        </div>\n        <div className=\"info-right-bar-article\">\n          <div className=\"headline-div\">\n            <h4 className=\"headline\">InnkjÃ¸per</h4>\n          </div>\n          <p><b>Oppdragsgiver:</b> {procurementData.oppdragsgiver}</p>\n          <p><b>Org nr.:</b>{procurementData.orgnr}</p>\n          <p>\n              <b>Adresse:</b> {procurementData.adresse} {procurementData.postkode}\n            {', '} {procurementData.sted} {procurementData.land}\n          </p>\n        </div>\n        <div className=\"info-right-bar-article\">\n          <div className=\"headline-div\">\n            <h4 className=\"headline\">Nettsted</h4>\n          </div>\n          <Link to={procurementData.url_oppdragsgiver}>Oppdragsgiver</Link> <br/>\n          <Link to={procurementData.url_kjoperprofil}>KjÃ¸perprofil</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DetailedInfo\n","/Users/vilgeir/Desktop/doffindata/src/pages/DetailedList.jsx",["121","122","123","124","125","126","127"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Filter from \"../components/Filter\";\nimport SaveSearch from \"../components/SaveSearch\";\nimport Card from \"../components/Card\";\nimport { useParams } from \"react-router-dom\";\nimport structure from \"../data/withMainCategories\";\nimport data from \"../data/doffin-form2.json\";\nimport { Link } from \"react-router-dom\";\nimport { getData, getProcurements } from \"../helpers/handleData\";\nimport { StateContext } from \"../context/StateProvider\";\n\nfunction DetailedList() {\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext);\n  const [removeChecked, setRemoveChecked] = useState([]);\n  const [sort, setSort] = useState();\n  const [checked, setChecked] = useState([]);\n  const [saveSearch, setSaveSearch] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  const [documents, setDocuments] = useState([]);\n\n  const { category, details } = useParams();\n\n  useEffect(() => {\n    let arr = [];\n    Object.values(checkedCategories)\n      .map((i) => arr.push(Object.keys(i)))\n      .flat();\n    Object.values(checkedCategories)\n      .map((i) => Object.values(i).map((item) => arr.push(item)))\n      .flat();\n    checkedCategories && setChecked(arr.flat());\n  }, [checkedCategories]);\n\n  useEffect(() => {\n    let obj = {\n      checkedCategories,\n      category: category,\n      cpv: categorycpv,\n    };\n\n    window.localStorage.setItem(\"lastSearch\", JSON.stringify(obj));\n  }, [checkedCategories]);\n\n  let newdetails = details.split(\"+\");\n  let categorycpv = newdetails[0];\n  let subcategory = newdetails[1];\n\n  useEffect(() => {\n    subcategory && setcheckedCategories([{ [subcategory]: [] }]);\n    subcategory && setChecked([subcategory]);\n  }, []);\n\n  useEffect(() => {\n    // getData('anbud', 'cpvnumbermain', categorycpv, setDocuments)\n    setDocuments([]);\n    let category = [];\n    let subcat = [];\n    checked.filter((i) =>\n      i.substring(3, 8) === \"00000\"\n        ? category.push(i)\n        : i.substring(4, 8) === \"0000\" && subcat.push(i)\n    );\n    // console.log(category)\n    // console.log(subcat)\n\n    subcat.map((i) =>\n      category.map(\n        (item, index) =>\n          item.substring(0, 3).includes(i.substring(0, 3)) &&\n          category.splice(index, 1)\n      )\n    );\n    if (category.length > 0 || subcat.length > 0) {\n      category.map((i) =>\n        getProcurements(\"anbud\", \"cpvnumbersub\", i, setDocuments, documents)\n      );\n\n      subcat.map((i) =>\n        getProcurements(\"anbud\", \"cpvnumbersubsub\", i, setDocuments, documents)\n      );\n      // } else if (subcat.length > 0) {\n      //   category.map((i) =>\n      //     getProcurements('anbud', 'cpvnumbersub', i, setDocuments)\n      //   )\n\n      //   subcat.map((i) =>\n      //     getProcurements('anbud', 'cpvnumbersubsub', i, setDocuments)\n      //   )\n    } else {\n      getProcurements(\n        \"anbud\",\n        \"cpvnumbermain\",\n        categorycpv,\n        setDocuments,\n        documents\n      );\n    }\n  }, [checked]);\n\n  let newArray = [];\n\n  Object.entries(documents).map((i) => newArray.push(i[1]));\n\n  const sorting = (a, b) => {\n    if (sort === \"asc\") {\n      return a.tittel > b.tittel ? 1 : -1;\n    } else if (sort === \"desc\") {\n      return a.tittel < b.tittel ? 1 : -1;\n    } else if (sort === \"date\") {\n      return a.kunngjoringsdato < b.kunngjoringsdato ? 1 : -1;\n    }\n    return 0;\n  };\n\n  const sortedArray = newArray.sort(sorting);\n  const onChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  // console.log(newArray.map((i) => i));\n  // console.log(\"sorted: \" + sortedArray);\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    let value = e.target.value\n      .split(\"\")\n      .filter((item) => item === \"0\")\n      .join(\"\");\n\n    if (value.length === 5) {\n      checkedCategories.map(\n        (i) =>\n          Object.keys(i).join() === e.target.value &&\n          setcheckedCategories((prevstate) => [\n            ...prevstate.filter(\n              (item) => Object.keys(item).join() != [e.target.value]\n            ),\n          ])\n      );\n    } else {\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      );\n    }\n\n    setRemoveChecked(e.target.value);\n  };\n\n  return (\n    <div className=\"detail-container\">\n      <div className=\"search\">\n        <Filter\n          openModal={openModal}\n          setOpenModal={setOpenModal}\n          details={categorycpv}\n          subcategory={subcategory}\n          category={category}\n          setcheckedCategories={setcheckedCategories}\n          checkedCategories={checkedCategories}\n          removeChecked={removeChecked}\n          setRemoveChecked={setRemoveChecked}\n          checked={checked}\n          setChecked={setChecked}\n          saveSearch={saveSearch}\n          setSaveSearch={setSaveSearch}\n        />\n      </div>\n      <div className=\"list-container\">\n        {subcategory\n          ? structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map((it) =>\n                  it.children.map(\n                    (i) =>\n                      i.code === subcategory && (\n                        <h1 key={i}>\n                          {i.name} (CPV {i.code})\n                        </h1>\n                      )\n                  )\n                )\n            )\n          : structure.map(\n              (item) =>\n                item.main === category &&\n                item.children.map(\n                  (i) =>\n                    i.code === categorycpv && (\n                      <h1 key={i}>\n                        {i.name} (CPV {i.code})\n                      </h1>\n                    )\n                )\n            )}\n        <div className=\"select-box-title\">\n          <p className=\"sorting\">Sorter etter: </p>\n          <select className=\"select-box\" onChange={onChange}>\n            <option value=\"asc\">ASC</option>\n            <option value=\"desc\">DESC</option>\n            <option value=\"date\">Publisert</option>\n          </select>\n        </div>\n\n        {checkedCategories.length > 0\n          ? sortedArray.map((i) =>\n              checkedCategories.map((checked) =>\n                Object.values(checked)[0].length > 0\n                  ? Object.values(checked)[0].map(\n                      (check) =>\n                        i.cpvnumber\n                          .substring(0, 4)\n                          .includes(check.substring(0, 4)) && <Card i={i} />\n                    )\n                  : i.cpvnumber\n                      .substring(0, 3)\n                      .includes(Object.keys(checked)[0].substring(0, 3)) && (\n                      <Link\n                        style={{ textDecoration: \"none\", color: \"black\" }}\n                        to={\"/\" + category + \"/\" + categorycpv + \"/\" + i.id}\n                        i={i}\n                      >\n                        <Card i={i} />\n                      </Link>\n                    )\n              )\n            )\n          : sortedArray.map(\n              (i) =>\n                i.cpvnumber.substring(0, 2) === categorycpv.substring(0, 2) && (\n                  <Link\n                    style={{ textDecoration: \"none\", color: \"black\" }}\n                    to={\"/\" + category + \"/\" + categorycpv + \"/\" + i.id}\n                    i={i}\n                  >\n                    <Card i={i} />\n                  </Link>\n                )\n            )}\n      </div>\n      {saveSearch && (\n        <SaveSearch\n          setSaveSearch={setSaveSearch}\n          checkedCategories={checkedCategories}\n          category={category}\n          categorycpv={categorycpv}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DetailedList;\n","/Users/vilgeir/Desktop/doffindata/src/data/withMainCategories.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Footer.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/helpers/handleData.js",["128"],"import { db } from \"../firebaseConfig\";\n\nexport const getData = async (collection, where, value, state) => {\n  await db\n    .collection(collection)\n    .where(where, \">=\", value)\n    .limit(10)\n    .get()\n    .then((querySnapshot) => {\n      const arr = [];\n      querySnapshot.forEach((doc) => {\n        arr.push({ ...doc.data() });\n      });\n\n      state(arr);\n    });\n};\n\nexport const getProcurements = async (\n  collection,\n  where,\n  value,\n  setState,\n  state\n) => {\n  await db\n    .collection(collection)\n    .where(where, '==', value)\n    .limit(10)\n    .get()\n    .then((querySnapshot) => {\n      const arr = []\n      querySnapshot.forEach((doc) => {\n        state.push({ ...doc.data() })\n      })\n\n      setState(state)\n    })\n}\n\nexport const getProcurement = async (collection, document, state) => {\n  try {\n    const doc = await db.collection(collection).doc(document).get();\n    if (doc.exists) {\n      const arr = [];\n      arr.push({ ...doc.data() });\n      state(arr[0]);\n    } else {\n      console.log(\"No such document!\");\n    }\n  } catch (error) {\n    console.log(\"Error getting document:\", error);\n  }\n};\n","/Users/vilgeir/Desktop/doffindata/src/components/Card.jsx",["129"],"import React from 'react'\n\nfunction Card({ i }) {\n  const capitalize = (str) => {\n    let lower = str.toLowerCase()\n    return str.charAt(0).toUpperCase() + lower.slice(1)\n  }\n\n  const reverse = (date) => {\n    return date.split('-').reverse().join('.')\n  }\n\n  return (\n    <div className='card'>\n      <h4 className='publishedby'>{capitalize(i.oppdragsgiver)}</h4>\n      <h5>{i.tittel}</h5>\n      <p>{i.beskrivelse}</p>\n      <div className='dates'>\n        {/*\n        <div>\n          <h4>KunngjÃ¸ringsdato:</h4>\n          <p>{reverse(i.kunngjoringsdato)}</p>\n        </div>\n        */}\n\n        <div>\n          <h4>SÃ¸knadsfrist</h4>\n          <p>{i.tilbudsfrist ? i.tilbudsfrist : 'Ikke annonsert'}</p>\n        </div>\n\n        <div>\n          <h4>Tildelingskriterier</h4>\n          <p>{i.tildelingskriterier}</p>\n        </div>\n\n        <div className='town'>\n          <p>{capitalize(i.sted)}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Card\n","/Users/vilgeir/Desktop/doffindata/src/components/SavedSearch.jsx",["130","131","132","133","134"],"import React, { useContext, useEffect, useState } from \"react\";\nimport structure from \"../data/withMainCategories\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport { ScrollArea } from \"@material-ui/data-grid\";\nimport { StateContext } from \"../context/StateProvider\";\n\nfunction SavedSearch() {\n  const [last, setLast] = useState([]);\n  const [openLast, setOpenLast] = useState(false);\n  const [saved, setSaved] = useState([]);\n  const [openSaved, setOpenSaved] = useState(false);\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext);\n\n  let category = structure.map((i) => i.main);\n  let arr = Object.keys(localStorage).filter(\n    (elem) => elem !== \"ally-supports-cache\" && elem !== \"lastSearch\"\n  );\n\n  // useEffect(() => {\n  //   arr.map((elem) =>\n  //     setSaved((prevstate) => [\n  //       ...prevstate,\n  //       { [elem]: JSON.parse(localStorage.getItem(elem)) },\n  //     ])\n  //   );\n  // }, []);\n\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem(\"lastSearch\"));\n    let arr = [];\n    data &&\n      (arr = [\n        data.category,\n        data.cpv,\n        Object.values(data.checkedCategories).map((i) =>\n          Object.entries(i).flat().join(\" - \")\n        ),\n      ]);\n\n    setLast(arr);\n  }, []);\n\n  const handleClick = (i) => {\n    Object.values(i).map(\n      (item) =>\n        item.checkedCategories && setcheckedCategories(item.checkedCategories)\n    );\n  };\n\n  return (\n    <div className=\"home-buttons\">\n      <button\n        className=\"home-button\"\n        onClick={() => setOpenLast((prev) => !prev)}\n      >\n        Siste sÃ¸k <FontAwesomeIcon icon={faChevronDown} />\n      </button>\n\n      {openLast && (\n        <Link\n          to={\"/\" + Object.values(last)[0] + \"/\" + Object.values(last)[1]}\n          onClick={() => handleClick(last)}\n        >\n          {Object.values(last).flat().join(\" - \")}\n        </Link>\n      )}\n      <button\n        className=\"home-button\"\n        onClick={() => setOpenSaved((prev) => !prev)}\n      >\n        Lagrede sÃ¸k <FontAwesomeIcon icon={faChevronDown} />\n      </button>\n\n      {openSaved &&\n        saved.map((i, index) => (\n          <Link\n            to={\n              \"/\" + Object.values(i)[0].category + \"/\" + Object.values(i)[0].cpv\n            }\n            key={index}\n            onClick={() => handleClick(i)}\n          >\n            {Object.keys(i)[0]}\n          </Link>\n        ))}\n    </div>\n  );\n}\n\nexport default SavedSearch;\n","/Users/vilgeir/Desktop/doffindata/src/components/Filter.jsx",["135","136","137"],"import React, { useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\nimport fylker from '../data/fylker'\nimport { faArrowLeft, faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkboxes from './Checkboxes'\nimport { Link } from 'react-router-dom'\nimport SavedModal from '../components/SavedModal'\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  checkedCategories,\n  setcheckedCategories,\n  removeChecked,\n  checked,\n  setChecked,\n  setSaveSearch,\n  setOpenModal,\n  openModal,\n}) {\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() != [e.target.value]\n          ),\n        ])\n    )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ])\n    handleCheck(e)\n  }\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes('00000')) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ]\n          }\n          return [...prevState.filter((i) => i !== removeChecked)]\n        } else {\n          return [...prevState, removeChecked]\n        }\n      })\n  }, [removeChecked])\n\n  const removeFilters = () => {\n    setcheckedCategories([])\n    setChecked([])\n  }\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    )\n  }\n\n  // console.log(JSON.parse(window.localStorage.map((i) => i)))\n  // console.log(window.localStorage.key(i))\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      )\n    handleCheck(e)\n  }\n\n  const goBack = () => {\n    window.history.back()\n  }\n\n  // localStorage.clear()\n  return (\n    <div>\n      <div className='save-search'>\n        <button className='button' onClick={() => setSaveSearch(true)}>\n          Lagre sÃ¸k\n        </button>\n        <div onClick={() => setOpenModal((prev) => !prev)}>\n          <p>\n            Du har{' '}\n            <b>\n              {localStorage.length === 0\n                ? localStorage.length\n                : localStorage.length - 1}{' '}\n              {localStorage.length === 2 ? 'lagret' : 'lagrede'} sÃ¸k\n            </b>{' '}\n            <FontAwesomeIcon icon={faChevronDown} />\n          </p>{' '}\n        </div>\n      </div>\n      {openModal && <SavedModal />}\n      <div>\n        <input\n          type='text'\n          className='searchbar'\n          id='detail-search'\n          placeholder='SÃ¸k i anbud'\n        />\n      </div>\n      {checkedCategories.length > 0 && (\n        <button className='cpv-button' onClick={removeFilters}>\n          Nullstill filter\n        </button>\n      )}\n\n      <div className='filter-header'>\n        <h4>Kategorier</h4>\n      </div>\n      <Link className='go-back' onClick={goBack}>\n        <FontAwesomeIcon icon={faArrowLeft} /> {category}\n      </Link>\n      <div className='check-container'>\n        {structure.map(\n          (it) =>\n            it.main === category &&\n            it.children.map(\n              (i) =>\n                i.code === details &&\n                i.children.map((item, i) => (\n                  <div className='checkboxes'>\n                    {subcategory && subcategory === item.code ? (\n                      <div>\n                        <div>\n                          <Checkboxes\n                            key={i}\n                            value={item.code}\n                            onChange={handleClick}\n                            className={'checkbox'}\n                            // handleCheck={handleCheck}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n\n                          <label className='check-label'>\n                            {item.name} ({item.countWithChildren})\n                          </label>\n                        </div>\n\n                        {checkedCategories.map(\n                          (check) =>\n                            Object.keys(check).includes(item.code) &&\n                            item.children.map((it, index) => (\n                              <div key={it} className='subcheckboxes'>\n                                <Checkboxes\n                                  key={index}\n                                  value={it.code}\n                                  onChange={handleChange}\n                                  className={'checkbox'}\n                                  // handleCheck={handleCheck}\n                                  checked={\n                                    checked.includes(it.code) ? true : false\n                                  }\n                                />\n                                <label className='check-label'>\n                                  {it.name} ({it.countWithChildren})\n                                </label>\n                              </div>\n                            ))\n                        )}\n                      </div>\n                    ) : (\n                      <>\n                        <Checkboxes\n                          value={item.code}\n                          onChange={handleClick}\n                          className={'checkbox'}\n                          // handleCheck={handleCheck}\n                          key={i}\n                          checked={checked.includes(item.code) ? true : false}\n                        />\n                        <label className='check-label'>\n                          {item.name} ({item.countWithChildren})\n                        </label>\n                        {checkedCategories.map(\n                          (check) =>\n                            Object.keys(check).includes(item.code) &&\n                            item.children.map((it, index) => (\n                              <div className='subcheckboxes'>\n                                <Checkboxes\n                                  key={index}\n                                  value={it.code}\n                                  onChange={handleChange}\n                                  className={'checkbox'}\n                                  // handleCheck={handleCheck}\n                                  checked={\n                                    checked.includes(it.code) ? true : false\n                                  }\n                                />\n                                <label className='check-label'>\n                                  {it.name} ({it.countWithChildren})\n                                </label>\n                              </div>\n                            ))\n                        )}\n                      </>\n                    )}\n                  </div>\n                ))\n            )\n        )}\n      </div>\n\n      {/*<div className='black-line' />*/}\n\n      <div className='filter-header'>\n        <h4>Fylker</h4>\n      </div>\n      {fylker.map((item, i) => (\n        <div className='checkboxes'>\n          <input key={i} type='checkbox' value={item.navn}></input>\n          <label>{item.navn}</label>\n        </div>\n      ))}\n      {/*<div className='black-line' />*/}\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/vilgeir/Desktop/doffindata/src/firebaseConfig.js",[],"/Users/vilgeir/Desktop/doffindata/src/data/fylker.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/Checkboxes.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/SaveSearch.jsx",["138","139"],"import React, { useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\n\nfunction SaveSearch({\n  setSaveSearch,\n  checkedCategories,\n  category,\n  categorycpv,\n}) {\n  const [nameSearch, setNameSearch] = useState()\n  const handleChange = (e) => {\n    setNameSearch(e.target.value)\n  }\n\n  let obj = {\n    checkedCategories,\n    category: category,\n    cpv: categorycpv,\n  }\n  // console.log(obj)\n  // console.log(category + categorycpv)\n  const handleClick = () => {\n    window.localStorage.setItem(nameSearch, JSON.stringify(obj))\n    setSaveSearch(false)\n  }\n\n  return (\n    <div className='modal'>\n      <div className='modal-elements'>\n        <h1 className=''>Lagre sÃ¸k</h1>\n        <h2>Filter</h2>\n        {structure.map((item) => {\n          item.main === category &&\n            item.children.map(\n              (it) => (it.code === categorycpv ? <h3>{it.name}</h3> : '')\n              // (it) => it.code === categorycpv && <h3>{it.name}</h3>\n            )\n        })}\n\n        <p>{category}</p>\n\n        <h2>Navngi sÃ¸k *</h2>\n        <input\n          type='text'\n          placeholder='Navngi sÃ¸k'\n          onChange={handleChange}\n        ></input>\n        <div>\n          <input type='checkbox' defaultChecked></input>\n          <label>Ja, jeg Ã¸nsker Ã¥ motta e-post med varsel om nye anbud</label>\n        </div>\n        <div>\n          <button onClick={handleClick}>Lagre sÃ¸k</button>\n          <button onClick={() => setSaveSearch(false)}>Avbryt</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SaveSearch\n","/Users/vilgeir/Desktop/doffindata/src/components/Search.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/SearchData.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/AlgoliaSearch.jsx",["140","141","142","143","144","145"],"/Users/vilgeir/Desktop/doffindata/src/context/StateProvider.js",[],"/Users/vilgeir/Desktop/doffindata/src/components/Header.jsx",[],"/Users/vilgeir/Desktop/doffindata/src/components/SavedModal.jsx",["146","147","148"],"import React, { useContext, useEffect, useState } from 'react'\nimport structure from '../data/withMainCategories'\nimport { Link } from 'react-router-dom'\nimport { StateContext } from '../context/StateProvider'\n\nfunction SavedModal() {\n  const { checkedCategories, setcheckedCategories } = useContext(StateContext)\n  const [saved, setSaved] = useState([])\n  let arr = Object.keys(localStorage).filter(\n    (elem) => elem !== 'ally-supports-cache' && elem !== 'lastSearch'\n  )\n  useEffect(() => {\n    arr.map((elem) =>\n      setSaved((prevstate) => [\n        ...prevstate,\n        { [elem]: JSON.parse(localStorage.getItem(elem)) },\n      ])\n    )\n  }, [])\n\n  const handleClick = (i) => {\n    Object.values(i).map(\n      (item) =>\n        item.checkedCategories && setcheckedCategories(item.checkedCategories)\n    )\n  }\n  return (\n    <div className='saved-modal'>\n      <h4>Mine lagrede sÃ¸k</h4>\n      {saved.map((i, index) => (\n        <Link\n          to={\n            '/' + Object.values(i)[0].category + '/' + Object.values(i)[0].cpv\n          }\n          key={index}\n          className='saved-modal-item'\n          onClick={() => handleClick(i)}\n        >\n          {Object.keys(i)[0]}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default SavedModal\n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":14},{"ruleId":"153","severity":1,"message":"157","line":9,"column":11,"nodeType":"155","messageId":"156","endLine":9,"endColumn":28},{"ruleId":"158","severity":1,"message":"159","line":14,"column":6,"nodeType":"160","endLine":14,"endColumn":8,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"162","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":14},{"ruleId":"153","severity":1,"message":"163","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":18},{"ruleId":"153","severity":1,"message":"164","line":24,"column":10,"nodeType":"155","messageId":"156","endLine":24,"endColumn":15},{"ruleId":"153","severity":1,"message":"165","line":25,"column":10,"nodeType":"155","messageId":"156","endLine":25,"endColumn":20},{"ruleId":"153","severity":1,"message":"166","line":26,"column":29,"nodeType":"155","messageId":"156","endLine":26,"endColumn":49},{"ruleId":"158","severity":1,"message":"167","line":41,"column":6,"nodeType":"160","endLine":41,"endColumn":8,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":47,"column":9,"nodeType":"155","messageId":"156","endLine":47,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":54,"column":45,"nodeType":"172","messageId":"173","endLine":54,"endColumn":46},{"ruleId":"170","severity":1,"message":"171","line":55,"column":27,"nodeType":"172","messageId":"173","endLine":55,"endColumn":28},{"ruleId":"158","severity":1,"message":"174","line":13,"column":6,"nodeType":"160","endLine":13,"endColumn":8,"suggestions":"175"},{"ruleId":"153","severity":1,"message":"176","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":12},{"ruleId":"153","severity":1,"message":"177","line":9,"column":10,"nodeType":"155","messageId":"156","endLine":9,"endColumn":17},{"ruleId":"158","severity":1,"message":"178","line":43,"column":6,"nodeType":"160","endLine":43,"endColumn":25,"suggestions":"179"},{"ruleId":"158","severity":1,"message":"180","line":52,"column":6,"nodeType":"160","endLine":52,"endColumn":8,"suggestions":"181"},{"ruleId":"158","severity":1,"message":"182","line":99,"column":6,"nodeType":"160","endLine":99,"endColumn":15,"suggestions":"183"},{"ruleId":"153","severity":1,"message":"184","line":124,"column":9,"nodeType":"155","messageId":"156","endLine":124,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":137,"column":50,"nodeType":"187","messageId":"188","endLine":137,"endColumn":52},{"ruleId":"153","severity":1,"message":"189","line":32,"column":13,"nodeType":"155","messageId":"156","endLine":32,"endColumn":16},{"ruleId":"153","severity":1,"message":"190","line":9,"column":9,"nodeType":"155","messageId":"156","endLine":9,"endColumn":16},{"ruleId":"153","severity":1,"message":"191","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":20},{"ruleId":"153","severity":1,"message":"192","line":12,"column":17,"nodeType":"155","messageId":"156","endLine":12,"endColumn":25},{"ruleId":"153","severity":1,"message":"157","line":14,"column":11,"nodeType":"155","messageId":"156","endLine":14,"endColumn":28},{"ruleId":"153","severity":1,"message":"193","line":16,"column":7,"nodeType":"155","messageId":"156","endLine":16,"endColumn":15},{"ruleId":"153","severity":1,"message":"189","line":17,"column":7,"nodeType":"155","messageId":"156","endLine":17,"endColumn":10},{"ruleId":"153","severity":1,"message":"194","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":29,"column":48,"nodeType":"187","messageId":"188","endLine":29,"endColumn":50},{"ruleId":"158","severity":1,"message":"195","line":58,"column":6,"nodeType":"160","endLine":58,"endColumn":21,"suggestions":"196"},{"ruleId":"153","severity":1,"message":"197","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":32,"column":31,"nodeType":"200","messageId":"201","endLine":32,"endColumn":33},{"ruleId":"153","severity":1,"message":"197","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"202","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"203","line":5,"column":3,"nodeType":"155","messageId":"156","endLine":5,"endColumn":16},{"ruleId":"153","severity":1,"message":"204","line":6,"column":3,"nodeType":"155","messageId":"156","endLine":6,"endColumn":12},{"ruleId":"153","severity":1,"message":"205","line":7,"column":3,"nodeType":"155","messageId":"156","endLine":7,"endColumn":7},{"ruleId":"153","severity":1,"message":"206","line":8,"column":3,"nodeType":"155","messageId":"156","endLine":8,"endColumn":22},{"ruleId":"153","severity":1,"message":"207","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":7,"column":11,"nodeType":"155","messageId":"156","endLine":7,"endColumn":28},{"ruleId":"158","severity":1,"message":"208","line":19,"column":6,"nodeType":"160","endLine":19,"endColumn":8,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'checkedCategories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setcheckedCategories'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'Search' is defined but never used.","'SearchData' is defined but never used.","'input' is assigned a value but never used.","'searchData' is assigned a value but never used.","'setSearchDataDefault' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mainCpv'. Either include it or remove the dependency array.",["213"],"'updateInput' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'procurement'. Either include it or remove the dependency array.",["214"],"'data' is defined but never used.","'getData' is defined but never used.","React Hook useEffect has missing dependencies: 'category' and 'categorycpv'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'setcheckedCategories' and 'subcategory'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'categorycpv' and 'documents'. Either include them or remove the dependency array.",["217"],"'handleChange' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'arr' is assigned a value but never used.","'reverse' is assigned a value but never used.","'ScrollArea' is defined but never used.","'setSaved' is assigned a value but never used.","'category' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setChecked'. Either include it or remove the dependency array. If 'setChecked' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'InstantSearch' is defined but never used.","'SearchBox' is defined but never used.","'Hits' is defined but never used.","'connectAutoComplete' is defined but never used.","'structure' is defined but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [setcheckedCategories]",{"range":"236","text":"237"},"Update the dependencies array to be: [mainCpv]",{"range":"238","text":"239"},"Update the dependencies array to be: [procurement]",{"range":"240","text":"241"},"Update the dependencies array to be: [category, categorycpv, checkedCategories]",{"range":"242","text":"243"},"Update the dependencies array to be: [setcheckedCategories, subcategory]",{"range":"244","text":"245"},"Update the dependencies array to be: [categorycpv, checked, documents]",{"range":"246","text":"247"},"Update the dependencies array to be: [removeChecked, setChecked]",{"range":"248","text":"249"},"Update the dependencies array to be: [arr]",{"range":"250","text":"251"},[481,483],"[setcheckedCategories]",[1664,1666],"[mainCpv]",[465,467],"[procurement]",[1481,1500],"[category, categorycpv, checkedCategories]",[1751,1753],"[setcheckedCategories, subcategory]",[3011,3020],"[categorycpv, checked, documents]",[1600,1615],"[removeChecked, setChecked]",[651,653],"[arr]"]