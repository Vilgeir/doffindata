[{"/Users/evy/Documents/GitHub/doffindata/src/index.js":"1","/Users/evy/Documents/GitHub/doffindata/src/App.js":"2","/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js":"3","/Users/evy/Documents/GitHub/doffindata/src/context/StateProvider.js":"4","/Users/evy/Documents/GitHub/doffindata/src/components/Footer.jsx":"5","/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx":"6","/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx":"7","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx":"8","/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx":"9","/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx":"10","/Users/evy/Documents/GitHub/doffindata/src/helpers/functions.js":"11","/Users/evy/Documents/GitHub/doffindata/src/helpers/handleData.js":"12","/Users/evy/Documents/GitHub/doffindata/src/components/CategoryCards.jsx":"13","/Users/evy/Documents/GitHub/doffindata/src/components/AlgoliaSearch.jsx":"14","/Users/evy/Documents/GitHub/doffindata/src/components/homeIcons.jsx":"15","/Users/evy/Documents/GitHub/doffindata/src/components/SavedSearch.jsx":"16","/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx":"17","/Users/evy/Documents/GitHub/doffindata/src/components/Card.jsx":"18","/Users/evy/Documents/GitHub/doffindata/src/components/SaveSearch.jsx":"19","/Users/evy/Documents/GitHub/doffindata/src/data/withMainCategories.jsx":"20","/Users/evy/Documents/GitHub/doffindata/src/firebaseConfig.js":"21","/Users/evy/Documents/GitHub/doffindata/src/data/fylker.jsx":"22","/Users/evy/Documents/GitHub/doffindata/src/components/SavedModal.jsx":"23","/Users/evy/Documents/GitHub/doffindata/src/components/Checkboxes.jsx":"24","/Users/evy/Documents/GitHub/doffindata/src/data/withNorwegianNames.jsx":"25","/Users/evy/Documents/GitHub/doffindata/src/components/Breadcrums.jsx":"26"},{"size":596,"mtime":1619693291852,"results":"27","hashOfConfig":"28"},{"size":1154,"mtime":1620026780699,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1613323008891,"results":"30","hashOfConfig":"28"},{"size":785,"mtime":1620122546316,"results":"31","hashOfConfig":"28"},{"size":400,"mtime":1619430230383,"results":"32","hashOfConfig":"28"},{"size":480,"mtime":1619430230383,"results":"33","hashOfConfig":"28"},{"size":1834,"mtime":1620434258655,"results":"34","hashOfConfig":"28"},{"size":4877,"mtime":1620434180552,"results":"35","hashOfConfig":"28"},{"size":960,"mtime":1620434240936,"results":"36","hashOfConfig":"28"},{"size":5516,"mtime":1620434444039,"results":"37","hashOfConfig":"28"},{"size":2431,"mtime":1620410865297,"results":"38","hashOfConfig":"28"},{"size":1514,"mtime":1620432626803,"results":"39","hashOfConfig":"28"},{"size":693,"mtime":1620300958423,"results":"40","hashOfConfig":"28"},{"size":2401,"mtime":1620402768533,"results":"41","hashOfConfig":"28"},{"size":868,"mtime":1620398492928,"results":"42","hashOfConfig":"28"},{"size":3618,"mtime":1620398492927,"results":"43","hashOfConfig":"28"},{"size":10112,"mtime":1620402894907,"results":"44","hashOfConfig":"28"},{"size":872,"mtime":1620402768534,"results":"45","hashOfConfig":"28"},{"size":1600,"mtime":1620402768535,"results":"46","hashOfConfig":"28"},{"size":213077,"mtime":1615726505677,"results":"47","hashOfConfig":"48"},{"size":620,"mtime":1620402399247,"results":"49","hashOfConfig":"28"},{"size":405,"mtime":1615191349970,"results":"50","hashOfConfig":"28"},{"size":1251,"mtime":1620402768535,"results":"51","hashOfConfig":"28"},{"size":272,"mtime":1620300958424,"results":"52","hashOfConfig":"28"},{"size":215211,"mtime":1620114835984,"results":"53","hashOfConfig":"28"},{"size":923,"mtime":1620434070143,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"5s57ed",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tv5mr7",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evy/Documents/GitHub/doffindata/src/index.js",[],["109","110"],"/Users/evy/Documents/GitHub/doffindata/src/App.js",[],"/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/evy/Documents/GitHub/doffindata/src/context/StateProvider.js",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Footer.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Header.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/Categories.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedInfo.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/Home.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/pages/DetailedList.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/helpers/functions.js",[],"/Users/evy/Documents/GitHub/doffindata/src/helpers/handleData.js",[],"/Users/evy/Documents/GitHub/doffindata/src/components/CategoryCards.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/AlgoliaSearch.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/homeIcons.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SavedSearch.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Filter.jsx",["111"],"import React, { useContext, useEffect, useState } from 'react'\nimport structure from '../data/withNorwegianNames'\nimport fylker from '../data/fylker'\n\nimport {\n  faArrowLeft,\n  faChevronDown,\n  faChevronUp,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkboxes from './Checkboxes'\nimport { Link } from 'react-router-dom'\nimport SavedModal from '../components/SavedModal'\nimport AlgoliaSearch from '../components/AlgoliaSearch'\nimport { StateContext } from '../context/StateProvider'\nimport { capitalizeAndReplace } from '../helpers/functions'\n\nfunction Filter({\n  category,\n  details,\n  subcategory,\n  removeChecked,\n  checked,\n  setChecked,\n  setSaveSearch,\n  setOpenModal,\n  openModal,\n  fylkerKommuner,\n}) {\n  const {\n    checkedCategories,\n    setcheckedCategories,\n    checkedFylker,\n    setCheckedFylker,\n    kommuner,\n    setKommuner,\n  } = useContext(StateContext)\n  const [openCategory, setOpenCategory] = useState(true)\n  const [openCounty, setOpenCounty] = useState(true)\n\n  const handleClick = (e) => {\n    checkedCategories.map(\n      (i) =>\n        Object.keys(i).join() === e.target.value &&\n        setcheckedCategories((prevstate) => [\n          ...prevstate.filter(\n            (item) => Object.keys(item).join() != [e.target.value]\n          ),\n        ])\n    )\n    e.target.checked === true &&\n      setcheckedCategories((prevState) => [\n        ...prevState,\n        { [e.target.value]: [] },\n      ])\n    handleCheck(e)\n  }\n\n  useEffect(() => {\n    removeChecked.length === 8 &&\n      setChecked((prevState) => {\n        if (prevState.includes(removeChecked)) {\n          if (removeChecked.substring(3, 8).includes('00000')) {\n            return [\n              ...prevState.filter(\n                (i) => i.substring(0, 3) !== removeChecked.substring(0, 3)\n              ),\n            ]\n          }\n          return [...prevState.filter((i) => i !== removeChecked)]\n        } else {\n          return [...prevState, removeChecked]\n        }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [removeChecked])\n\n  const removeFilters = () => {\n    setcheckedCategories([])\n    setChecked([])\n    setKommuner([])\n    setCheckedFylker([])\n  }\n\n  const handleCheck = (e) => {\n    setChecked((prevState) =>\n      prevState.includes(e.target.value)\n        ? [...prevState.filter((i) => i !== e.target.value)]\n        : [...prevState, e.target.value]\n    )\n  }\n\n  useEffect(() => {\n    let flereFylker = kommuner.flat().map((x) => x.Fylke)\n    setCheckedFylker([...new Set(flereFylker)])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [kommuner])\n\n  const handleClickFylker = (e) => {\n    if (\n      kommuner\n        .flat()\n        .map((kom) => kom.Fylke)\n        .includes(e.target.value)\n    ) {\n      setKommuner((prev) => [\n        ...prev.flat().filter((p) => p.Fylke !== e.target.value),\n      ])\n    } else {\n      setKommuner((prev) => [\n        ...prev,\n        fylkerKommuner.filter((i) => i.Fylke === e.target.value),\n      ])\n    }\n  }\n\n  const handleChange = (e) => {\n    e.target.checked === false &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0].filter(\n                    (item) => item !== e.target.value\n                  ),\n                ],\n              }\n            : i\n        )\n      )\n\n    e.target.checked === true &&\n      setcheckedCategories((prevState) =>\n        prevState.map((i) =>\n          Object.keys(i).join().substring(0, 3) ===\n          e.target.value.substring(0, 3)\n            ? {\n                [Object.keys(i).join()]: [\n                  ...Object.values(i)[0],\n                  e.target.value,\n                ],\n              }\n            : i\n        )\n      )\n    handleCheck(e)\n  }\n\n  return (\n    <div className='filter-container'>\n      <div className='save-search'>\n        <button className='button' onClick={() => setSaveSearch(true)}>\n          Lagre søk\n        </button>\n        <div onClick={() => setOpenModal((prev) => !prev)}>\n          <p>\n            Du har{' '}\n            <b>\n              {localStorage.length === 0\n                ? localStorage.length\n                : localStorage.length - 1}{' '}\n              {localStorage.length === 2 ? 'lagret' : 'lagrede'} søk\n            </b>{' '}\n            <FontAwesomeIcon icon={faChevronDown} />\n          </p>{' '}\n        </div>\n      </div>\n      {openModal && <SavedModal />}\n      <div className='search-filter'>\n        <AlgoliaSearch />\n      </div>\n      <div className='filter-navigation'>\n        <Link className='go-back' to={'/' + category}>\n          <FontAwesomeIcon icon={faArrowLeft} />{' '}\n          {capitalizeAndReplace(category)}\n        </Link>\n        {(checkedCategories.length > 0 || checkedFylker.length > 0) && (\n          <button className='cpv-button' onClick={removeFilters}>\n            Nullstill filter\n          </button>\n        )}\n      </div>\n\n      <div\n        onClick={() => setOpenCategory((prev) => !prev)}\n        className='filter-header'\n      >\n        <h4>Kategorier </h4>\n        {openCategory ? (\n          <FontAwesomeIcon icon={faChevronUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronDown} />\n        )}\n      </div>\n      {openCategory && (\n        <div className='check-container'>\n          {structure.map(\n            (it) =>\n              it.main === capitalizeAndReplace(category) &&\n              it.children.map(\n                (i) =>\n                  i.code === details &&\n                  i.children.map((item, i) => (\n                    <div className='checkboxes' key={i}>\n                      {subcategory && subcategory === item.code ? (\n                        <div>\n                          <div>\n                            <Checkboxes\n                              value={item.code}\n                              onChange={handleClick}\n                              className={'checkbox'}\n                              checked={\n                                checked.includes(item.code) ? true : false\n                              }\n                            />\n\n                            <label className='check-label'>\n                              {item.name} ({item.countWithChildren})\n                            </label>\n                          </div>\n\n                          {checkedCategories.map(\n                            (check) =>\n                              Object.keys(check).includes(item.code) &&\n                              item.children.map((it, index) => (\n                                <div className='subcheckboxes' key={index}>\n                                  <Checkboxes\n                                    value={it.code}\n                                    onChange={handleChange}\n                                    className={'checkbox'}\n                                    checked={\n                                      checked.includes(it.code) ? true : false\n                                    }\n                                  />\n                                  <label className='check-label'>\n                                    {it.name} ({it.countWithChildren})\n                                  </label>\n                                </div>\n                              ))\n                          )}\n                        </div>\n                      ) : (\n                        <>\n                          <Checkboxes\n                            value={item.code}\n                            onChange={handleClick}\n                            className={'checkbox'}\n                            // handleCheck={handleCheck}\n                            key={i}\n                            checked={checked.includes(item.code) ? true : false}\n                          />\n                          <label className='check-label'>\n                            {item.name} ({item.countWithChildren})\n                          </label>\n                          {checkedCategories.map(\n                            (check) =>\n                              Object.keys(check).includes(item.code) &&\n                              item.children.map((it, index) => (\n                                <div className='subcheckboxes' key={index}>\n                                  <Checkboxes\n                                    value={it.code}\n                                    onChange={handleChange}\n                                    className={'checkbox'}\n                                    // handleCheck={handleCheck}\n                                    checked={\n                                      checked.includes(it.code) ? true : false\n                                    }\n                                  />\n                                  <label className='check-label'>\n                                    {it.name} ({it.countWithChildren})\n                                  </label>\n                                </div>\n                              ))\n                          )}\n                        </>\n                      )}\n                    </div>\n                  ))\n              )\n          )}\n        </div>\n      )}\n\n      <div\n        onClick={() => setOpenCounty((prev) => !prev)}\n        className='filter-header'\n      >\n        <h4>Fylker </h4>\n        {openCounty ? (\n          <FontAwesomeIcon icon={faChevronUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronDown} />\n        )}\n      </div>\n      {openCounty &&\n        fylker.map((item, i) => (\n          <div className='checkboxes' key={i}>\n            <input\n              type='checkbox'\n              onChange={handleClickFylker}\n              value={item.navn}\n              checked={checkedFylker.includes(item.navn) ? true : false}\n            ></input>\n            <label>{item.navn}</label>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/evy/Documents/GitHub/doffindata/src/components/Card.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SaveSearch.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/data/withMainCategories.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/firebaseConfig.js",[],"/Users/evy/Documents/GitHub/doffindata/src/data/fylker.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/SavedModal.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Checkboxes.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/data/withNorwegianNames.jsx",[],"/Users/evy/Documents/GitHub/doffindata/src/components/Breadcrums.jsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":47,"column":48,"nodeType":"118","messageId":"119","endLine":47,"endColumn":50},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]