[{"/Users/evy/Documents/GitHub/doffindata/src/index.js":"1","/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js":"2","/Users/evy/Documents/GitHub/doffindata/src/App.js":"3","/Users/evy/Documents/GitHub/doffindata/src/Home.js":"4"},{"size":501,"mtime":1613323008891,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1613323008891,"results":"7","hashOfConfig":"6"},{"size":830,"mtime":1614000561422,"results":"8","hashOfConfig":"6"},{"size":5564,"mtime":1614090061461,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"5s57ed",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/evy/Documents/GitHub/doffindata/src/index.js",[],["21","22"],"/Users/evy/Documents/GitHub/doffindata/src/reportWebVitals.js",[],"/Users/evy/Documents/GitHub/doffindata/src/App.js",["23","24","25"],"import React, { useEffect, useState } from 'react'\nimport logo from './logo.svg'\nimport Home from './Home'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nimport jsonData from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\nfunction App() {\n  const [cpvCount, setCpvCount] = useState({})\n\n  useEffect(() => {\n    let cpvNumbers = Object.values(jsonData).map((js) => js.cpvnumber)\n\n    let firstTwo = cpvNumbers.map((js) => js.split('').slice(0, 2).join(''))\n    let count = {}\n    firstTwo.forEach((i) => (count[i] = (count[i] || 0) + 1))\n    // console.log(Object.keys(count))\n    setCpvCount(count)\n  }, [])\n\n  return <Home cpvCount={cpvCount}></Home>\n}\n\nexport default App\n","/Users/evy/Documents/GitHub/doffindata/src/Home.js",["26","27","28","29","30","31","32","33","34","35"],"import React, { useEffect, useState } from 'react'\nimport cpvMain from './cpvmain.json'\nimport CPVcodes from './data/cpv.json'\nimport logo from './logo.svg'\nimport count from './data/count.json'\nimport data from './data/doffin-bach-default-rtdb-F02_2014-export.json'\nimport './App.css'\nimport { firebase } from '@firebase/app'\nimport { DataGrid } from '@material-ui/data-grid'\nrequire('firebase/auth')\nrequire('firebase/database')\nrequire('firebase/firestore')\n\nfunction Home() {\n  const firebaseConfig = {\n    apiKey: 'AIzaSyCMDIwwubzh4Xt6nujcK65akULxjgHnT3E',\n    authDomain: 'doffin-bach.firebaseapp.com',\n    databaseURL:\n      'https://doffin-bach-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'doffin-bach',\n    storageBucket: 'doffin-bach.appspot.com',\n    messagingSenderId: '16468608817',\n    appId: '1:16468608817:web:f708022a44a453b4ca1210',\n    measurementId: 'G-QXSYS06S5N',\n  }\n  const [form, setForm] = useState([])\n  const [cpvstate, setCpv] = useState(null)\n  const [subkat, setSubKat] = useState()\n  const [cpvName, setCpvName] = useState([])\n  const [cpvNameSUBSUB, setCpvNameSUBSUB] = useState([])\n  const [chooseSubkat, setChooseSubkat] = useState()\n  const [subSubKat, setSubSubkat] = useState()\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig)\n  }\n\n  useEffect(() => {\n    let arr = []\n    if (subSubKat) {\n      let hello = Object.keys(subSubKat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 4))\n\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvNameSUBSUB(newArr)\n    }\n  }, [subSubKat])\n\n  useEffect(() => {\n    setSubSubkat(newCount[chooseSubkat])\n  }, [chooseSubkat])\n\n  console.log(chooseSubkat)\n  console.log(subSubKat)\n  useEffect(() => {\n    let arr = []\n    if (subkat) {\n      let hello = Object.keys(subkat).filter((e) => e.length === 8)\n      console.log(hello)\n      let test2 = hello.map((item) => item.slice(0, 3))\n      // console.log(test2)\n      for (let [k, v] of Object.entries(CPVcodes)) {\n        hello.includes(k) && arr.push([v, k])\n      }\n      console.log(arr)\n\n      let newArr = arr.filter(\n        (value, index, arr) => arr.indexOf(value) == index\n      )\n      setCpvName(newArr)\n    }\n  }, [subkat])\n\n  useEffect(() => {\n    setSubKat(newCount[cpvstate])\n  }, [cpvstate])\n\n  const handleClick = (e) => setChooseSubkat(e.target.value)\n\n  const handleChange = (e) => setCpv(e.target.value)\n\n  // let db = firebase.firestore()\n\n  // useEffect(() => {\n  //   setForm([])\n  //   db.collection('F02_2014')\n  //     .limit(10)\n  //     .where('object.cpvmain', '==', cpv)\n  //     .get()\n  //     .then((querySnapshot) => {\n  //       querySnapshot.forEach((doc) => {\n  //         let newArr = Object.values(doc.data())[0]\n  //         // setForm([newArr])\n  //         setForm((prevState) => [...prevState, newArr])\n  //       })\n  //     })\n  // }, [cpv])\n\n  const gridStyle = { minHeight: 550 }\n  const columns = [\n    { field: 'bedrift', headerName: 'Bedrift', width: 200 },\n    { field: 'beskrivelse', headerName: 'Beskrivelse', width: 700 },\n    { field: 'cpv', headerName: 'CPV', width: 200 },\n    { field: 'cpvmain', headerName: 'CPV Kategori', width: 200 },\n    { field: 'dato', headerName: 'Dato', width: 120 },\n    { field: 'kategori', headerName: 'Kategori', width: 200 },\n    { field: 'subkategori', headerName: 'Sub kategori', width: 300 },\n  ]\n\n  let newCount = Object.values(count)[0]\n  let testData = Object.values(data)[0]\n\n  //  Cloudfunction i firebase\n  // 52, 102, 02, 12, 21,\n  let rows\n  form\n    ? (rows = form.map((item, i) => {\n        return {\n          id: i,\n          bedrift: item.bedrift,\n          beskrivelse: item.beskrivelse,\n          cpvmain: item.cpvmain,\n          cpv: item.cpv,\n          dato: item.dato,\n          kategori: item.kategorier,\n          subkategori: item.subkategori,\n        }\n      }))\n    : (rows = [\n        {\n          id: 520982058,\n          bedrift: 'Loading...',\n          beskrivelse: 'Loading...',\n          cpvmain: 'Loading...',\n          cpv: 'Loading...',\n          dato: 'Loading...',\n          kategori: 'Loading...',\n          subkategori: 'Loading...',\n        },\n      ])\n\n  return (\n    <div className='App'>\n      <h1>Form: F02_2014</h1>\n      <label for='cpvmain'>Velg en kategori:</label>\n      <select name='cpvmain' id='cpvmain' onChange={handleChange}>\n        <option value='' disabled selected>\n          Velg hovedkategori\n        </option>\n\n        {cpvMain.map((item) => (\n          <option value={item.cpv.substring(0, 2) + '000000'}>\n            {item.cpvmain} (\n            {newCount[item.cpv.substring(0, 2) + '000000'].count})\n            {item.cpv.substring(0, 2) + '000000'}\n          </option>\n        ))}\n      </select>\n      <div className='buttons'>\n        {cpvName\n          ? cpvName.map((e) => (\n              <button className='button' value={e[1]} onClick={handleClick}>\n                {e[0]} ({newCount[e[1].substring(0, 2) + '000000'][e[1]].count})\n              </button>\n            ))\n          : ''}\n      </div>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          idProperty='id'\n          rowHeight={100}\n          columns={columns}\n          rows={rows}\n          multiline={true}\n          style={gridStyle}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":18},{"ruleId":"40","severity":1,"message":"45","line":6,"column":10,"nodeType":"42","messageId":"43","endLine":6,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":12},{"ruleId":"40","severity":1,"message":"46","line":26,"column":16,"nodeType":"42","messageId":"43","endLine":26,"endColumn":23},{"ruleId":"40","severity":1,"message":"47","line":30,"column":10,"nodeType":"42","messageId":"43","endLine":30,"endColumn":23},{"ruleId":"40","severity":1,"message":"48","line":43,"column":11,"nodeType":"42","messageId":"43","endLine":43,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":51,"column":51,"nodeType":"51","messageId":"52","endLine":51,"endColumn":53},{"ruleId":"53","severity":1,"message":"54","line":59,"column":6,"nodeType":"55","endLine":59,"endColumn":20,"suggestions":"56"},{"ruleId":"40","severity":1,"message":"48","line":68,"column":11,"nodeType":"42","messageId":"43","endLine":68,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":76,"column":51,"nodeType":"51","messageId":"52","endLine":76,"endColumn":53},{"ruleId":"53","severity":1,"message":"54","line":84,"column":6,"nodeType":"55","endLine":84,"endColumn":16,"suggestions":"57"},{"ruleId":"40","severity":1,"message":"58","line":119,"column":7,"nodeType":"42","messageId":"43","endLine":119,"endColumn":15},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'DataGrid' is defined but never used.","'setForm' is assigned a value but never used.","'cpvNameSUBSUB' is assigned a value but never used.","'test2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newCount'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"'testData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [chooseSubkat, newCount]",{"range":"67","text":"68"},"Update the dependencies array to be: [cpvstate, newCount]",{"range":"69","text":"70"},[1878,1892],"[chooseSubkat, newCount]",[2515,2525],"[cpvstate, newCount]"]